{"version":3,"sources":["components/MeasurementForm.js","components/Footer.js","components/HeroSegment.js","components/cards/OpenSourceCard.js","components/cards/AwardWinningCard.js","components/cards/GetStartedCard.js","components/cards/GoldStandardCard.js","components/CardsSegment.js","components/chartThemes/themes.js","components/chartThemes/rcpchTheme1.js","components/chartThemes/rcpchTheme2.js","components/chartThemes/rcpchTheme3.js","components/chartThemes/rcpchThemeMonochrome.js","components/chartThemes/RCPCHThemeTraditionalBoy.js","components/chartThemes/RCPCHThemeTraditionalGirl.js","api/Chart.js","functions/deepCopy.js","components/SubComponents.js","components/MeasurementSegment.js","pages/Home.js","pages/Results.js","pages/Spreadsheet.js","components/SerialResultsTable.js","pages/SerialResults.js","components/MenuBar.js","components/HeaderBar.js","components/Technical.js","App.js","serviceWorker.js","index.js"],"names":["sexOptions","key","value","text","disabled","gestationWeeksOptions","gestWeeks","push","toString","gestationDaysOptions","references","measurementOptions","formatDate","inputDate","date","month","day","year","getTime","Date","getMonth","getDate","getFullYear","length","join","error","Error","parseDate","finalArray","split","map","element","index","madeNumber","Number","isNaN","workingDate","MeasurementForm","props","handleChangeReference","ref","data","callbackReturn","disableMeasurement","newSexOptions","state","setState","sex","observation_value_error","validateObservationValue","measurement","observation_value","reference","handleChangeSex","setMeasurementMethod","measurementMethod","newSex","measurement_method","disable","options","handleObservationChange","observation","birth_date","observation_date","units","gestation_weeks","gestation_days","birth_date_error","observation_date_error","form_valid","measurementResult","handleChangeDate","bind","handleChangeMeasurementMethod","handleSubmit","handleChangeGestation","handleResetCurrentGraph","handleUndoLast","event","this","target","name","newDate","observation_date_object","birth_date_object","timeInterval","measurementArray","formData","changeUnits","isTurner","success","setCommands","old","resetCurrent","undoLast","formIsValid","commands","clearMeasurement","newMeasurement","changeSex","Container","Segment","textAlign","Form","onSubmit","Field","Header","as","Select","onChange","placeholder","required","Input","label","type","Group","width","content","basic","color","labelPosition","Message","compact","Button","fluid","icon","onClick","React","Component","Footer","inverted","style","margin","padding","vertical","className","Grid","columns","divided","stackable","Row","Column","Icon","size","List","link","Item","href","celled","Content","Divider","section","horizontal","Image","circular","src","centered","HeroSegment","backgroundImage","backgroundSize","fontSize","OpenSourceCard","Card","Description","AwardWinningCard","GetStartedCard","extra","GoldStandardCard","CardsSegment","ChartTheme","chart","gridlines","axes","centiles","measurements","_chart","val","_gridlines","_axes","_centiles","_measurements","ChartObject","backgroundColour","height","titleStyle","subTitleStyle","tooltipBackgroundColour","tooltipStroke","tooltipTextStyle","termFill","termStroke","infoBoxFill","infoBoxStroke","infoBoxTextStyle","toggleButtonInactiveColour","toggleButtonActiveColour","toggleButtonTextColour","_backgroundColour","_width","_height","_padding","_titleStyle","_subTitleStyle","_tooltipBackgroundColour","_tooltipStroke","_tooltipTextStyle","_termFill","_termStroke","_infoBoxFill","_infoBoxStroke","_infoBoxTextStyle","_toggleButtonActiveColour","_toggleButtonInactiveColour","_toggleButtonTextColour","PaddingObject","left","right","top","bottom","_left","_right","_top","_bottom","TextStyleObject","colour","weight","_name","_colour","_size","_style","_weight","GridlineObject","stroke","strokeWidth","dashed","_stroke","_strokeWidth","_dashed","AxesObject","axisStroke","axisLabelTextStyle","tickLabelStyle","tickLabelTextStyle","_axisStroke","_axisLabelTextStyle","_tickLabelTexSize","CentilesObject","centileStroke","centileStrokeWidth","delayedPubertyAreaFill","_centileStroke","_centileStrokeWidth","_delayedPubertyAreaFill","MeasurementsObject","measurementFill","measurementStroke","measurementSize","_measurementFill","_measurementStroke","_measurementSize","tooltipBackGroundColour","RCPCHChart","RCPCHGridlines","RCPCHCentiles","RCPCHTheme1","RCPCHTheme2","axisLabelColour","RCPCHTheme3","RCPCHThemeMonochrome","RCPCHThemeTraditionalBoy","RCPCHThemeTraditionalGirl","ChartData","isLoading","titles","title","sexText","measurementText","subtitle","setTitle","Dimmer","active","Loader","measurementsArray","chartStyle","measurementStyle","centileStyle","gridlineStyle","axisStyle","enableZoom","deepCopyArray","arr","copy","forEach","elem","Array","isArray","deepCopyObject","obj","tempObj","Object","entries","deepCopy","input","Acknowledgements","TableBody","Fragment","Table","Cell","measurement_dates","chronological_calendar_age","corrected_calendar_age","child_observation_value","Math","round","measurement_calculated_values","corrected_sds","chronological_sds","corrected_centile","chronological_centile","ResultsSegment","apiResult","collapsing","HeaderCell","Body","bmi","ofc","ErrorModal","body","handleClose","visible","handleCancel","showCancel","Modal","open","closeOnEscape","Actions","negative","panesBlueprint","menuItem","measurementName","themeOptions","MeasurementSegment","activeIndex","defaultTheme","useState","setChartSyle","setAxisStyle","setCentileStyle","setMeasurementStyle","theme","setTheme","flip","setFlip","setDisabled","setReference","setSex","turner","setMeasurements","setAPIResult","errorModal","setErrorModal","setIsLoading","removeLast","useCallback","both","newMeasurements","pop","mutable","newApi","customSetMeasurementMethod","newMeasurementMethod","existingSex","handleTabChange","e","console","warn","ignoreError","existingResults","oldResult","selectedTheme","handleChangeTheme","panes","details","render","Tab","Pane","attached","Chart","TabPanes","menu","onTabChange","ThemeSelection","Dropdown","floating","inline","useEffect","fetchCentilesForMeasurement","singleMeasurement","a","url","process","REACT_APP_GROWTH_API_BASEURL","axios","method","headers","response","ignore","relevantArray","then","result","corrected_measurement_error","chronological_measurement_error","measurementError","workingArray","catch","errorForUser","message","padded","raised","results","errorString","latestResult","newGestation","errors","JSON","stringify","oldGestation","newArray","concat","newReference","birth_data","Flag","verticalAlign","withRouter","Results","handleItemClick","activeItem","location","calculations","chartData","Menu","tabular","Tables","DatesTable","dates","CentilesTable","item","estimated_date_delivery","chronological_decimal_age","corrected_decimal_age","PopupData","lay_comment","lay_decimal_age_comment","clinician_comment","clinician_decimal_age_comment","MeasurementCell","sds","centile","measurement_value","Popup","trigger","position","flowing","hoverable","Spreadsheet","uploadDisabled","csvFile","uploadData","removeFile","fileData","FormData","append","log","history","pathname","status","preventDefault","onDrop","acceptedFiles","accept","minSize","maxSize","getRootProps","getInputProps","isDragActive","isDragReject","Label","Or","SerialResultsTable","DataRow","toLocaleDateString","measurement_date","edd","childData","unique_child","MenuBar","borderless","toggleTechnical","HeaderBar","wrapped","Technical","Sidebar","animation","direction","technicalSidebarVisible","App","toggle","setToggle","exact","path","SerialResults","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7321dd45.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Container,\n  Segment,\n  Form,\n  Input,\n  Select,\n  Button,\n  Header,\n  Message,\n} from 'semantic-ui-react';\n\nconst sexOptions = [\n  { key: 'male', value: 'male', text: 'Boy', disabled: false },\n  { key: 'female', value: 'female', text: 'Girl', disabled: false },\n];\n\nlet gestationWeeksOptions = [];\nlet gestWeeks = 23;\nwhile (gestWeeks <= 42) {\n  gestationWeeksOptions.push({\n    key: gestWeeks.toString(10),\n    value: gestWeeks,\n    text: gestWeeks.toString(10),\n  });\n  gestWeeks++;\n}\n\nconst gestationDaysOptions = [\n  { key: '0', value: 0, text: '0' },\n  { key: '1', value: 1, text: '1' },\n  { key: '2', value: 2, text: '2' },\n  { key: '3', value: 3, text: '3' },\n  { key: '4', value: 4, text: '4' },\n  { key: '5', value: 5, text: '5' },\n  { key: '6', value: 6, text: '6' },\n];\n\nconst references = [\n  { key: 'uk-who', value: 'uk-who', text: 'UK-WHO' },\n  { key: 'trisomy-21', value: 'trisomy-21', text: \"Down's Syndrome\" },\n  { key: 'turner', value: 'turner', text: \"Turner's syndrome\" },\n];\n\nconst ROBERT_WADLOW = 272; // interesting fact - Robert Wadlow (22/2/1918 – 15/7/1940) was the world's tallest man\nconst JON_BROWER_MINNOCH = 635; // interesting fact -  Jon Brower Minnoch (Born USA) was the world's heaviest man\nconst KHALID_BIN_MOHSEN_SHAARI = 204; // Khalid bin Mohsen Shaari (2/8/1991) from Saudi Arabia had the highest recorded BMI\n\nconst measurementOptions = [\n  { key: 'height', value: 'height', text: 'Height (cm)', disabled: false },\n  { key: 'weight', value: 'weight', text: 'Weight (kg)', disabled: false },\n  { key: 'bmi', value: 'bmi', text: 'BMI (kg/m²)', disabled: false },\n  {\n    key: 'ofc',\n    value: 'ofc',\n    text: 'Head Circumference (cm)',\n    disabled: false,\n  },\n];\n\nconst formatDate = (inputDate) => {\n  let date;\n  let month;\n  let day;\n  let year;\n  try {\n    inputDate.getTime();\n    date = new Date(inputDate);\n    month = '' + (date.getMonth() + 1);\n    day = '' + date.getDate();\n    year = date.getFullYear();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  } catch (error) {\n    throw new Error('Input date for formatDate not recognised');\n  }\n};\n\nconst parseDate = (inputDate) => {\n  try {\n    const dateArray = inputDate.split('-');\n    const finalArray = dateArray.map((element, index) => {\n      if (element !== '') {\n        const madeNumber = Number(element);\n        if (Number.isNaN(madeNumber)) {\n          throw new Error();\n        } else {\n          return index === 1 ? madeNumber - 1 : madeNumber;\n        }\n      } else {\n        throw new Error();\n      }\n    });\n    if (\n      finalArray.length !== 3 ||\n      finalArray[1] < 0 ||\n      finalArray[1] > 11 ||\n      finalArray[2] < 1 ||\n      finalArray[2] > 31\n    ) {\n      throw new Error();\n    }\n    const workingDate = new Date(...finalArray);\n    if (typeof workingDate.getTime() === 'number') {\n      return workingDate;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n};\n\nclass MeasurementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birth_date: formatDate(new Date()),\n      observation_date: formatDate(new Date()),\n      measurement: {\n        observation_value: '',\n        units: 'cm',\n      },\n      sex: 'male',\n      gestation_weeks: 40,\n      gestation_days: 0,\n      birth_date_error: '',\n      observation_date_error: '',\n      observation_value_error: 'empty',\n      form_valid: false,\n      measurementResult: [],\n      reference: 'uk-who',\n      measurementOptions: measurementOptions,\n      sexOptions: sexOptions,\n    };\n\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeMeasurementMethod =\n      this.handleChangeMeasurementMethod.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeGestation = this.handleChangeGestation.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n    this.handleObservationChange = this.handleObservationChange.bind(this);\n    this.handleChangeReference = this.handleChangeReference.bind(this);\n    this.handleResetCurrentGraph = this.handleResetCurrentGraph.bind(this);\n    this.handleUndoLast = this.handleUndoLast.bind(this);\n  }\n\n  handleChangeReference = (ref, data) => {\n    //call back, returns new sex if already measurements charted with different sex\n    const callbackReturn = this.props.handleChangeReference(data.value);\n    if (data.value === 'turner') {\n      this.disableMeasurement('weight', true);\n      this.disableMeasurement('ofc', true);\n      this.disableMeasurement('bmi', true);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = true;\n      this.setState({\n        sex: 'female',\n        observation_value_error: this.validateObservationValue(\n          'height',\n          this.state.measurement.observation_value\n        ),\n        reference: data.value,\n        sexOptions: newSexOptions,\n      });\n      this.props.handleChangeSex('female', true);\n      this.props.setMeasurementMethod('height');\n    } else {\n      this.disableMeasurement('weight', false);\n      this.disableMeasurement('ofc', false);\n      this.disableMeasurement('bmi', false);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = false;\n      this.setState({\n        observation_value_error: this.validateObservationValue(\n          this.props.measurementMethod,\n          this.state.measurement.observation_value\n        ),\n        sex: callbackReturn.newSex,\n        reference: data.value,\n        sexOptions: newSexOptions,\n      });\n    }\n  };\n\n  disableMeasurement = (measurement_method, disable) => {\n    if (measurement_method === 'height') {\n      let options = this.state.measurementOptions;\n      options[0].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'weight') {\n      let options = this.state.measurementOptions;\n      options[1].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'ofc') {\n      let options = this.state.measurementOptions;\n      options[2].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'bmi') {\n      let options = this.state.measurementOptions;\n      options[3].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n  };\n\n  handleChangeDate(event) {\n    this.setState({ [event.target.name]: event.target.value });\n    const newDate = parseDate(event.target.value);\n    if (newDate) {\n      const observation_date_object =\n        event.target.name === 'birth_date'\n          ? parseDate(this.state.observation_date)\n          : newDate;\n      const birth_date_object =\n        event.target.name === 'birth_date'\n          ? newDate\n          : parseDate(this.state.birth_date);\n      const timeInterval =\n        observation_date_object.getTime() - birth_date_object.getTime();\n      if (timeInterval < 0) {\n        if (event.target.name === 'birth_date') {\n          this.setState({\n            birth_date_error:\n              'Date of birth cannot come after the date of measurement',\n          });\n        } else if (event.target.name === 'observation_date') {\n          this.setState({\n            observation_date_error:\n              'Date of measurement cannot come before the date of birth.',\n          });\n        }\n      } else if (timeInterval > 631139040000) {\n        this.setState({\n          [`${event.target.name}_error`]:\n            'No centile data exists over 20 years of age.',\n        });\n      } else {\n        this.setState({ birth_date_error: '', observation_date_error: '' });\n      }\n    } else {\n      this.setState({\n        [`${event.target.name}_error`]: 'Please enter a valid date.',\n      });\n    }\n  }\n\n  handleObservationChange = (observation, data) => {\n    // this is updating an observation value\n\n    const observation_value = data.value;\n    let { measurement, observation_value_error } = this.state;\n    measurement.observation_value = observation_value;\n    observation_value_error = this.validateObservationValue(\n      this.props.measurementMethod,\n      observation_value\n    );\n    this.setState({\n      measurement: measurement,\n      observation_value_error: observation_value_error,\n    });\n  };\n\n  validateObservationValue(measurement_method, observation_value) {\n    if (observation_value === '') {\n      return 'empty';\n    }\n    if (Number.isNaN(Number(observation_value))) {\n      return 'Please enter a valid number.';\n    }\n    if (measurement_method === 'height') {\n      if (observation_value < 20) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > ROBERT_WADLOW) {\n        return 'The ' + measurement_method + ' you entered is too tall.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'weight') {\n      if (observation_value < 0.01) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > JON_BROWER_MINNOCH) {\n        return 'The ' + measurement_method + ' you entered is too heavy.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'bmi') {\n      if (observation_value < 5) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > KHALID_BIN_MOHSEN_SHAARI) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'ofc') {\n      if (observation_value < 25) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > 70) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n  }\n\n  formIsValid() {\n    if (\n      this.state.reference === 'turner' &&\n      this.props.measurementMethod !== 'height'\n    ) {\n      return false;\n    }\n    if (\n      this.state.birth_date_error === '' &&\n      this.state.observation_date_error === '' &&\n      this.state.observation_value_error === ''\n    ) {\n      return true;\n    }\n  }\n\n  handleSubmit(event) {\n    // passes the form data back to the parent (measurement segment)\n    const measurementArray = [];\n    const formData = {\n      birth_date: this.state.birth_date,\n      observation_date: this.state.observation_date,\n      measurement_method: this.props.measurementMethod,\n      observation_value: this.state.measurement.observation_value,\n      gestation_weeks: this.state.gestation_weeks,\n      gestation_days: this.state.gestation_days,\n      sex: this.state.sex,\n    };\n    measurementArray.push(formData);\n    this.props.measurementResult(measurementArray);\n  }\n\n  handleChangeMeasurementMethod(event, data) {\n    let measurement = { ...this.state.measurement };\n    if (data.value !== this.props.measurementMethod) {\n      measurement.units = this.changeUnits(data.value);\n      this.props.setMeasurementMethod(data.value);\n      this.setState({\n        measurement: measurement,\n        observation_value_error: this.validateObservationValue(\n          data.value,\n          measurement.observation_value\n        ),\n      });\n      if (\n        this.state.reference === 'turner' &&\n        this.props.measurementMethod !== 'height'\n      ) {\n        this.disableMeasurement('weight', true);\n        this.disableMeasurement('bmi', true);\n        this.disableMeasurement('ofc', true);\n      } else {\n        this.disableMeasurement('weight', false);\n        this.disableMeasurement('bmi', false);\n        this.disableMeasurement('ofc', false);\n      }\n    }\n  }\n\n  handleChangeGestation(event, data) {\n    const { name, value } = data;\n    if (name === 'gestation_weeks') {\n      this.setState({ gestation_weeks: value });\n      if (value === 42) {\n        this.setState({ gestation_days: 0 });\n      }\n    } else if (name === 'gestation_days') {\n      if (this.state.gestation_weeks === 42) {\n        this.setState({ gestation_days: 0 });\n      } else {\n        this.setState({ gestation_days: value });\n      }\n    }\n  }\n\n  handleChangeSex(event, data, isTurner = false) {\n    const success = this.props.handleChangeSex(data.value, isTurner);\n    if (success) {\n      this.setState({ sex: data.value });\n    }\n  }\n\n  changeUnits(measurement_method) {\n    if (measurement_method === 'height') {\n      return 'cm';\n    }\n    if (measurement_method === 'weight') {\n      return 'kg';\n    }\n    if (measurement_method === 'bmi') {\n      return 'kg/m²';\n    }\n    if (measurement_method === 'ofc') {\n      return 'cm';\n    }\n  }\n\n  handleResetCurrentGraph() {\n    this.props.setCommands((old) => {\n      return { ...old, resetCurrent: true };\n    });\n  }\n\n  handleUndoLast() {\n    this.props.setCommands((old) => {\n      return { ...old, undoLast: true };\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.form_valid !== this.formIsValid()) {\n      this.setState({ form_valid: this.formIsValid() });\n    }\n    if (this.props.commands.clearMeasurement) {\n      const newMeasurement = { ...this.state.measurement };\n      newMeasurement.observation_value = '';\n      this.setState({\n        measurement: newMeasurement,\n        observation_value_error: 'empty',\n        form_valid: false,\n      });\n      this.props.setCommands((old) => {\n        return { ...old, clearMeasurement: false };\n      });\n    }\n    if (this.props.commands.changeSex) {\n      this.setState({ sex: this.state.sex === 'male' ? 'female' : 'male' });\n      this.props.setCommands((old) => {\n        return { ...old, changeSex: false };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment textAlign={'center'}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n              <Header as=\"h5\" textAlign=\"left\">\n                Reference\n              </Header>\n              <Select\n                name=\"reference\"\n                value={this.state.reference}\n                options={references}\n                onChange={this.handleChangeReference}\n                placeholder=\"Select reference\"\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Header as=\"h5\" textAlign=\"left\">\n                Dates\n              </Header>\n              <Input\n                label=\"Birth Date\"\n                type=\"date\"\n                name=\"birth_date\"\n                value={this.state.birth_date}\n                placeholder=\"Date of Birth\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Input\n                label=\"Measurement Date\"\n                type=\"date\"\n                name=\"observation_date\"\n                value={this.state.observation_date}\n                placeholder=\"Date of Measurement\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            {/* <Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Measurements\n            </Header>\n\n            <Form.Group>\n              <Form.Field required>\n                <Select\n                  value={this.props.measurementMethod}\n                  name=\"measurement_method\"\n                  placeholder=\"Measurement Type\"\n                  options={measurementOptions}\n                  onChange={this.handleChangeMeasurementMethod}\n                />\n              </Form.Field>\n              <Form.Field required width={8}>\n                <Input\n                  type=\"decimal\"\n                  name=\"observation_value\"\n                  placeholder=\"Measurement\"\n                  value={this.state.measurement.observation_value}\n                  label={{\n                    content: this.state.measurement.units.toString(),\n                    basic: true,\n                    color: 'blue',\n                  }}\n                  labelPosition=\"right\"\n                  onChange={this.handleObservationChange}\n                />\n              </Form.Field>\n            </Form.Group>\n            {this.state.observation_value_error &&\n              this.state.observation_value_error !== 'empty' && (\n                <Message color=\"red\">\n                  {this.state.observation_value_error}\n                </Message>\n              )}\n            {this.state.observation_date_error ? (\n              <Message color=\"red\">{this.state.observation_date_error}</Message>\n            ) : null}\n            {this.state.birth_date_error ? (\n              <Message color=\"red\">{this.state.birth_date_error}</Message>\n            ) : null}\n            {/* </Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Sex\n            </Header>\n            <Form.Field required>\n              <Select\n                name=\"sex\"\n                placeholder=\"Sex\"\n                value={this.state.sex}\n                onChange={this.handleChangeSex}\n                options={this.state.sexOptions}\n              />\n            </Form.Field>\n\n            <Form.Group>\n              <Form.Field>\n                <Header as=\"h5\" textAlign=\"left\">\n                  Gestation\n                </Header>\n                <span>\n                  <Select\n                    compact\n                    name=\"gestation_weeks\"\n                    value={this.state.gestation_weeks}\n                    options={gestationWeeksOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp;+\n                  <Select\n                    compact\n                    name=\"gestation_days\"\n                    value={this.state.gestation_days}\n                    options={gestationDaysOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp; weeks\n                </span>\n              </Form.Field>\n              {/* </Segment> */}\n            </Form.Group>\n\n            <Form.Field>\n              <Button\n                content=\"Calculate Centiles and Add To Chart\"\n                type=\"submit\"\n                fluid\n                disabled={!this.state.form_valid}\n                color=\"pink\"\n                icon=\"line graph\"\n                labelPosition=\"right\"\n              />\n            </Form.Field>\n          </Form>\n          <Segment>\n            <Button\n              content=\"Reset Chart\"\n              icon=\"power off\"\n              onClick={this.handleResetCurrentGraph}\n            />\n            <Button\n              content=\"Remove Last\"\n              icon=\"undo\"\n              onClick={this.handleUndoLast}\n            />\n          </Segment>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default MeasurementForm;\n","import React, { Component } from \"react\";\nimport {\n  Icon,\n  Image,\n  Segment,\n  List,\n  Grid,\n  Header,\n  Divider,\n  Container,\n} from \"semantic-ui-react\";\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <Segment\n        basic\n        inverted\n        style={{ margin: \"5em 0em 0em\", padding: \"5em 0em\" }}\n        vertical\n      >\n        <Container textAlign=\"center\" className=\"footer\">\n          <Grid columns={4} divided stackable inverted>\n            <Grid.Row>\n              <Grid.Column>\n                <Header inverted as=\"h4\" content=\"Source Code\" />\n                <Icon name=\"github\" size=\"big\" />\n                <List link inverted>\n                  <List.Item\n                    as=\"a\"\n                    href=\"https://github.com/rcpch/digital-growth-charts-react-client\"\n                  >\n                    React Demo Client\n                  </List.Item>\n                  <List.Item\n                    as=\"a\"\n                    href=\"https://github.com/rcpch/digital-growth-charts-react-chart-library\"\n                  >\n                    React Chart Component Library\n                  </List.Item>\n                  <List.Item\n                    as=\"a\"\n                    href=\"https://github.com/rcpch/digital-growth-charts-server\"\n                  >\n                    Digital Growth Charts API Server\n                  </List.Item>\n                  <List.Item\n                    as=\"a\"\n                    href=\"https://github.com/rcpch/growth-references\"\n                  >\n                    Growth References Repository\n                  </List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column>\n                <Header inverted as=\"h4\" content=\"Support\" />\n                <List celled inverted>\n                  <List.Item\n                    as=\"a\"\n                    href=\"https://join.slack.com/t/dpchrworkspace/shared_invite/zt-iz9ifaww-PWZ_3rfnsDaQxsvK9Wf51A\"\n                  >\n                    <List.Icon name=\"slack\" size=\"big\" />\n                  </List.Item>\n                  <List.Content>\n                    <List.Header>Slack</List.Header>\n                    Join the DPCHR Slack Workspace\n                  </List.Content>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column>\n                <Header inverted as=\"h4\" content=\"Group 3\" />\n                <List link inverted>\n                  <List.Item as=\"a\">Link One</List.Item>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n              <Grid.Column>\n                <Header inverted as=\"h4\" content=\"Group 4\" />\n                <List link inverted>\n                  <List.Item as=\"a\">Link One</List.Item>\n                  <List.Item as=\"a\">Link Two</List.Item>\n                  <List.Item as=\"a\">Link Three</List.Item>\n                  <List.Item as=\"a\">Link Four</List.Item>\n                </List>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid>\n          <Divider inverted section />\n\n          <List horizontal inverted divided link size=\"small\">\n            <List.Item as=\"a\" href=\"https://www.rcpch.ac.uk/\">\n              <Image\n                circular\n                src=\"dynamic-child-favicon.png\"\n                centered\n                size=\"mini\"\n              />\n            </List.Item>\n            <List.Item as=\"a\" href=\"https://www.rcpch.ac.uk/\">\n              © 2020-21 Copyright RCPCH\n            </List.Item>\n            <List.Item as=\"a\" href=\"#\">\n              dGC Privacy Policy\n            </List.Item>\n          </List>\n        </Container>\n      </Segment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport { Segment, Header } from \"semantic-ui-react\";\n\nexport class HeroSegment extends Component {\n  render() {\n    return (\n      <Segment\n        className=\"hero-segment\"\n        basic={true}\n        inverted={true}\n        color=\"blue\"\n        style={{\n          backgroundImage: `url(${\"dynamic-child-banner-wallpaper.png\"})`,\n          backgroundSize: \"cover\",\n        }}\n      >\n        <Header inverted as=\"h1\" style={{ fontSize: \"3em\" }}>\n          <p>Royal College of Paediatrics and Child Health</p>\n          <p>Digital Growth Charts</p>\n        </Header>\n        <Header inverted as=\"h3\">\n          A first-of-its-kind 'Best Practice As Code' innovation by the RCPCH.\n          Digital clinical tools provided to developers of clinician and patient\n          facing technology.\n          <a href=\"https://marcus-baw.medium.com/royal-colleges-3-0-best-practice-as-code-7065bce821a7\" className=\"royalcolleges\">\n            #royalcolleges3.0\n          </a>\n        </Header>\n        <Header inverted as=\"h2\">\n          Free basic access to all, fully open source, and sustainably managed\n          as a non-profit enterprise.\n        </Header>\n      </Segment>\n    );\n  }\n}\n\nexport default HeroSegment;\n","import React, { Component } from \"react\";\nimport { Card, Icon } from \"semantic-ui-react\";\n\nexport class OpenSourceCard extends Component {\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header as=\"h1\">\n            <Icon name=\"github\" size=\"huge\" />\n          </Card.Header>\n          <Card.Header>Open Source</Card.Header>\n          <Card.Description>\n            For transparency, accuracy, and maximum reuse, our Growth Charts API\n            and associated libraries are 100% open source. We welcome code\n            reviews, feedback, issues and pull requests.\n            <a href=\"https://github.com/rcpch\">Check us out on GitHub</a> -\n            we're the first Royal College to have clinical code in it's own\n            GitHub organisation!\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default OpenSourceCard;\n","import React, { Component } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\n\nexport class AwardWinningCard extends Component {\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header as=\"h1\">\n            <Image src=\"htn-awards-winner-2020-logo.jpg\" size=\"tiny\" />\n          </Card.Header>\n          <Card.Header>Award Winning</Card.Header>\n          <Card.Description>\n            Winner of\n            <a href=\"https://www.thehtn.co.uk/health-tech-awards-2020-live/\">\n              'Best Health Tech Solution' in the Health Tech Awards 2020\n            </a>\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default AwardWinningCard;\n","import React, { Component } from \"react\";\nimport { Button, Card, Icon, Image } from \"semantic-ui-react\";\n\nexport class GetStartedCard extends Component {\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header as=\"h1\">\n            <Image src=\"hammer.png\" size=\"tiny\" />\n          </Card.Header>\n          <Card.Header>Get Started</Card.Header>\n          <Card.Description>\n            Looking to integrate digital growth charts in your app? You need the\n            Developer portal and API documentation\n          </Card.Description>\n        </Card.Content>\n        <Card.Content extra>\n          <Button basic as=\"a\" href=\"https://dev.rcpch.ac.uk/\">\n            <Icon name=\"external\" />\n            Dev Portal & API Docs\n          </Button>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default GetStartedCard;\n","import React, { Component } from \"react\";\nimport { Card, Image } from \"semantic-ui-react\";\n\nexport class GoldStandardCard extends Component {\n  render() {\n    return (\n      <Card>\n        <Card.Content>\n          <Card.Header as=\"h1\">\n            <Image src=\"rcpch_logo.png\" size=\"tiny\" />\n          </Card.Header>\n          <Card.Header>Gold Standard</Card.Header>\n          <Card.Description>\n            Working with experts in growth monitoring, growth charts, centile\n            and SDS calculation, we've created an API that handles the heavy\n            lifting of child growth parameters. You get reliable, safe results\n            instantly.\n          </Card.Description>\n        </Card.Content>\n      </Card>\n    );\n  }\n}\n\nexport default GoldStandardCard;\n","import React, { Component } from \"react\";\nimport { Card, Segment } from \"semantic-ui-react\";\nimport { OpenSourceCard } from \"./cards/OpenSourceCard\";\nimport AwardWinningCard from \"./cards/AwardWinningCard\";\nimport GetStartedCard from \"./cards/GetStartedCard\";\nimport GoldStandardCard from \"./cards/GoldStandardCard\";\n\nexport class CardsSegment extends Component {\n  render() {\n    return (\n      <Segment basic>\n        <Card.Group stackable centered>\n          <GoldStandardCard />\n          <AwardWinningCard />\n          <GetStartedCard />\n          <OpenSourceCard />\n        </Card.Group>\n      </Segment>\n    );\n  }\n}\n\nexport default CardsSegment;\n","export class ChartTheme{\n    constructor(chart, gridlines, axes, centiles, measurements){\n        this.chart = chart\n        this.gridlines = gridlines\n        this.axes = axes\n        this.centiles = centiles\n        this.measurements = measurements\n    }\n    get chart(){\n        return this._chart\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get axes(){\n        return this._axes\n    }\n    get centiles(){\n        return this._centiles\n    }\n    get measurements(){\n        return this._measurements\n    }\n\n    set chart(val){\n        this._chart=val\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set axes(val){\n        this._axes=val\n    }\n    set centiles(val){\n        this._centiles=val\n    }\n    set measurements(val){\n        this._measurements=val\n    }\n}\n\nexport class ChartObject{\n    constructor(backgroundColour, width, height, padding, titleStyle, subTitleStyle, tooltipBackgroundColour, tooltipStroke, tooltipTextStyle, termFill, termStroke, infoBoxFill, infoBoxStroke, infoBoxTextStyle, toggleButtonInactiveColour, toggleButtonActiveColour, toggleButtonTextColour){\n        this.backgroundColour = backgroundColour\n        this.width = width\n        this.height = height\n        this.padding = padding\n        this.titleStyle=titleStyle\n        this.subTitleStyle=subTitleStyle\n        this.tooltipBackgroundColour = tooltipBackgroundColour\n        this.tooltipStroke = tooltipStroke\n        this.tooltipTextStyle = tooltipTextStyle\n        this.termFill=termFill\n        this.termStroke=termStroke\n        this.infoBoxFill=infoBoxFill\n        this.infoBoxStroke=infoBoxStroke\n        this.infoBoxTextStyle=infoBoxTextStyle\n        this.toggleButtonInactiveColour=toggleButtonInactiveColour\n        this.toggleButtonActiveColour=toggleButtonActiveColour\n        this.toggleButtonTextColour=toggleButtonTextColour\n    }\n    get backgroundColour(){\n        return this._backgroundColour\n    }\n    get width(){\n        return this._width\n    }\n    get height(){\n        return this._height\n    }\n    get padding(){\n        return this._padding\n    }\n    get titleStyle(){\n        return this._titleStyle\n    }\n    get subTitleStyle(){\n        return this._subTitleStyle\n    }\n    get tooltipBackgroundColour(){\n        return this._tooltipBackgroundColour\n    }\n    get tooltipStroke(){\n        return this._tooltipStroke\n    }\n    get tooltipTextStyle(){\n        return this._tooltipTextStyle\n    }\n    get termFill(){\n        return this._termFill\n    }\n    get termStroke(){\n        return this._termStroke\n    }\n    get infoBoxFill(){\n        return this._infoBoxFill\n    }\n    get infoBoxStroke(){\n        return this._infoBoxStroke\n    }\n    get infoBoxTextStyle(){\n        return this._infoBoxTextStyle\n    }\n    get toggleButtonActiveColour(){\n        return this._toggleButtonActiveColour\n    }\n    get toggleButtonInactiveColour(){\n        return this._toggleButtonInactiveColour\n    }\n    get toggleButtonTextColour(){\n        return this._toggleButtonTextColour\n    }\n    set termFill(val){\n        this._termFill=val\n    }\n    set termStroke(val){\n        this._termStroke=val\n    }\n    set infoBoxFill(val){\n        this._infoBoxFill=val\n    }\n    set infoBoxStroke(val){\n        this._infoBoxStroke=val\n    }\n    set infoBoxTextStyle(val){\n        this._infoBoxTextStyle=val\n    }\n    set backgroundColour(val){\n        this._backgroundColour=val\n    }\n    set width(val){\n        this._width=val\n    }\n    set height(val){\n        this._height=val\n    }\n    set padding(val){\n        this._padding=val\n    }\n    set tooltipBackgroundColour(val){\n        this._tooltipBackgroundColour=val\n    }set tooltipStroke(val){\n        this._tooltipStroke=val\n    }\n    set tooltipTextStyle(val){\n        this._tooltipTextStyle=val\n    }\n    set titleStyle(val){\n        this._titleStyle=val\n    }\n    set subTitleStyle(val){\n        this._subTitleStyle=val\n    }\n    set toggleButtonTextColour(val){\n        this._toggleButtonTextColour=val\n    }\n    set toggleButtonInactiveColour(val){\n        this._toggleButtonInactiveColour=val\n    }\n    set toggleButtonActiveColour(val){\n        this._toggleButtonActiveColour=val\n    }\n}\n\nexport class PaddingObject{\n    constructor(left, right, top, bottom){\n        this.left = left\n        this.right=right\n        this.top=top\n        this.bottom=bottom\n    }\n    get left(){\n        return this._left\n    }\n    get right(){\n        return this._right\n    }\n    get top(){\n        return this._top\n    }\n    get bottom(){\n        return this._bottom\n    }\n\n    set left(val){\n        this._left=val\n    }\n    set right(val){\n        this._right=val\n    }\n    set top(val){\n        this._top=val\n    }\n    set bottom(val){\n        this._bottom=val\n    }\n}\n\nexport class TextStyleObject{\n    constructor(name, colour, size, weight){\n        this.name=name\n        this.colour=colour\n        this.size=size\n        this.weight=weight\n    }\n    get name(){\n        return this._name\n    }\n    get colour(){\n        return this._colour\n    }\n    get size(){\n        return this._size\n    }\n    get style(){\n        return this._style\n    }\n    set name(val){\n        this._name=val\n    }\n    set colour(val){\n        this._colour=val\n    }\n    set size(val){\n        this._size=val\n    }\n    set weight(val){\n        this._weight=val\n    }\n}\n\nexport class GridlineObject{\n    constructor(gridlines, stroke, strokeWidth, dashed){\n        this.gridlines=gridlines\n        this.stroke=stroke\n        this.strokeWidth = strokeWidth\n        this.dashed=dashed\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get stroke(){\n        return this._stroke\n    }\n    get strokeWidth(){\n        return this._strokeWidth\n    }\n    get dashed(){\n        return this._dashed\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set stroke(val){\n        this._stroke=val\n    }\n    set strokeWidth(val){\n        this._strokeWidth=val\n    }\n    set dashed(val){\n        this._dashed=val\n    }\n}\n\nexport class AxesObject{\n    constructor(axisStroke, axisLabelTextStyle, tickLabelStyle){\n        this.axisStroke=axisStroke\n        this.axisLabelTextStyle=axisLabelTextStyle\n        this.tickLabelTextStyle=tickLabelStyle\n    }\n    get axisStroke(){\n        return this._axisStroke\n    }\n    get axisLabelTextStyle(){\n        return this._axisLabelTextStyle\n    }\n    get tickLabelTextStyle(){\n        return this._tickLabelTexSize\n    }\n    set axisStroke(val){\n        this._axisStroke=val\n    }\n    set axisLabelTextStyle(val){\n        this._axisLabelTextStyle=val\n    }\n    set tickLabelTextStyle(val){\n        this._tickLabelTexSize=val\n    }\n}\nexport class CentilesObject{\n    constructor(centileStroke, centileStrokeWidth, delayedPubertyAreaFill){\n        this.centileStroke=centileStroke\n        this.centileStrokeWidth=centileStrokeWidth\n        this.delayedPubertyAreaFill=delayedPubertyAreaFill\n    }\n    get centileStroke(){\n        return this._centileStroke\n    }\n    get centileStrokeWidth(){\n        return this._centileStrokeWidth\n    }\n    get delayedPubertyAreaFill(){\n        return this._delayedPubertyAreaFill\n    }\n    set centileStroke(val){\n        this._centileStroke=val\n    }\n    set centileStrokeWidth(val){\n        this._centileStrokeWidth=val\n    }\n    set delayedPubertyAreaFill(val){\n        this._delayedPubertyAreaFill=val\n    }\n}\n\nexport class MeasurementsObject{\n    constructor(measurementFill, measurementStroke, measurementSize){\n        this.measurementFill=measurementFill        \n        this.measurementSize=measurementSize\n           }\n    get measurementFill(){\n        return this._measurementFill\n    }\n    get measurementStroke(){\n        return this._measurementStroke\n    }\n    get measurementSize(){\n        return this._measurementSize\n    }\n    set measurementFill(val){\n        this._measurementFill=val\n    }\n    set measurementStroke(val){\n        this._measurementStroke=val\n    }\n    set measurementSize(val){\n        this._measurementSize=val\n    }\n}\n\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 1\n\nData:  #7159aa - purple\nArea:  #c6bddd - purple (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#7159aa';\nconst pubertyFill = '#c6bddd';\nconst tooltipBackGroundColour = '#fdc300';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme1 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme1;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 2\n\nData:  #ff8000 - orange\nArea:  #ffc080 - orange (tint 40%)\ntooltip: #3366cc - strong blue\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#ff8000';\nconst pubertyFill = '#ffc080';\nconst tooltipBackGroundColour = '#3366cc';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#FFFFFF',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme2 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme2;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 3\n\nData:   #e60700 - red\nArea:   #f59c99 - red (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#e60700';\nconst pubertyFill = '#f59c99';\nconst tooltipBackGroundColour = '#fdc300';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\nconst axisLabelColour = '#000000';\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\nconst axisLabelSize = 10;\nconst tickLabelSize = 8;\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  axisLabelSize,\n  'normal'\n);\nconst tickLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  tickLabelSize,\n  'normal'\n);\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme3 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme3;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 4 - monochrome\n\nData:   #000000 - black\nArea:   #b3b3b3 - midgrey\ntooltip: #FFFFF - white\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n \n*/\n\nconst centileColour = '#000000';\nconst pubertyFill = '#b3b3b3';\nconst tooltipBackgroundColour = '#b3b3b3';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeMonochrome = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\nexport default RCPCHThemeMonochrome;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nRCPCH traditional: boy\n\n// boy 0 163 222 - #00a3de\n\nData:   #00a3de - blue\nArea:   #66c8eb - blue tint 49%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#00a3de';\nconst pubertyFill = '#66c8eb';\nconst tooltipBackgroundColour = '#66c8eb';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalBoy = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalBoy;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTraditional: girl\n\n// girl 201 85 157 - #c9559d\n\nData:   #c9559d - pink\nArea:   df99c4 - pink tint 40%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#c9559d';\nconst pubertyFill = '#df99c4';\nconst tooltipBackgroundColour = '#df99c4';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalGirl = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalGirl;\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nimport { RCPCHChart } from '@rcpch/digital-growth-charts-react-component-library';\n\nfunction ChartData(props) {\n  const isLoading = props.isLoading;\n  const titles = setTitle(props);\n\n  return (\n    <div>\n      <Dimmer active={isLoading}>\n        <Loader>Fetching Data</Loader>\n      </Dimmer>\n      <RCPCHChart\n        reference={props.reference}\n        measurementMethod={props.measurementMethod}\n        sex={props.sex}\n        title={titles.title}\n        subtitle={titles.subtitle}\n        measurementsArray={props.measurementsArray} // this is the plottable child data\n        chartStyle={props.chartStyle}\n        measurementStyle={props.measurementStyle}\n        centileStyle={props.centileStyle}\n        gridlineStyle={props.gridlineStyle}\n        axisStyle={props.axisStyle}\n        enableZoom\n      />\n    </div>\n  );\n}\n\nfunction setTitle(props) {\n  // set the title of the chart\n  let title = '';\n  let subTitle = '';\n  if (props.reference === 'uk-who') {\n    title = 'UK-WHO';\n  } else if (props.reference === 'turner') {\n    title = \"Turner's Syndrome\";\n  } else if (props.reference === 'trisomy-21') {\n    title = \"Trisomy 21 (Down's Syndrome)\";\n  }\n\n  let sexText = '';\n  let measurementText = '';\n  if (props.sex === 'male') {\n    sexText = 'Boys';\n  } else {\n    sexText = 'Girls';\n  }\n\n  switch (props.measurementMethod) {\n    case 'height':\n      measurementText = 'Height / Length';\n      break;\n    case 'weight':\n      measurementText = 'Weight';\n      break;\n    case 'bmi':\n      measurementText = 'Body Mass Index';\n      break;\n    case 'ofc':\n      measurementText = 'Head Circumference';\n      break;\n    default:\n      measurementText = '';\n      break;\n  }\n\n  subTitle = measurementText + ' - ' + sexText;\n\n  return { subtitle: subTitle, title: title };\n}\n\nexport default ChartData;\n","const deepCopyArray = (arr) => {\n  let copy = [];\n  arr.forEach((elem) => {\n    if (Array.isArray(elem)) {\n      copy.push(deepCopyArray(elem));\n    } else {\n      if (typeof elem === 'object' && elem !== null) {\n        copy.push(deepCopyObject(elem));\n      } else {\n        copy.push(elem);\n      }\n    }\n  });\n  return copy;\n};\n\nconst deepCopyObject = (obj) => {\n  let tempObj = {};\n  for (let [key, value] of Object.entries(obj)) {\n    if (Array.isArray(value)) {\n      tempObj[key] = deepCopyArray(value);\n    } else {\n      if (typeof value === 'object' && value !== null) {\n        tempObj[key] = deepCopyObject(value);\n      } else {\n        tempObj[key] = value;\n      }\n    }\n  }\n  return tempObj;\n};\n\nconst deepCopy = (input) => {\n  if (Array.isArray(input)) {\n    return deepCopyArray(input);\n  } else if (typeof input === 'object' && input !== null) {\n    return deepCopyObject(input);\n  } else {\n    return input;\n  }\n};\n\nexport default deepCopy;\n","import React from 'react';\nimport {\n  Segment,\n  Message,\n  Button,\n  Table,\n  List,\n  Modal,\n} from 'semantic-ui-react';\n\nconst units = (measurementMethod) => {\n  if (measurementMethod === 'height') {\n    return 'cm';\n  }\n  if (measurementMethod === 'weight') {\n    return 'kg';\n  }\n  if (measurementMethod === 'bmi') {\n    return 'kg/m²';\n  }\n  if (measurementMethod === 'ofc') {\n    return 'cm';\n  }\n};\n\nexport const Acknowledgements = () => {\n  // list={[\"Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross sectional stature and weight reference curves for the UK, 1990. Arch Dis Child 1995; 73:17-24.\", \"<a href='www.who.int/childgrowth/en'>www.who.int/childgrowth/en</a>\", \"For further relevant references see fact sheet downloadable from www.growthcharts.RCPCH.ac.uk\"]}\n  return (\n    <Message>\n      <Message.Header>References</Message.Header>\n      <List>\n        <List.Item>\n          Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross\n          sectional stature and weight reference curves for the UK, 1990. Arch\n          Dis Child 1995; 73:17-24.\n        </List.Item>\n        <List.Item>\n          <a href=\"www.who.int/childgrowth/en\">www.who.int/childgrowth/en</a>\n        </List.Item>\n        <List.Item>\n          For further relevant references see fact sheet downloadable from{' '}\n          <a href=\"www.growthcharts.RCPCH.ac.uk\">\n            www.growthcharts.RCPCH.ac.uk\n          </a>\n        </List.Item>\n      </List>\n    </Message>\n  );\n};\n\nexport const TableBody = (props) => {\n  const measurement = props.measurement;\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>Ages</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.chronological_calendar_age}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.corrected_calendar_age}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Measurement</Table.Cell>\n        <Table.Cell>\n          {measurement.child_observation_value.observation_value}{' '}\n          {units(measurement.child_observation_value.measurement_method)}\n        </Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>SDS</Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.corrected_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.chronological_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Centiles</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.corrected_centile}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.chronological_centile}\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nexport const ResultsSegment = ({ apiResult, reference }) => (\n  <Segment>\n    <Table basic=\"very\" celled collapsing compact>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell></Table.HeaderCell>\n          <Table.HeaderCell>Corrected Results</Table.HeaderCell>\n          <Table.HeaderCell>Chronological Results</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {apiResult[reference].height.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Heights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].height.length > 0 &&\n          apiResult[reference].height.map((measurement, index) => {\n            return <TableBody measurement={measurement} key={index} />;\n          })}\n        {apiResult[reference].weight.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Weights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].weight.length > 0 &&\n          apiResult[reference].weight.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].bmi.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>BMIs</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].bmi.length > 0 &&\n          apiResult.bmi.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].ofc.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Head Circumferences</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].ofc.length > 0 &&\n          apiResult[reference].ofc.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n\nexport const ErrorModal = ({\n  title,\n  body,\n  handleClose,\n  visible,\n  handleCancel,\n}) => {\n  const showCancel = handleCancel ? true : false;\n  return (\n    <Modal title={title} open={visible} size=\"small\" closeOnEscape={true}>\n      <Modal.Header>{title}</Modal.Header>\n      <Modal.Content>{body}</Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={handleClose}>\n          OK\n        </Button>\n        {showCancel && <Button onClick={handleCancel}>Cancel</Button>}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","// React\nimport React, { useState, useEffect, useCallback } from 'react';\n\n//themes\nimport RCPCHTheme1 from '../components/chartThemes/rcpchTheme1';\nimport RCPCHTheme2 from '../components/chartThemes/rcpchTheme2';\nimport RCPCHTheme3 from '../components/chartThemes/rcpchTheme3';\nimport RCPCHThemeMonochrome from '../components/chartThemes/rcpchThemeMonochrome';\nimport RCPCHThemeTraditionalBoy from '../components/chartThemes/RCPCHThemeTraditionalBoy';\nimport RCPCHThemeTraditionalGirl from '../components/chartThemes/RCPCHThemeTraditionalGirl';\n\n// Semantic UI React\nimport {\n  Grid,\n  Segment,\n  Message,\n  Flag,\n  Tab,\n  Dropdown,\n  Button,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nimport ChartData from '../api/Chart';\nimport MeasurementForm from '../components/MeasurementForm';\nimport deepCopy from '../functions/deepCopy';\nimport { Acknowledgements, ResultsSegment, ErrorModal } from './SubComponents';\nimport '../index.css';\n\nfunction MeasurementSegment() {\n  const defaultTheme = RCPCHThemeMonochrome;\n\n  const [chartStyle, setChartSyle] = useState(defaultTheme.chart);\n  const [axisStyle, setAxisStyle] = useState(defaultTheme.axes);\n  const [centileStyle, setCentileStyle] = useState(defaultTheme.centiles);\n  const [measurementStyle, setMeasurementStyle] = useState(\n    defaultTheme.measurements\n  );\n\n  const [theme, setTheme] = useState({\n    value: 'tanner4',\n    text: 'Monochrome',\n  });\n\n  const [flip, setFlip] = useState(false); // flag to determine if results or chart showing\n  const [disabled, setDisabled] = useState({\n    height: false,\n    weight: false,\n    bmi: false,\n    ofc: false,\n  });\n\n  const [measurementMethod, setMeasurementMethod] = useState('height');\n  const [reference, setReference] = useState('uk-who');\n  const [sex, setSex] = useState('male');\n  const [measurements, setMeasurements] = useState(InitialMeasurementState());\n  const [apiResult, setAPIResult] = useState(InitialMeasurementState());\n\n  const [errorModal, setErrorModal] = useState(InitalErrorModalState());\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [commands, setCommands] = useState({\n    clearMeasurement: false,\n    resetCurrent: false,\n    undoLast: false,\n    changeSex: false,\n  });\n\n  let activeIndex;\n\n  switch (measurementMethod) {\n    case 'weight':\n      activeIndex = 1;\n      break;\n    case 'bmi':\n      activeIndex = 2;\n      break;\n    case 'ofc':\n      activeIndex = 3;\n      break;\n    default:\n      //height\n      activeIndex = 0;\n  }\n\n  const removeLast = useCallback(\n    (both = false) => {\n      const newMeasurements = deepCopy(\n        measurements[reference][measurementMethod]\n      );\n      newMeasurements.pop();\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        mutable[reference][measurementMethod] = newMeasurements;\n        return mutable;\n      });\n      if (both) {\n        const newApi = deepCopy(apiResult[reference][measurementMethod]);\n        newApi.pop();\n        setAPIResult((old) => {\n          const mutable = deepCopy(old);\n          mutable[reference][measurementMethod] = newApi;\n          return mutable;\n        });\n      }\n    },\n    [measurements, reference, measurementMethod, apiResult]\n  );\n\n  if (commands.resetCurrent) {\n    const resetCurrent = (old) => {\n      const mutable = deepCopy(old);\n      mutable[reference][measurementMethod] = [];\n      return mutable;\n    };\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to reset?',\n      body: 'This will remove all measurements from the current chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        setMeasurements(resetCurrent);\n        setAPIResult(resetCurrent);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, resetCurrent: false };\n    });\n  }\n\n  if (commands.undoLast) {\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to remove the last measurement?',\n      body: 'This will remove the last measurement entered on the chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        removeLast(true);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, undoLast: false };\n    });\n  }\n\n  const customSetMeasurementMethod = (newMeasurementMethod) => {\n    if (measurements[reference][newMeasurementMethod].length > 0) {\n      const existingSex = measurements[reference][newMeasurementMethod][0].sex;\n      if (existingSex !== sex) {\n        changeSex(existingSex, true);\n        setCommands((old) => {\n          return { ...old, changeSex: true };\n        });\n      }\n    }\n    setMeasurementMethod(newMeasurementMethod);\n  };\n\n  const handleTabChange = (e, { activeIndex }) => {\n    if (reference === 'turner' && activeIndex !== 0) {\n      setErrorModal({\n        visible: true,\n        title: 'Measurement unavailable',\n        body: \"Only height data is available for Turner's Syndrome.\",\n        handleClose: () => setErrorModal(InitalErrorModalState()),\n      });\n      return null;\n    }\n    let newMeasurementMethod = '';\n    switch (activeIndex) {\n      case 0:\n        newMeasurementMethod = 'height';\n        break;\n      case 1:\n        newMeasurementMethod = 'weight';\n        break;\n      case 2:\n        newMeasurementMethod = 'bmi';\n        break;\n      case 3:\n        newMeasurementMethod = 'ofc';\n        break;\n      default:\n        console.warn('Handle tab change did not pick up valid active index');\n    }\n    customSetMeasurementMethod(newMeasurementMethod);\n  };\n\n  const changeReference = (newReference) => {\n    // call back from MeasurementForm\n    setReference(newReference);\n    if (newReference === 'turner') {\n      setMeasurementMethod('height');\n      setSex('female');\n      setDisabled({\n        height: false,\n        weight: true,\n        bmi: true,\n        ofc: true,\n      });\n      return { newSex: 'female' };\n    } else {\n      setDisabled({\n        height: false,\n        weight: false,\n        bmi: false,\n        ofc: false,\n      });\n      if (\n        apiResult[newReference][measurementMethod].length > 0 &&\n        apiResult[newReference][measurementMethod][0]?.birth_data.sex !== sex\n      ) {\n        setSex(apiResult[newReference][measurementMethod][0].birth_data.sex);\n        return {\n          newSex: apiResult[newReference][measurementMethod][0].birth_data.sex,\n        };\n      } else {\n        return { newSex: sex };\n      }\n    }\n  };\n\n  const changeSex = (newSex, ignoreError = false) => {\n    // call back for MeasurementForm\n    const existingResults = [...measurements[reference][measurementMethod]];\n    if (existingResults.length > 0 && !ignoreError) {\n      for (const oldResult of existingResults) {\n        if (newSex !== oldResult.sex) {\n          setErrorModal({\n            visible: true,\n            title: 'Unable to change sex',\n            body: `Each chart can only display measurements from one patient at a time. Please reset the chart before entering measurements from a new patient.`,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n          return false;\n        }\n      }\n    }\n    if (theme.value === 'trad') {\n      const selectedTheme =\n        newSex === 'male'\n          ? RCPCHThemeTraditionalBoy\n          : RCPCHThemeTraditionalGirl;\n      setCentileStyle(selectedTheme.centiles);\n      setChartSyle(selectedTheme.chart);\n      setMeasurementStyle(selectedTheme.measurements);\n      setAxisStyle(selectedTheme.axes);\n    }\n    setSex(newSex);\n    return true;\n  };\n\n  const handleResults = (results) => {\n    // delegate function from MeasurementForm\n    // receives form data and stores in the correct measurement array\n    // checks for duplicates, mismatching dobs, sexes and gestations\n    const existingResults = deepCopy(\n      measurements[reference][measurementMethod]\n    );\n    let errorString = '';\n    if (existingResults.length > 0) {\n      const latestResult = results[0];\n      const newGestation =\n        latestResult.gestation_weeks * 7 + latestResult.gestation_days;\n      const errors = [];\n      for (const oldResult of existingResults) {\n        if (JSON.stringify(oldResult) === JSON.stringify(latestResult)) {\n          errorString = 'duplicate';\n          break;\n        }\n        const oldGestation =\n          oldResult.gestation_weeks * 7 + oldResult.gestation_days;\n        if (oldResult.sex !== latestResult.sex) {\n          errors.push('differing sexes');\n        }\n        if (oldResult.birth_date !== latestResult.birth_date) {\n          errors.push('differing date of births');\n        }\n        if (oldGestation !== newGestation) {\n          errors.push('differing gestations');\n        }\n        if (errors.length > 0) {\n          errorString = errors[0];\n          if (errors.length === 2) {\n            errorString = errors.join(' and ');\n          } else if (errors.length === 3) {\n            errorString = `${errors[0]}, ${errors[1]} and ${errors[2]}`;\n          }\n          break;\n        }\n      }\n    }\n    if (errorString) {\n      if (errorString === 'duplicate') {\n        setErrorModal({\n          visible: true,\n          title: 'Duplicate entries',\n          body: `Please check the last measurement entry as it appears to be identical to a measurement already entered.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      } else {\n        setErrorModal({\n          visible: true,\n          title: 'Please check entries',\n          body: `Each chart can only display measurements from one patient at a time: ${errorString} were detected.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      }\n      return false;\n    } else {\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        const newArray = mutable[reference][measurementMethod].concat(results);\n        mutable[reference][measurementMethod] = newArray;\n        return mutable;\n      });\n      setIsLoading(true);\n      return true;\n    }\n  };\n\n  const handleChangeTheme = (event, { value }) => {\n    let selectedTheme;\n    let text;\n\n    if (value === 'trad') {\n      if (sex === 'male') {\n        selectedTheme = RCPCHThemeTraditionalBoy;\n      } else {\n        selectedTheme = RCPCHThemeTraditionalGirl;\n      }\n      text = 'Traditional';\n    }\n    if (value === 'tanner1') {\n      selectedTheme = RCPCHTheme1;\n      text = 'Tanner 1';\n    }\n    if (value === 'tanner2') {\n      selectedTheme = RCPCHTheme2;\n      text = 'Tanner 2';\n    }\n    if (value === 'tanner3') {\n      selectedTheme = RCPCHTheme3;\n      text = 'Tanner 3';\n    }\n    if (value === 'monochrome') {\n      selectedTheme = RCPCHThemeMonochrome;\n      text = 'Monochrome';\n    }\n\n    setCentileStyle(selectedTheme.centiles);\n    setChartSyle(selectedTheme.chart);\n    setMeasurementStyle(selectedTheme.measurements);\n    setAxisStyle(selectedTheme.axes);\n    setTheme({ value: value, text: text });\n  };\n\n  const handleFlipResults = () => {\n    setFlip(!flip);\n  };\n\n  const panes = panesBlueprint.map((details) => {\n    return {\n      menuItem: details.menuItem,\n      render: () => (\n        <Tab.Pane attached=\"top\" disabled={disabled[details.measurementName]}>\n          <ChartData\n            key={details.measurementName}\n            reference={reference}\n            sex={sex}\n            measurementMethod={details.measurementName}\n            measurementsArray={apiResult[reference][details.measurementName]}\n            chartStyle={chartStyle}\n            axisStyle={axisStyle}\n            gridlineStyle={defaultTheme.gridlines}\n            centileStyle={centileStyle}\n            measurementStyle={measurementStyle}\n            isLoading={isLoading}\n          />\n          <Acknowledgements />\n        </Tab.Pane>\n      ),\n    };\n  });\n\n  const TabPanes = () => (\n    <Tab\n      menu={{ attached: 'top' }}\n      panes={panes}\n      activeIndex={activeIndex}\n      onTabChange={handleTabChange}\n    />\n  );\n\n  const ThemeSelection = () => (\n    // <Menu compact className=\"selectUpperMargin\">\n    <span>\n      Theme{' '}\n      <Dropdown\n        options={themeOptions}\n        floating\n        inline\n        onChange={handleChangeTheme}\n        text={theme.text}\n      />\n    </span>\n    // </Menu>\n  );\n\n  useEffect(() => {\n    const fetchCentilesForMeasurement = async (singleMeasurement) => {\n      const url = `${process.env.REACT_APP_GROWTH_API_BASEURL}/${reference}/calculation`;\n      const response = await axios({\n        url: url,\n        data: singleMeasurement,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.data;\n    };\n\n    let ignore = false;\n\n    if (isLoading) {\n      const relevantArray = measurements[reference][measurementMethod];\n      const latestMeasurement = deepCopy(\n        relevantArray[relevantArray.length - 1]\n      );\n      fetchCentilesForMeasurement(latestMeasurement)\n        .then((result) => {\n          if (!ignore) {\n            if (\n              result.measurement_calculated_values\n                .corrected_measurement_error ||\n              result.measurement_calculated_values\n                .chronological_measurement_error\n            ) {\n              const measurementError =\n                result.measurement_calculated_values\n                  .corrected_measurement_error ||\n                result.measurement_calculated_values\n                  .chronological_measurement_error;\n              setIsLoading(false);\n              removeLast();\n              setErrorModal({\n                visible: true,\n                title: 'Unable to plot',\n                body: `Measurement entered cannot be processed by the server. Reason given: ${measurementError}`,\n                handleClose: () => setErrorModal(InitalErrorModalState()),\n              });\n            } else {\n              setIsLoading(false);\n              setAPIResult((old) => {\n                const mutable = deepCopy(old);\n                const workingArray = deepCopy(\n                  mutable[reference][measurementMethod]\n                );\n                workingArray.push(result);\n                mutable[reference][measurementMethod] = workingArray;\n                return mutable;\n              });\n              setCommands((old) => {\n                return { ...old, clearMeasurement: true };\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          const errorForUser = `There has been a problem fetching the result from the server. Error details: ${error.message} `;\n          removeLast();\n          setErrorModal({\n            visible: true,\n            title: 'Server error',\n            body: errorForUser,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n        });\n    }\n\n    return () => {\n      // this prevents data being added to state if unmounted\n      ignore = true;\n    };\n  }, [\n    isLoading,\n    measurementMethod,\n    reference,\n    apiResult,\n    measurements,\n    removeLast,\n  ]);\n\n  return (\n    <React.Fragment>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Grid.Row>\n              <Segment raised>\n                <MeasurementForm\n                  measurementResult={handleResults}\n                  handleChangeReference={changeReference}\n                  handleChangeSex={changeSex}\n                  measurementMethod={measurementMethod}\n                  setMeasurementMethod={customSetMeasurementMethod}\n                  commands={commands}\n                  setCommands={setCommands}\n                  className=\"measurement-form\"\n                />\n              </Segment>\n            </Grid.Row>\n            <Grid.Row>\n              <Grid.Column width={5}>\n                <Segment raised>\n                  <Message>\n                    <Flag name=\"gb\" />\n                    This calculator uses the UK-WHO references to calculate gold\n                    standard accurate child growth parameters. In the future we\n                    are planning to add other growth references such as CDC and\n                    WHO.\n                  </Message>\n\n                  <Message color=\"red\">\n                    This site is under development. No responsibility is\n                    accepted for the accuracy of results produced by this tool.\n                  </Message>\n                </Segment>\n              </Grid.Column>\n            </Grid.Row>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Segment raised>\n              {flip ? (\n                <ResultsSegment apiResult={apiResult} reference={reference} />\n              ) : (\n                <TabPanes />\n              )}\n              <Grid verticalAlign=\"middle\">\n                <Grid.Row columns={2}>\n                  <Grid.Column textAlign=\"left\">\n                    <ThemeSelection />\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"right\">\n                    <Button\n                      className=\"selectUpperMargin\"\n                      onClick={handleFlipResults}\n                    >\n                      Results\n                    </Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <ErrorModal\n        title={errorModal.title}\n        body={errorModal.body}\n        visible={errorModal.visible}\n        handleClose={errorModal.handleClose}\n        handleCancel={errorModal.handleCancel}\n      />\n    </React.Fragment>\n  );\n}\n\nconst panesBlueprint = [\n  { menuItem: 'Height', measurementName: 'height' },\n  { menuItem: 'Weight', measurementName: 'weight' },\n  { menuItem: 'BMI', measurementName: 'bmi' },\n  {\n    menuItem: 'Head Circumference',\n    measurementName: 'ofc',\n  },\n];\n\nconst themeOptions = [\n  { key: 'monochrome', value: 'monochrome', text: 'Monochrome' },\n  { key: 'trad', value: 'trad', text: 'Traditional' },\n  { key: 'tanner1', value: 'tanner1', text: 'Tanner 1' },\n  { key: 'tanner2', value: 'tanner2', text: 'Tanner 2' },\n  { key: 'tanner3', value: 'tanner3', text: 'Tanner 3' },\n];\n\nfunction InitialMeasurementState() {\n  return {\n    turner: {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'trisomy-21': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'uk-who': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n  };\n}\n\nfunction InitalErrorModalState() {\n  return {\n    visible: false,\n    title: '',\n    body: '',\n    handleClose: null,\n    handleCancel: null,\n  };\n}\n\nexport default MeasurementSegment;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport HeroSegment from \"../components/HeroSegment\";\nimport CardsSegment from \"../components/CardsSegment\";\nimport MeasurementSegment from \"../components/MeasurementSegment\";\n\nfunction Home() {\n  return (\n    <div>\n      <HeroSegment />\n      <MeasurementSegment />\n      <CardsSegment />\n    </div>\n  );\n}\n\nexport default withRouter(Home);\n","import React, { Component } from \"react\";\nimport { Container, Table, Grid, Popup, Icon, Header, Menu } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass Results extends Component {\n    constructor(props){\n        super(props);\n        let data = this.props.location.data.calculations;\n        this.state = {\n            results: data,\n            activeItem: 'tables',\n            chartData: null\n        }\n        this.handleItemClick.bind(this);\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n    render() {\n        const { activeItem } = this.state;\n        return (\n            <div>\n            <Menu tabular>\n                <Menu.Item\n                    name='tables'\n                    active={activeItem === 'tables'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name='charts'\n                    active={activeItem === 'charts'}\n                    onClick={this.handleItemClick}\n                />\n            </Menu>\n            <Container>\n                {activeItem === 'tables'? <Tables results={this.state.results}/> : <h5>chartdata would have gone here</h5>}\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Results);\n\nfunction Tables(props){\n    return (\n        <Container>\n            <Grid columns={2} padded>\n                <Grid.Column>\n                    <DatesTable dates={props.results}/>\n                </Grid.Column>\n                <Grid.Column>\n                    <CentilesTable centiles={props.results}/>\n                </Grid.Column>\n            </Grid>\n        </Container>\n    );\n}\n\n\nfunction DatesTable(props) {\n    return (\n        <>\n            {props.dates.map((item, index)=>{\n                if(index > 0 && item.measurement_dates.observation_date === props.dates[0].measurement_dates.observation_date){\n                    return null;\n                } else {\n                    return (\n                        <Table basic='very' celled collapsing key={index}>\n                            <Table.Header>\n                                <Table.Row>\n                                    <Table.HeaderCell>\n                                    </Table.HeaderCell>\n                                    <Table.HeaderCell>\n                                        Dates/Ages\n                                    </Table.HeaderCell>\n                                    <Table.HeaderCell>\n                                    </Table.HeaderCell>\n                                </Table.Row>\n                            </Table.Header>\n                            <Table.Body>\n                                <Table.Row>\n                                    <Table.Cell>Date of Birth</Table.Cell>\n                                    <Table.Cell>{item.birth_data.birth_date}</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Date of Measurement</Table.Cell>\n                                    <Table.Cell>{item.measurement_dates.observation_date}</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Due Date</Table.Cell>\n                                    <Table.Cell>{item.birth_data.estimated_date_delivery}</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Gestation</Table.Cell>\n                                    <Table.Cell>{item.birth_data.gestation_weeks}+{item.birth_data.gestation_days} weeks</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Chronological Age</Table.Cell>\n                                    <Table.Cell>{item.measurement_dates.chronological_decimal_age} y</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Chronological Calendar Age</Table.Cell>\n                                    <Table.Cell>{item.measurement_dates.chronological_calendar_age}</Table.Cell>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Corrected Age</Table.Cell>\n                                    <Table.Cell>{item.measurement_dates.corrected_decimal_age} y</Table.Cell>\n                                    <PopupData lay_comment={item.measurement_dates.lay_decimal_age_comment} clinician_comment={item.measurement_dates.clinician_decimal_age_comment}></PopupData>\n                                </Table.Row>\n                                <Table.Row>\n                                    <Table.Cell>Chronological Calendar Age</Table.Cell>\n                                    <Table.Cell>{item.measurement_dates.corrected_calendar_age}</Table.Cell>\n                                </Table.Row>\n                            </Table.Body>\n                        </Table>\n                    );\n                }\n            })};\n        </>\n    );\n}\n\nfunction CentilesTable(props) {\n    return (\n        <Table basic='very' celled collapsing>\n            <Table.Header>\n                <Table.Row>\n                    <Table.HeaderCell>\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                        Centiles\n                    </Table.HeaderCell>\n                    <Table.HeaderCell>\n                    </Table.HeaderCell>\n                </Table.Row>\n            </Table.Header>\n            {props.centiles.map((item, index)=>{\n                return (\n                    <Table.Body key={index}>\n                        <MeasurementCell item={item}/>\n                        <Table.Row>\n                            <Table.Cell>SDS</Table.Cell>\n                            <Table.Cell> {item.measurement_calculated_values.sds}</Table.Cell>\n                        </Table.Row>\n                        <Table.Row>\n                            <Table.Cell>Centile</Table.Cell>\n                            <Table.Cell> {item.measurement_calculated_values.centile} %</Table.Cell>\n                            {/* <PopupData lay_comment={item.measurement_calculated_values.lay_comment} clinician_comment={item.measurement_calculated_values.clinician_comment}></PopupData> */}\n                        </Table.Row>\n                    </Table.Body>\n                );\n            })}\n        </Table>\n    );\n}\n\nfunction MeasurementCell(props) {\n    \n    if (props.item.child_observation_value.measurement_method === 'height') {\n        return (\n                <Table.Row>\n                    <Table.Cell>Height</Table.Cell>\n                    <Table.Cell> {props.item.child_observation_value.measurement_value} cm</Table.Cell>\n                </Table.Row>\n        );\n    }\n    else if (props.item.child_observation_value.measurement_method === 'weight') {\n        return (\n            <Table.Row>\n                <Table.Cell>Weight</Table.Cell>\n                <Table.Cell> {props.item.child_observation_value.measurement_value} kg</Table.Cell>\n            </Table.Row>\n        );\n    }\n    else if (props.item.child_observation_value.measurement_method === 'bmi') {\n        return (\n            <Table.Row>\n                <Table.Cell>BMI</Table.Cell>\n                <Table.Cell> {props.item.child_observation_value.measurement_value} kg/m²</Table.Cell>\n            </Table.Row>\n        );\n    }\n    else if (props.item.child_observation_value.measurement_method === 'ofc') {\n        return (\n            <Table.Row>\n                <Table.Cell>Head Circumference</Table.Cell>\n                <Table.Cell> {props.item.child_observation_value.measurement_value} cm</Table.Cell>\n            </Table.Row>\n        );\n    }\n    \n}\n\nfunction PopupData(props) {\n    return (\n        <React.Fragment>\n            <Table.Cell>\n                <Popup\n                    trigger={<Icon name=\"info circle\" color='blue'></Icon>}\n                    position='top right'\n                    flowing\n                    hoverable\n                >\n                    <Grid centered divided columns={2}>\n                        <Grid.Column textAlign='center'>\n                            <Header as='h4'>Lay Comment</Header>\n                            <p>\n                                {props.lay_comment}\n                            </p>\n                        </Grid.Column>\n                        <Grid.Column textAlign='center'>\n                            <Header as='h4'>Clinician Comment</Header>\n                            <p>\n                                {props.clinician_comment}\n                            </p>\n                        </Grid.Column>\n                    </Grid>\n                </Popup>\n            </Table.Cell>\n        </React.Fragment>\n    );\n}\n\n","import React, { Component } from \"react\";\nimport { Container, Header, Button, Icon, Segment, Grid, Label, Modal } from \"semantic-ui-react\";\nimport axios from 'axios';\nimport { withRouter } from \"react-router-dom\";\nimport Dropzone from 'react-dropzone';\n// import XLSX from 'xlsx'; DEPRECATED - SEND THE FILE DIRECT TO THE SERVER - DATA PARSED SERVER-SIDE\n\n\nclass Spreadsheet extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            uploadDisabled: true,\n            csvFile: null,\n            open: false,\n            error: null\n        }\n        this.uploadData = this.uploadData.bind(this);\n        this.removeFile = this.removeFile.bind(this);\n    }\n\n    async uploadData(){\n        let fileData = new FormData()\n        fileData.append(\"csv_file\", this.state.csvFile, 'upload.csv')\n        await axios({\n          url: `${process.env.REACT_APP_GROWTH_API_BASEURL}/uk-who/spreadsheet`,\n          data: fileData,\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"text/csv\",\n          },\n        }).then((response) => {\n\n            console.log(response);\n          /*\n            The response object from the server is:\n                {\n                    data: [an array of Measurement class objects]\n                    unique: boolean - refers to whether data is from one child or many children\n                    valid: boolean - refers to whether imported data was valid for calculation\n                    error: string  - error message if invalid file\n                }\n            */\n                if (response) {\n                    if (response.data[\"valid\"]) {\n                        this.props.history.push({\n                          pathname: \"/serial_results\",\n                          data: response.data,\n                        });\n                      } else {\n                        // TODO #7 implement popup in the event of failed validation of uploaded data as well as catch statement\n                        this.setState({error: response.data[\"error\"], open: true})\n                    }\n                } else {\n                    this.setState({error: 'No response from server', open: true})\n                }\n          \n        }).catch(error => {\n            if (error.response.status === 500){\n                this.setState({error: '500 Response from server', open: true})\n            }\n        });\n    }\n\n    removeFile(event){\n        event.preventDefault();\n        this.setState({csvFile: null});\n        this.setState({uploadDisabled: true});\n    }\n\n    render(){\n        const { open } = this.state\n        return (\n            <Container>\n                <Grid centered>\n                    <Modal\n                        size='mini'\n                        open={open}\n                    >\n                        <Modal.Header>Error</Modal.Header>\n                        <Modal.Content>\n                        <p>{this.state.error}</p>\n                        </Modal.Content>\n                        <Modal.Actions>\n                        <Button negative onClick={()=> this.setState({open: false, error: null})}>\n                            Cancel\n                        </Button>\n                        </Modal.Actions>\n                    </Modal>\n                    <Grid.Column width={12}>\n                        <Grid.Row style={{textAlign:\"center\"  }}>\n                            <h1>Upload .CSV Spreadsheet</h1>\n                        </Grid.Row>\n                        <Grid.Row centered>\n                            <Dropzone \n                                onDrop={acceptedFiles => {\n                                        this.setState({uploadDisabled: false});\n                                        this.setState({csvFile: acceptedFiles[0]})\n                                    }\n                                }\n                                accept='text/csv'\n                                minSize={0}\n                                maxSize={5242880}\n                            >\n                                    {({getRootProps, getInputProps, isDragActive, isDragReject, acceptedFiles}) => (\n                                        <section>\n                                        <div {...getRootProps()}>\n                                            <input {...getInputProps()} />\n                                            <Segment placeholder color='green'>\n                                                <Header icon>\n                                                    {this.state.csvFile === null ? <Icon name='file outline' color='green'/> : <Icon name='file' color='green'/>}\n                                                </Header>\n                                                <h5 style={{textAlign:\"center\"  }}>\n                                                    {!isDragActive && this.state.csvFile === null && \"Drag 'n' drop .csv only here, or click to select files\"}\n                                                    {isDragActive && this.state.csvFile === null && !isDragReject  && \"Drop .csv only here \"}\n                                                    {isDragReject && this.state.csvFile === null && \"Only .csv files accepted\" }\n                                                    {this.state.csvFile !== null && <Label><Icon name=\"file\" color='green'></Icon>{acceptedFiles[0].name}</Label>}\n                                                </h5>\n                                            </Segment>\n                                        </div>\n                                        </section>\n                                    )}\n                            </Dropzone>\n                        </Grid.Row>\n                        <Grid.Row style={{textAlign:\"center\", padding: 10 }}>\n                            { !this.state.uploadDisabled &&\n                                <Button.Group>\n                                    <Button color='green' onClick={this.uploadData}>Import Data</Button>\n                                    <Button.Or></Button.Or>\n                                    <Button color=\"red\" onClick={this.removeFile}>Remove</Button>\n                                </Button.Group>\n                            }\n                        </Grid.Row>\n                    </Grid.Column>\n                </Grid>\n            </Container>\n        );\n    }\n}\n\nexport default withRouter(Spreadsheet);","import React, { Component } from \"react\";\nimport { Container, Table, Header } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\n\nclass SerialResultsTable extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: this.props.results\n        }\n    }\n\n    render() {\n        return (\n            <Container>\n                <Header as='h1'>\n                        Uploaded Data Table\n                </Header>\n                <Table basic='very' celled collapsing>\n                    <Table.Header>\n                        <Table.Row>\n                            <Table.HeaderCell>\n                                Birth Date\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Gestation\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Estimated Delivery Date\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Measurement Date\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Age\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Measurement\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Value\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                SDS\n                            </Table.HeaderCell>\n                            <Table.HeaderCell>\n                                Centile\n                            </Table.HeaderCell>\n                        </Table.Row>\n                    </Table.Header>\n                    <Table.Body>\n                        {this.state.data.map((item, index)=>{\n                            return (\n                                <DataRow data={item} key={index}/>\n                            );\n                        })}\n                    </Table.Body>\n                </Table>\n            </Container>\n        )\n    }\n}\n\nexport default withRouter(SerialResultsTable);\n\n\n    \nfunction DataRow(props) {\n\n    const birth_data = props.data.birth_data;\n    const measurement_calculated_values = props.data.measurement_calculated_values;\n    const measurement_dates= props.data.measurement_dates;\n    const child_observation_value = props.data.child_observation_value;\n\n    const birth_date = new Date(birth_data.birth_date).toLocaleDateString('en-UK');\n    const measurement_date = new Date(measurement_dates.observation_date).toLocaleDateString('en-UK');\n    const edd = (birth_data.estimated_date_delivery !== null) ? new Date(birth_data.estimated_date_delivery).toLocaleDateString('en-UK') : \"\";\n\n    return (\n        <Table.Row>\n            <Table.Cell>\n                {birth_date}\n            </Table.Cell>\n            <Table.Cell>\n                {birth_data.gestation_weeks}<sup>+{birth_data.gestation_days}</sup>\n            </Table.Cell>\n            <Table.Cell>\n                {edd}\n            </Table.Cell>\n            <Table.Cell>\n                {measurement_date}\n            </Table.Cell>\n            <Table.Cell>\n                {measurement_dates.corrected_decimal_age}\n            </Table.Cell>\n            <Table.Cell>\n                {child_observation_value.measurement_method}\n            </Table.Cell>\n            <Table.Cell>\n                {child_observation_value.measurement_value}\n            </Table.Cell>\n            <Table.Cell>\n                {measurement_calculated_values.sds}\n            </Table.Cell>\n            <Table.Cell>\n                {measurement_calculated_values.centile}\n            </Table.Cell>\n        </Table.Row>\n    );\n}","import React, { Component } from \"react\";\nimport { Container, Menu } from \"semantic-ui-react\";\nimport { withRouter } from \"react-router-dom\";\nimport SerialResultsTable from '../components/SerialResultsTable';\n\nclass Results extends Component {\n    constructor(props){\n        super(props);\n        let data = this.props.location.data.data;\n        this.state = {\n            childData: data,\n            activeItem: 'tables',\n            chartData: null,\n            unique_child: this.props.location.data.unique_child,\n        }\n        this.handleItemClick.bind(this);\n        /*\n          the object passed in here has the structure:\n                {\n                    data: [an array of Measurement class objects]\n                    unique: boolean - refers to whether data is from one child or many children\n                    valid: boolean - refers to whether imported data was valid for calculation\n                    error: string  - error message if invalid file\n                }\n        */\n    }\n\n    handleItemClick = (e, { name }) => this.setState({ activeItem: name });\n\n    render() {\n        const { activeItem } = this.state;\n        return (\n            <div>\n            <Menu tabular>\n                <Menu.Item\n                    name='tables'\n                    active={activeItem === 'tables'}\n                    onClick={this.handleItemClick}\n                />\n                <Menu.Item\n                    name='charts'\n                    active={activeItem === 'charts'}\n                    onClick={this.handleItemClick}\n                    disabled={!this.state.unique_child}\n                />\n            </Menu>\n            <Container>\n                {activeItem === 'tables'? <SerialResultsTable results={this.state.childData}/> : <h5>ChartData would have gone here</h5>}\n            </Container>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Results);","import React from \"react\";\nimport { Menu } from \"semantic-ui-react\";\n\nfunction MenuBar(props) {\n  return (\n    <Menu borderless inverted color=\"blue\" as=\"h2\" className=\"rcpch-menu\">\n      <Menu.Item\n        href=\"https://growth-blog.rcpch.ac.uk/\"\n        name=\"Growth Blog\"\n        position=\"right\"\n      />\n      <Menu.Item\n        href=\"https://dev.rcpch.ac.uk/\"\n        name=\"API Documentation\"\n        position=\"right\"\n      />\n      <Menu.Item\n        href=\"https://github.com/rcpch/growth-references\"\n        name=\"Growth References\"\n        position=\"right\"\n      />\n      <Menu.Item\n        name=\"Technical\"\n        onClick={props.toggleTechnical}\n        position=\"right\"\n      />\n    </Menu>\n  );\n}\n\nexport default MenuBar;\n","import React from \"react\";\nimport { Grid, Segment, Header, Image } from \"semantic-ui-react\";\nimport MenuBar from \"./MenuBar\";\n\nfunction HeaderBar(props) {\n  return (\n    <Segment basic>\n      <Grid stackable>\n        <Grid.Column width={3}>\n          <Image as=\"a\" href=\"/\" src=\"logo-desktop.svg\" size=\"medium\" wrapped />\n        </Grid.Column>\n        <Grid.Column verticalAlign=\"middle\" textAlign=\"center\" width={5}>\n          <Header color=\"blue\" as=\"h2\">\n            Digital Growth Charts Demo\n          </Header>\n        </Grid.Column>\n        <Grid.Column verticalAlign=\"middle\" width={8}>\n          <MenuBar toggleTechnical={props.toggleTechnical} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n}\n\nexport default HeaderBar;\n","import React from \"react\";\nimport { Sidebar, Menu, Icon, Header, Container } from \"semantic-ui-react\";\n\nfunction Technical(props) {\n  return (\n    <div>\n      <Sidebar\n        as={Menu}\n        animation=\"push\"\n        direction=\"right\"\n        icon=\"labeled\"\n        inverted\n        vertical\n        visible={props.technicalSidebarVisible}\n        width=\"wide\"\n      >\n        <Container textAlign=\"left\">\n          <Icon\n            inverted\n            name=\"close\"\n            size=\"big\"\n            onClick={props.toggleTechnical}\n          />\n        </Container>\n        <Header inverted>Technical</Header>\n        <Menu.Item as=\"a\">\n          <Icon inverted name=\"server\" />\n          Configured API Server URL:\n          {process.env.REACT_APP_GROWTH_API_BASEURL}\n        </Menu.Item>\n      </Sidebar>\n    </div>\n  );\n}\n\nexport default Technical;\n","// React\nimport React, { useState } from \"react\";\nimport \"./App.css\";\n\n// React Router DOM\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\n// RCPCH Components\nimport \"./components/MeasurementForm\";\nimport Footer from \"./components/Footer\";\nimport Home from \"./pages/Home\";\nimport Results from \"./pages/Results\";\nimport Spreadsheet from \"./pages/Spreadsheet\";\nimport SerialResults from \"./pages/SerialResults\";\nimport HeaderBar from \"./components/HeaderBar\";\nimport Technical from \"./components/Technical\";\n\nfunction App() {\n  const [toggle, setToggle] = useState(false);\n\n  function toggleTechnical() {\n    setToggle(!toggle);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <Router>\n          <HeaderBar toggleTechnical={toggleTechnical} />\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/results\">\n              <Results />\n            </Route>\n            <Route path=\"/serial_results\">\n              <SerialResults />\n            </Route>\n            <Route path=\"/spreadsheet\">\n              <Spreadsheet />\n            </Route>\n          </Switch>\n        </Router>\n        <Technical\n          technicalSidebarVisible={toggle}\n          toggleTechnical={toggleTechnical}\n        />\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Semantic UI React\nimport \"semantic-ui-less/semantic.less\";\n\n// CSS\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}