{"version":3,"sources":["components/subcomponents/GestationSelect.js","components/subcomponents/MeasurementMethodSelect.js","components/subcomponents/ReferenceSelect.js","components/subcomponents/SexChoice.js","selectData/measurementOptions.js","selectData/sexOptions.js","selectData/referenceOptions.js","components/MeasurementForm.js","components/chartThemes/themes.js","components/chartThemes/rcpchTheme1.js","components/chartThemes/rcpchTheme2.js","components/chartThemes/rcpchTheme3.js","components/chartThemes/rcpchThemeMonochrome.js","components/chartThemes/RCPCHThemeTraditionalBoy.js","components/chartThemes/RCPCHThemeTraditionalGirl.js","api/Chart.js","functions/deepCopy.js","components/SubComponents.js","components/subcomponents/IntervalSelect.js","components/subcomponents/Slider.js","selectData/intervalOptions.js","components/FictionalChildForm.js","hooks/useRcpchApi.js","components/MeasurementSegment.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["GestationSelect","props","gestationWeeksOptions","gestWeeks","push","key","toString","value","text","Select","compact","name","weeks","options","onChange","e","val","handleGestationChange","days","MeasurementMethodSelect","placeholder","measurementMethod","handleChangeMeasurementMethod","measurementOptions","ReferenceSelect","reference","handleChangeReference","referenceOptions","SexSelect","sex","handleSexChange","sexOptions","disabled","formatDate","inputDate","date","month","day","year","getTime","Date","getMonth","getDate","getFullYear","length","join","error","Error","parseDate","finalArray","split","map","element","index","madeNumber","Number","isNaN","workingDate","MeasurementForm","callbackReturn","disableMeasurement","newSexOptions","state","setState","observation_value_error","validateObservationValue","measurement","observation_value","handleChangeSex","setMeasurementMethod","newSex","measurement_method","disable","handleObservationChange","observation","data","birth_date","observation_date","units","gestation_weeks","gestation_days","birth_date_error","observation_date_error","form_valid","measurementResult","handleChangeDate","bind","handleSubmit","handleChangeGestation","handleResetCurrentGraph","handleUndoLast","event","this","target","newDate","observation_date_object","birth_date_object","timeInterval","measurementArray","formData","changeUnits","setCommands","old","resetCurrent","undoLast","formIsValid","commands","clearMeasurement","newMeasurement","changeSex","Container","Segment","textAlign","Form","onSubmit","Field","Header","as","required","Input","label","type","Group","width","content","basic","color","labelPosition","Message","Button","fluid","icon","onClick","React","Component","ChartTheme","chart","gridlines","axes","centiles","measurements","_chart","_gridlines","_axes","_centiles","_measurements","ChartObject","backgroundColour","height","padding","titleStyle","subTitleStyle","tooltipBackgroundColour","tooltipStroke","tooltipTextStyle","termFill","termStroke","infoBoxFill","infoBoxStroke","infoBoxTextStyle","toggleButtonInactiveColour","toggleButtonActiveColour","toggleButtonTextColour","_backgroundColour","_width","_height","_padding","_titleStyle","_subTitleStyle","_tooltipBackgroundColour","_tooltipStroke","_tooltipTextStyle","_termFill","_termStroke","_infoBoxFill","_infoBoxStroke","_infoBoxTextStyle","_toggleButtonActiveColour","_toggleButtonInactiveColour","_toggleButtonTextColour","PaddingObject","left","right","top","bottom","_left","_right","_top","_bottom","TextStyleObject","colour","size","weight","_name","_colour","_size","_style","_weight","GridlineObject","stroke","strokeWidth","dashed","_stroke","_strokeWidth","_dashed","AxesObject","axisStroke","axisLabelTextStyle","tickLabelStyle","tickLabelTextStyle","_axisStroke","_axisLabelTextStyle","_tickLabelTexSize","CentilesObject","centileStroke","centileStrokeWidth","delayedPubertyAreaFill","_centileStroke","_centileStrokeWidth","_delayedPubertyAreaFill","MeasurementsObject","measurementFill","measurementStroke","measurementSize","_measurementFill","_measurementStroke","_measurementSize","tooltipBackGroundColour","RCPCHChart","RCPCHGridlines","RCPCHCentiles","RCPCHTheme1","RCPCHTheme2","axisLabelColour","RCPCHTheme3","RCPCHThemeMonochrome","RCPCHThemeTraditionalBoy","RCPCHThemeTraditionalGirl","ChartData","isLoading","titles","title","sexText","measurementText","subtitle","setTitle","Dimmer","active","Loader","measurementsArray","chartStyle","measurementStyle","centileStyle","gridlineStyle","axisStyle","enableZoom","deepCopyArray","arr","copy","forEach","elem","Array","isArray","deepCopyObject","obj","tempObj","Object","entries","deepCopy","input","TableBody","Fragment","Table","Row","Cell","measurement_dates","chronological_calendar_age","corrected_calendar_age","child_observation_value","Math","round","measurement_calculated_values","corrected_sds","chronological_sds","corrected_centile","chronological_centile","ResultsSegment","apiResult","celled","collapsing","HeaderCell","Body","bmi","ofc","ErrorModal","body","handleClose","visible","handleCancel","showCancel","Modal","open","closeOnEscape","Content","Actions","negative","IntervalTypeSelect","intervalType","handleChangeIntervalType","intervalTypeOptions","Slider","style","min","max","step","className","id","display","FictionalChildForm","useState","setSex","setWeeks","setDays","startingAge","setStartingAge","endingAge","setEndingAge","setIntervalType","interval","setInterval","driftFlag","setDriftFlag","drift","setDrift","noiseFlag","setNoiseFlag","noise","setNoise","startSDS","setStartSDS","setReference","fromEntries","FormData","values","start_chronological_age","start_age","end_age","measurement_interval_type","measurement_interval_number","interval_value","start_sds","drift_range","noise_range","fictionalFormDataSubmit","intervalOptions","Checkbox","toggle","checked","fetchFromApi","inputParameters","mode","a","url","process","axios","method","headers","response","makeInitialState","turner","calculation","output","fictional_child_data","errors","message","useRcpchApi","apiState","setApiState","fetchResult","useCallback","newInput","mutable","removeLastFromArrays","oldState","both","pop","newOutput","removeLastActiveItem","clearBothActiveArrays","clearApiErrors","useEffect","ignore","relevantArray","latestInput","then","result","measurementError","corrected_measurement_error","chronological_measurement_error","console","log","JSON","stringify","catch","errorForUser","results","apiErrors","panesBlueprint","menuItem","measurementName","themeOptions","MeasurementSegment","activeIndex","defaultTheme","setChartSyle","setAxisStyle","setCentileStyle","setMeasurementStyle","theme","setTheme","flip","setFlip","setDisabled","setMode","errorModal","setErrorModal","customSetMeasurementMethod","newMeasurementMethod","existingSex","handleTabChange","warn","changeReference","newReference","birth_data","ignoreError","existingResults","oldResult","selectedTheme","handleResults","newResultInArray","errorString","latestResult","newGestation","oldGestation","handleChangeTheme","panes","details","render","Tab","Pane","attached","Chart","TabPanes","menu","onTabChange","FormPanes","ThemeSelection","Dropdown","floating","inline","Grid","padded","Column","verticalAlign","columns","Home","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6529a7bc.chunk.js","sourcesContent":["import React from 'react';\n\n// Semantic UI React\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\nfunction GestationSelect(props){\n    let gestationWeeksOptions = [];\n    let gestWeeks = 23;\n    while (gestWeeks <= 42) {\n      gestationWeeksOptions.push({\n          key: gestWeeks.toString(10),\n          value: gestWeeks,\n          text: gestWeeks.toString(10),\n      });\n      gestWeeks++;\n    }\n    \n    const gestationDaysOptions = [\n    { key: '0', value: 0, text: '0' },\n    { key: '1', value: 1, text: '1' },\n    { key: '2', value: 2, text: '2' },\n    { key: '3', value: 3, text: '3' },\n    { key: '4', value: 4, text: '4' },\n    { key: '5', value: 5, text: '5' },\n    { key: '6', value: 6, text: '6' },\n    ];\n\n  return (\n    <span>\n        <Select\n          compact\n          name=\"gestation_weeks\"\n          value={props.weeks}\n          options={gestationWeeksOptions}\n          onChange={(e, val) => props.handleGestationChange(val)}\n        />\n        &nbsp;+\n        <Select\n          compact\n          name=\"gestation_days\"\n          value={props.days}\n          options={gestationDaysOptions}\n          onChange={(e, val) => props.handleGestationChange(val)}\n        />\n        &nbsp; weeks\n    </span>)\n}\n\nexport default GestationSelect","import React from 'react';\nimport {\n    Select\n  } from 'semantic-ui-react';\n\n  \nfunction MeasurementMethodSelect(props){\n\n    return <Select\n        name=\"measurement_method\"\n        placeholder=\"Measurement\"\n        value={props.measurementMethod}\n        onChange={(e, val) => props.handleChangeMeasurementMethod(val.value)}\n        options={props.measurementOptions}\n    />\n}\n\nexport default MeasurementMethodSelect","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction ReferenceSelect(props){\n\n    return <Select\n        name=\"reference\"\n        placeholder=\"UK-WHO\"\n        value={props.reference}\n        onChange={(e, val)=>props.handleChangeReference(val)}\n        options={props.referenceOptions}\n    />\n}\n\nexport default ReferenceSelect","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction SexSelect(props){\n\n    return <Select\n        name=\"sex\"\n        placeholder=\"Sex\"\n        value={props.sex}\n        onChange={(e, val)=>props.handleSexChange(val)}\n        options={props.sexOptions}\n    />\n}\n\nexport default SexSelect","const measurementOptions = [\n    { key: 'height', value: 'height', text: 'Height (cm)', disabled: false },\n    { key: 'weight', value: 'weight', text: 'Weight (kg)', disabled: false },\n    { key: 'bmi', value: 'bmi', text: 'BMI (kg/m²)', disabled: false },\n    {\n      key: 'ofc',\n      value: 'ofc',\n      text: 'Head Circumference (cm)',\n      disabled: false,\n    },\n  ];\n\n  export default measurementOptions","const sexOptions = [\n    { key: 'male', value: 'male', text: 'Boy', disabled: false },\n    { key: 'female', value: 'female', text: 'Girl', disabled: false },\n];\n\nexport default sexOptions","const referenceOptions = [\n    { key: 'uk-who', value: 'uk-who', text: 'UK-WHO' },\n    { key: 'trisomy-21', value: 'trisomy-21', text: \"Down's Syndrome\" },\n    { key: 'turner', value: 'turner', text: \"Turner's syndrome\" },\n  ];\n\nexport default referenceOptions","import React from 'react';\n\nimport {\n  Container,\n  Segment,\n  Form,\n  Input,\n  Button,\n  Header,\n  Message,\n} from 'semantic-ui-react';\nimport GestationSelect from './subcomponents/GestationSelect';\nimport MeasurementMethodSelect from './subcomponents/MeasurementMethodSelect';\nimport ReferenceSelect from './subcomponents/ReferenceSelect';\nimport SexSelect from './subcomponents/SexChoice';\nimport measurementOptions from '../selectData/measurementOptions';\nimport sexOptions from '../selectData/sexOptions';\nimport referenceOptions from '../selectData/referenceOptions';\n\nconst ROBERT_WADLOW = 272; // interesting fact - Robert Wadlow (22/2/1918 – 15/7/1940) was the world's tallest man\nconst JON_BROWER_MINNOCH = 635; // interesting fact -  Jon Brower Minnoch (Born USA) was the world's heaviest man\nconst KHALID_BIN_MOHSEN_SHAARI = 204; // Khalid bin Mohsen Shaari (2/8/1991) from Saudi Arabia had the highest recorded BMI\n\nconst formatDate = (inputDate) => {\n  let date;\n  let month;\n  let day;\n  let year;\n  try {\n    inputDate.getTime();\n    date = new Date(inputDate);\n    month = '' + (date.getMonth() + 1);\n    day = '' + date.getDate();\n    year = date.getFullYear();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  } catch (error) {\n    throw new Error('Input date for formatDate not recognised');\n  }\n};\n\nconst parseDate = (inputDate) => {\n  try {\n    const dateArray = inputDate.split('-');\n    const finalArray = dateArray.map((element, index) => {\n      if (element !== '') {\n        const madeNumber = Number(element);\n        if (Number.isNaN(madeNumber)) {\n          throw new Error();\n        } else {\n          return index === 1 ? madeNumber - 1 : madeNumber;\n        }\n      } else {\n        throw new Error();\n      }\n    });\n    if (\n      finalArray.length !== 3 ||\n      finalArray[1] < 0 ||\n      finalArray[1] > 11 ||\n      finalArray[2] < 1 ||\n      finalArray[2] > 31\n    ) {\n      throw new Error();\n    }\n    const workingDate = new Date(...finalArray);\n    if (typeof workingDate.getTime() === 'number') {\n      return workingDate;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n};\n\nclass MeasurementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birth_date: formatDate(new Date()),\n      observation_date: formatDate(new Date()),\n      measurement: {\n        observation_value: '',\n        units: 'cm',\n      },\n      sex: 'male',\n      gestation_weeks: 40,\n      gestation_days: 0,\n      birth_date_error: '',\n      observation_date_error: '',\n      observation_value_error: 'empty',\n      form_valid: false,\n      measurementResult: [],\n      reference: 'uk-who',\n      sexOptions: sexOptions,\n      measurementOptions: measurementOptions,\n      referenceOptions: referenceOptions\n    };\n\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeMeasurementMethod =\n      this.handleChangeMeasurementMethod.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeGestation = this.handleChangeGestation.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n    this.handleObservationChange = this.handleObservationChange.bind(this);\n    this.handleChangeReference = this.handleChangeReference.bind(this);\n    this.handleResetCurrentGraph = this.handleResetCurrentGraph.bind(this);\n    this.handleUndoLast = this.handleUndoLast.bind(this);\n  }\n\n  handleChangeReference = ({value}) => {\n    //call back, returns new sex if already measurements charted with different sex\n    \n    const callbackReturn = this.props.handleChangeReference(value);\n    if (value === 'turner') {\n      this.disableMeasurement('weight', true);\n      this.disableMeasurement('ofc', true);\n      this.disableMeasurement('bmi', true);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = true;\n      this.setState({\n        sex: 'female',\n        observation_value_error: this.validateObservationValue(\n          'height',\n          this.state.measurement.observation_value\n        ),\n        reference: value,\n        sexOptions: newSexOptions,\n      });\n      this.props.handleChangeSex('female', true);\n      this.props.setMeasurementMethod('height');\n    } else {\n      this.disableMeasurement('weight', false);\n      this.disableMeasurement('ofc', false);\n      this.disableMeasurement('bmi', false);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = false;\n      this.setState({\n        observation_value_error: this.validateObservationValue(\n          this.props.measurementMethod,\n          this.state.measurement.observation_value\n        ),\n        sex: callbackReturn.newSex,\n        reference: value,\n        sexOptions: newSexOptions\n      });\n    }\n  };\n\n  disableMeasurement = (measurement_method, disable) => {\n    if (measurement_method === 'height') {\n      let options = this.state.measurementOptions;\n      options[0].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'weight') {\n      let options = this.state.measurementOptions;\n      options[1].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'ofc') {\n      let options = this.state.measurementOptions;\n      options[2].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'bmi') {\n      let options = this.state.measurementOptions;\n      options[3].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n  };\n\n  handleChangeDate(event) {\n    this.setState({ [event.target.name]: event.target.value });\n    const newDate = parseDate(event.target.value);\n    if (newDate) {\n      const observation_date_object =\n        event.target.name === 'birth_date'\n          ? parseDate(this.state.observation_date)\n          : newDate;\n      const birth_date_object =\n        event.target.name === 'birth_date'\n          ? newDate\n          : parseDate(this.state.birth_date);\n      const timeInterval =\n        observation_date_object.getTime() - birth_date_object.getTime();\n      if (timeInterval < 0) {\n        if (event.target.name === 'birth_date') {\n          this.setState({\n            birth_date_error:\n              'Date of birth cannot come after the date of measurement',\n          });\n        } else if (event.target.name === 'observation_date') {\n          this.setState({\n            observation_date_error:\n              'Date of measurement cannot come before the date of birth.',\n          });\n        }\n      } else if (timeInterval > 631139040000) {\n        this.setState({\n          [`${event.target.name}_error`]:\n            'No centile data exists over 20 years of age.',\n        });\n      } else {\n        this.setState({ birth_date_error: '', observation_date_error: '' });\n      }\n    } else {\n      this.setState({\n        [`${event.target.name}_error`]: 'Please enter a valid date.',\n      });\n    }\n  }\n\n  handleObservationChange = (observation, data) => {\n    // this is updating an observation value\n\n    const observation_value = data.value;\n    let { measurement, observation_value_error } = this.state;\n    measurement.observation_value = observation_value;\n    observation_value_error = this.validateObservationValue(\n      this.props.measurementMethod,\n      observation_value\n    );\n    this.setState({\n      measurement: measurement,\n      observation_value_error: observation_value_error,\n    });\n  };\n\n  validateObservationValue(measurement_method, observation_value) {\n    if (observation_value === '') {\n      return 'empty';\n    }\n    if (Number.isNaN(Number(observation_value))) {\n      return 'Please enter a valid number.';\n    }\n    if (measurement_method === 'height') {\n      if (observation_value < 20) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > ROBERT_WADLOW) {\n        return 'The ' + measurement_method + ' you entered is too tall.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'weight') {\n      if (observation_value < 0.01) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > JON_BROWER_MINNOCH) {\n        return 'The ' + measurement_method + ' you entered is too heavy.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'bmi') {\n      if (observation_value < 5) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > KHALID_BIN_MOHSEN_SHAARI) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'ofc') {\n      if (observation_value < 25) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > 70) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n  }\n\n  formIsValid() {\n    if (\n      this.state.reference === 'turner' &&\n      this.props.measurementMethod !== 'height'\n    ) {\n      return false;\n    }\n    if (\n      this.state.birth_date_error === '' &&\n      this.state.observation_date_error === '' &&\n      this.state.observation_value_error === ''\n    ) {\n      return true;\n    }\n  }\n\n  handleSubmit(event) {\n    // passes the form data back to the parent (measurement segment)\n    const measurementArray = [];\n    const formData = {\n      birth_date: this.state.birth_date,\n      observation_date: this.state.observation_date,\n      measurement_method: this.props.measurementMethod,\n      observation_value: this.state.measurement.observation_value,\n      gestation_weeks: this.state.gestation_weeks,\n      gestation_days: this.state.gestation_days,\n      sex: this.state.sex,\n    };\n    measurementArray.push(formData);\n    this.props.measurementResult(measurementArray);\n  }\n\n  handleChangeMeasurementMethod(data) {\n    let measurement = { ...this.state.measurement };\n    if (data !== this.props.measurementMethod) {\n      measurement.units = this.changeUnits(data);\n      this.props.setMeasurementMethod(data);\n      this.setState({\n        measurement: measurement,\n        observation_value_error: this.validateObservationValue(\n          data,\n          measurement.observation_value\n        ),\n      });\n      if (\n        this.state.reference === 'turner' &&\n        this.props.measurementMethod !== 'height'\n      ) {\n        this.disableMeasurement('weight', true);\n        this.disableMeasurement('bmi', true);\n        this.disableMeasurement('ofc', true);\n      } else {\n        this.disableMeasurement('weight', false);\n        this.disableMeasurement('bmi', false);\n        this.disableMeasurement('ofc', false);\n      }\n    }\n  }\n\n  handleChangeGestation(event, data) {\n    const { name, value } = data;\n    if (name === 'gestation_weeks') {\n      this.setState({ gestation_weeks: value });\n      if (value === 42) {\n        this.setState({ gestation_days: 0 });\n      }\n    } else if (name === 'gestation_days') {\n      if (this.state.gestation_weeks === 42) {\n        this.setState({ gestation_days: 0 });\n      } else {\n        this.setState({ gestation_days: value });\n      }\n    }\n  }\n\n  handleChangeSex(data) {\n    const success = this.props.handleChangeSex(data.value);\n    if (success) {\n      this.setState({ sex: data.value });\n    }\n  }\n\n  changeUnits(measurement_method) {\n    if (measurement_method === 'height') {\n      return 'cm';\n    }\n    if (measurement_method === 'weight') {\n      return 'kg';\n    }\n    if (measurement_method === 'bmi') {\n      return 'kg/m²';\n    }\n    if (measurement_method === 'ofc') {\n      return 'cm';\n    }\n  }\n\n  handleResetCurrentGraph() {\n    this.props.setCommands((old) => {\n      return { ...old, resetCurrent: true };\n    });\n  }\n\n  handleUndoLast() {\n    this.props.setCommands((old) => {\n      return { ...old, undoLast: true };\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.form_valid !== this.formIsValid()) {\n      this.setState({ form_valid: this.formIsValid() });\n    }\n    if (this.props.commands.clearMeasurement) {\n      const newMeasurement = { ...this.state.measurement };\n      newMeasurement.observation_value = '';\n      this.setState({\n        measurement: newMeasurement,\n        observation_value_error: 'empty',\n        form_valid: false,\n      });\n      this.props.setCommands((old) => {\n        return { ...old, clearMeasurement: false };\n      });\n    }\n    if (this.props.commands.changeSex) {\n      this.setState({ sex: this.state.sex === 'male' ? 'female' : 'male' });\n      this.props.setCommands((old) => {\n        return { ...old, changeSex: false };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment textAlign={'center'}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n              <Header as=\"h5\" textAlign=\"left\">\n                Reference\n              </Header>\n              {/* <Select\n                name=\"reference\"\n                value={this.state.reference}\n                options={references}\n                onChange={this.handleChangeReference}\n                placeholder=\"Select reference\"\n              /> */}\n              <ReferenceSelect \n                reference={this.state.reference}\n                handleChangeReference={this.handleChangeReference}\n                referenceOptions={this.state.referenceOptions}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Header as=\"h5\" textAlign=\"left\">\n                Dates\n              </Header>\n              <Input\n                label=\"Birth Date\"\n                type=\"date\"\n                name=\"birth_date\"\n                value={this.state.birth_date}\n                placeholder=\"Date of Birth\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Input\n                label=\"Measurement Date\"\n                type=\"date\"\n                name=\"observation_date\"\n                value={this.state.observation_date}\n                placeholder=\"Date of Measurement\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            {/* <Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Measurements\n            </Header>\n\n            <Form.Group>\n              <Form.Field required>\n                {/* <Select\n                  value={this.props.measurementMethod}\n                  name=\"measurement_method\"\n                  placeholder=\"Measurement Type\"\n                  options={measurementOptions}\n                  onChange={this.handleChangeMeasurementMethod}\n                /> */}\n                <MeasurementMethodSelect \n                  measurementMethod={this.props.measurementMethod}\n                  handleChangeMeasurementMethod={this.handleChangeMeasurementMethod}\n                  measurementOptions={this.state.measurementOptions}\n                />\n              </Form.Field>\n              <Form.Field required width={8}>\n                <Input\n                  type=\"decimal\"\n                  name=\"observation_value\"\n                  placeholder=\"Measurement\"\n                  value={this.state.measurement.observation_value}\n                  label={{\n                    content: this.state.measurement.units.toString(),\n                    basic: true,\n                    color: 'blue',\n                  }}\n                  labelPosition=\"right\"\n                  onChange={this.handleObservationChange}\n                />\n              </Form.Field>\n            </Form.Group>\n            {this.state.observation_value_error &&\n              this.state.observation_value_error !== 'empty' && (\n                <Message color=\"red\">\n                  {this.state.observation_value_error}\n                </Message>\n              )}\n            {this.state.observation_date_error ? (\n              <Message color=\"red\">{this.state.observation_date_error}</Message>\n            ) : null}\n            {this.state.birth_date_error ? (\n              <Message color=\"red\">{this.state.birth_date_error}</Message>\n            ) : null}\n            {/* </Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Sex\n            </Header>\n            <Form.Field required>\n              {/* <Select\n                name=\"sex\"\n                placeholder=\"Sex\"\n                value={this.state.sex}\n                onChange={this.handleChangeSex}\n                options={this.state.sexOptions}\n              /> */}\n              <SexSelect \n                sex={this.state.sex}\n                handleSexChange={this.handleChangeSex}\n                sexOptions={this.state.sexOptions}\n              />\n            </Form.Field>\n\n            <Form.Group>\n              <Form.Field>\n                <Header as=\"h5\" textAlign=\"left\">\n                  Gestation\n                </Header>\n                <GestationSelect \n                  name=\"gestation_select\"\n                  weeks={this.state.gestation_weeks}\n                  days={this.state.gestation_days}\n                  handleChangeGestation={this.handleChangeGestation}\n                />\n                {/* <span>\n                  <Select\n                    compact\n                    name=\"gestation_weeks\"\n                    value={this.state.gestation_weeks}\n                    options={gestationWeeksOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp;+\n                  <Select\n                    compact\n                    name=\"gestation_days\"\n                    value={this.state.gestation_days}\n                    options={gestationDaysOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp; weeks\n                </span> */}\n              </Form.Field>\n              {/* </Segment> */}\n            </Form.Group>\n\n            <Form.Field>\n              <Button\n                content=\"Calculate Centiles and Add To Chart\"\n                type=\"submit\"\n                fluid\n                disabled={!this.state.form_valid}\n                color=\"pink\"\n                icon=\"line graph\"\n                labelPosition=\"right\"\n              />\n            </Form.Field>\n          </Form>\n          <Segment>\n            <Button\n              content=\"Reset Chart\"\n              icon=\"power off\"\n              onClick={this.handleResetCurrentGraph}\n            />\n            <Button\n              content=\"Remove Last\"\n              icon=\"undo\"\n              onClick={this.handleUndoLast}\n            />\n          </Segment>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default MeasurementForm;\n","export class ChartTheme{\n    constructor(chart, gridlines, axes, centiles, measurements){\n        this.chart = chart\n        this.gridlines = gridlines\n        this.axes = axes\n        this.centiles = centiles\n        this.measurements = measurements\n    }\n    get chart(){\n        return this._chart\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get axes(){\n        return this._axes\n    }\n    get centiles(){\n        return this._centiles\n    }\n    get measurements(){\n        return this._measurements\n    }\n\n    set chart(val){\n        this._chart=val\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set axes(val){\n        this._axes=val\n    }\n    set centiles(val){\n        this._centiles=val\n    }\n    set measurements(val){\n        this._measurements=val\n    }\n}\n\nexport class ChartObject{\n    constructor(backgroundColour, width, height, padding, titleStyle, subTitleStyle, tooltipBackgroundColour, tooltipStroke, tooltipTextStyle, termFill, termStroke, infoBoxFill, infoBoxStroke, infoBoxTextStyle, toggleButtonInactiveColour, toggleButtonActiveColour, toggleButtonTextColour){\n        this.backgroundColour = backgroundColour\n        this.width = width\n        this.height = height\n        this.padding = padding\n        this.titleStyle=titleStyle\n        this.subTitleStyle=subTitleStyle\n        this.tooltipBackgroundColour = tooltipBackgroundColour\n        this.tooltipStroke = tooltipStroke\n        this.tooltipTextStyle = tooltipTextStyle\n        this.termFill=termFill\n        this.termStroke=termStroke\n        this.infoBoxFill=infoBoxFill\n        this.infoBoxStroke=infoBoxStroke\n        this.infoBoxTextStyle=infoBoxTextStyle\n        this.toggleButtonInactiveColour=toggleButtonInactiveColour\n        this.toggleButtonActiveColour=toggleButtonActiveColour\n        this.toggleButtonTextColour=toggleButtonTextColour\n    }\n    get backgroundColour(){\n        return this._backgroundColour\n    }\n    get width(){\n        return this._width\n    }\n    get height(){\n        return this._height\n    }\n    get padding(){\n        return this._padding\n    }\n    get titleStyle(){\n        return this._titleStyle\n    }\n    get subTitleStyle(){\n        return this._subTitleStyle\n    }\n    get tooltipBackgroundColour(){\n        return this._tooltipBackgroundColour\n    }\n    get tooltipStroke(){\n        return this._tooltipStroke\n    }\n    get tooltipTextStyle(){\n        return this._tooltipTextStyle\n    }\n    get termFill(){\n        return this._termFill\n    }\n    get termStroke(){\n        return this._termStroke\n    }\n    get infoBoxFill(){\n        return this._infoBoxFill\n    }\n    get infoBoxStroke(){\n        return this._infoBoxStroke\n    }\n    get infoBoxTextStyle(){\n        return this._infoBoxTextStyle\n    }\n    get toggleButtonActiveColour(){\n        return this._toggleButtonActiveColour\n    }\n    get toggleButtonInactiveColour(){\n        return this._toggleButtonInactiveColour\n    }\n    get toggleButtonTextColour(){\n        return this._toggleButtonTextColour\n    }\n    set termFill(val){\n        this._termFill=val\n    }\n    set termStroke(val){\n        this._termStroke=val\n    }\n    set infoBoxFill(val){\n        this._infoBoxFill=val\n    }\n    set infoBoxStroke(val){\n        this._infoBoxStroke=val\n    }\n    set infoBoxTextStyle(val){\n        this._infoBoxTextStyle=val\n    }\n    set backgroundColour(val){\n        this._backgroundColour=val\n    }\n    set width(val){\n        this._width=val\n    }\n    set height(val){\n        this._height=val\n    }\n    set padding(val){\n        this._padding=val\n    }\n    set tooltipBackgroundColour(val){\n        this._tooltipBackgroundColour=val\n    }set tooltipStroke(val){\n        this._tooltipStroke=val\n    }\n    set tooltipTextStyle(val){\n        this._tooltipTextStyle=val\n    }\n    set titleStyle(val){\n        this._titleStyle=val\n    }\n    set subTitleStyle(val){\n        this._subTitleStyle=val\n    }\n    set toggleButtonTextColour(val){\n        this._toggleButtonTextColour=val\n    }\n    set toggleButtonInactiveColour(val){\n        this._toggleButtonInactiveColour=val\n    }\n    set toggleButtonActiveColour(val){\n        this._toggleButtonActiveColour=val\n    }\n}\n\nexport class PaddingObject{\n    constructor(left, right, top, bottom){\n        this.left = left\n        this.right=right\n        this.top=top\n        this.bottom=bottom\n    }\n    get left(){\n        return this._left\n    }\n    get right(){\n        return this._right\n    }\n    get top(){\n        return this._top\n    }\n    get bottom(){\n        return this._bottom\n    }\n\n    set left(val){\n        this._left=val\n    }\n    set right(val){\n        this._right=val\n    }\n    set top(val){\n        this._top=val\n    }\n    set bottom(val){\n        this._bottom=val\n    }\n}\n\nexport class TextStyleObject{\n    constructor(name, colour, size, weight){\n        this.name=name\n        this.colour=colour\n        this.size=size\n        this.weight=weight\n    }\n    get name(){\n        return this._name\n    }\n    get colour(){\n        return this._colour\n    }\n    get size(){\n        return this._size\n    }\n    get style(){\n        return this._style\n    }\n    set name(val){\n        this._name=val\n    }\n    set colour(val){\n        this._colour=val\n    }\n    set size(val){\n        this._size=val\n    }\n    set weight(val){\n        this._weight=val\n    }\n}\n\nexport class GridlineObject{\n    constructor(gridlines, stroke, strokeWidth, dashed){\n        this.gridlines=gridlines\n        this.stroke=stroke\n        this.strokeWidth = strokeWidth\n        this.dashed=dashed\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get stroke(){\n        return this._stroke\n    }\n    get strokeWidth(){\n        return this._strokeWidth\n    }\n    get dashed(){\n        return this._dashed\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set stroke(val){\n        this._stroke=val\n    }\n    set strokeWidth(val){\n        this._strokeWidth=val\n    }\n    set dashed(val){\n        this._dashed=val\n    }\n}\n\nexport class AxesObject{\n    constructor(axisStroke, axisLabelTextStyle, tickLabelStyle){\n        this.axisStroke=axisStroke\n        this.axisLabelTextStyle=axisLabelTextStyle\n        this.tickLabelTextStyle=tickLabelStyle\n    }\n    get axisStroke(){\n        return this._axisStroke\n    }\n    get axisLabelTextStyle(){\n        return this._axisLabelTextStyle\n    }\n    get tickLabelTextStyle(){\n        return this._tickLabelTexSize\n    }\n    set axisStroke(val){\n        this._axisStroke=val\n    }\n    set axisLabelTextStyle(val){\n        this._axisLabelTextStyle=val\n    }\n    set tickLabelTextStyle(val){\n        this._tickLabelTexSize=val\n    }\n}\nexport class CentilesObject{\n    constructor(centileStroke, centileStrokeWidth, delayedPubertyAreaFill){\n        this.centileStroke=centileStroke\n        this.centileStrokeWidth=centileStrokeWidth\n        this.delayedPubertyAreaFill=delayedPubertyAreaFill\n    }\n    get centileStroke(){\n        return this._centileStroke\n    }\n    get centileStrokeWidth(){\n        return this._centileStrokeWidth\n    }\n    get delayedPubertyAreaFill(){\n        return this._delayedPubertyAreaFill\n    }\n    set centileStroke(val){\n        this._centileStroke=val\n    }\n    set centileStrokeWidth(val){\n        this._centileStrokeWidth=val\n    }\n    set delayedPubertyAreaFill(val){\n        this._delayedPubertyAreaFill=val\n    }\n}\n\nexport class MeasurementsObject{\n    constructor(measurementFill, measurementStroke, measurementSize){\n        this.measurementFill=measurementFill        \n        this.measurementSize=measurementSize\n           }\n    get measurementFill(){\n        return this._measurementFill\n    }\n    get measurementStroke(){\n        return this._measurementStroke\n    }\n    get measurementSize(){\n        return this._measurementSize\n    }\n    set measurementFill(val){\n        this._measurementFill=val\n    }\n    set measurementStroke(val){\n        this._measurementStroke=val\n    }\n    set measurementSize(val){\n        this._measurementSize=val\n    }\n}\n\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 1\n\nData:  #7159aa - purple\nArea:  #c6bddd - purple (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#7159aa';\nconst pubertyFill = '#c6bddd';\nconst tooltipBackGroundColour = '#fdc300';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme1 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme1;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 2\n\nData:  #ff8000 - orange\nArea:  #ffc080 - orange (tint 40%)\ntooltip: #3366cc - strong blue\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#ff8000';\nconst pubertyFill = '#ffc080';\nconst tooltipBackGroundColour = '#3366cc';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#FFFFFF',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme2 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme2;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 3\n\nData:   #e60700 - red\nArea:   #f59c99 - red (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#e60700';\nconst pubertyFill = '#f59c99';\nconst tooltipBackGroundColour = '#fdc300';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\nconst axisLabelColour = '#000000';\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\nconst axisLabelSize = 10;\nconst tickLabelSize = 8;\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  axisLabelSize,\n  'normal'\n);\nconst tickLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  tickLabelSize,\n  'normal'\n);\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme3 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme3;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 4 - monochrome\n\nData:   #000000 - black\nArea:   #b3b3b3 - midgrey\ntooltip: #FFFFF - white\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n \n*/\n\nconst centileColour = '#000000';\nconst pubertyFill = '#b3b3b3';\nconst tooltipBackgroundColour = '#b3b3b3';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeMonochrome = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\nexport default RCPCHThemeMonochrome;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nRCPCH traditional: boy\n\n// boy 0 163 222 - #00a3de\n\nData:   #00a3de - blue\nArea:   #66c8eb - blue tint 49%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#00a3de';\nconst pubertyFill = '#66c8eb';\nconst tooltipBackgroundColour = '#66c8eb';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalBoy = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalBoy;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTraditional: girl\n\n// girl 201 85 157 - #c9559d\n\nData:   #c9559d - pink\nArea:   df99c4 - pink tint 40%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#c9559d';\nconst pubertyFill = '#df99c4';\nconst tooltipBackgroundColour = '#df99c4';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalGirl = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalGirl;\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nimport { RCPCHChart } from '@rcpch/digital-growth-charts-react-component-library';\n\nfunction ChartData(props) {\n  const isLoading = props.isLoading;\n  const titles = setTitle(props);\n\n  return (\n    <div>\n      <Dimmer active={isLoading}>\n        <Loader>Fetching Data</Loader>\n      </Dimmer>\n      <RCPCHChart\n        reference={props.reference}\n        measurementMethod={props.measurementMethod}\n        sex={props.sex}\n        title={titles.title}\n        subtitle={titles.subtitle}\n        measurementsArray={props.measurementsArray} // this is the plottable child data\n        chartStyle={props.chartStyle}\n        measurementStyle={props.measurementStyle}\n        centileStyle={props.centileStyle}\n        gridlineStyle={props.gridlineStyle}\n        axisStyle={props.axisStyle}\n        enableZoom\n      />\n    </div>\n  );\n}\n\nfunction setTitle(props) {\n  // set the title of the chart\n  let title = '';\n  let subTitle = '';\n  if (props.reference === 'uk-who') {\n    title = 'UK-WHO';\n  } else if (props.reference === 'turner') {\n    title = \"Turner's Syndrome\";\n  } else if (props.reference === 'trisomy-21') {\n    title = \"Trisomy 21 (Down's Syndrome)\";\n  }\n\n  let sexText = '';\n  let measurementText = '';\n  if (props.sex === 'male') {\n    sexText = 'Boys';\n  } else {\n    sexText = 'Girls';\n  }\n\n  switch (props.measurementMethod) {\n    case 'height':\n      measurementText = 'Height / Length';\n      break;\n    case 'weight':\n      measurementText = 'Weight';\n      break;\n    case 'bmi':\n      measurementText = 'Body Mass Index';\n      break;\n    case 'ofc':\n      measurementText = 'Head Circumference';\n      break;\n    default:\n      measurementText = '';\n      break;\n  }\n\n  subTitle = measurementText + ' - ' + sexText;\n\n  return { subtitle: subTitle, title: title };\n}\n\nexport default ChartData;\n","const deepCopyArray = (arr) => {\n  let copy = [];\n  arr.forEach((elem) => {\n    if (Array.isArray(elem)) {\n      copy.push(deepCopyArray(elem));\n    } else {\n      if (typeof elem === 'object' && elem !== null) {\n        copy.push(deepCopyObject(elem));\n      } else {\n        copy.push(elem);\n      }\n    }\n  });\n  return copy;\n};\n\nconst deepCopyObject = (obj) => {\n  let tempObj = {};\n  for (let [key, value] of Object.entries(obj)) {\n    if (Array.isArray(value)) {\n      tempObj[key] = deepCopyArray(value);\n    } else {\n      if (typeof value === 'object' && value !== null) {\n        tempObj[key] = deepCopyObject(value);\n      } else {\n        tempObj[key] = value;\n      }\n    }\n  }\n  return tempObj;\n};\n\nconst deepCopy = (input) => {\n  if (Array.isArray(input)) {\n    return deepCopyArray(input);\n  } else if (typeof input === 'object' && input !== null) {\n    return deepCopyObject(input);\n  } else {\n    return input;\n  }\n};\n\nexport default deepCopy;\n","import React from 'react';\nimport {\n  Segment,\n  Message,\n  Button,\n  Table,\n  List,\n  Modal,\n} from 'semantic-ui-react';\n\nconst units = (measurementMethod) => {\n  if (measurementMethod === 'height') {\n    return 'cm';\n  }\n  if (measurementMethod === 'weight') {\n    return 'kg';\n  }\n  if (measurementMethod === 'bmi') {\n    return 'kg/m²';\n  }\n  if (measurementMethod === 'ofc') {\n    return 'cm';\n  }\n};\n\nexport const Acknowledgements = () => {\n  // list={[\"Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross sectional stature and weight reference curves for the UK, 1990. Arch Dis Child 1995; 73:17-24.\", \"<a href='www.who.int/childgrowth/en'>www.who.int/childgrowth/en</a>\", \"For further relevant references see fact sheet downloadable from www.growthcharts.RCPCH.ac.uk\"]}\n  return (\n    <Message>\n      <Message.Header>References</Message.Header>\n      <List>\n        <List.Item>\n          Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross\n          sectional stature and weight reference curves for the UK, 1990. Arch\n          Dis Child 1995; 73:17-24.\n        </List.Item>\n        <List.Item>\n          <a href=\"www.who.int/childgrowth/en\">www.who.int/childgrowth/en</a>\n        </List.Item>\n        <List.Item>\n          For further relevant references see fact sheet downloadable from{' '}\n          <a href=\"www.growthcharts.RCPCH.ac.uk\">\n            www.growthcharts.RCPCH.ac.uk\n          </a>\n        </List.Item>\n      </List>\n    </Message>\n  );\n};\n\nexport const TableBody = (props) => {\n  const measurement = props.measurement;\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>Ages</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.chronological_calendar_age}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.corrected_calendar_age}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Measurement</Table.Cell>\n        <Table.Cell>\n          {measurement.child_observation_value.observation_value}{' '}\n          {units(measurement.child_observation_value.measurement_method)}\n        </Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>SDS</Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.corrected_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.chronological_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Centiles</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.corrected_centile}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.chronological_centile}\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nexport const ResultsSegment = ({ apiResult, reference }) => (\n  <Segment>\n    <Table basic=\"very\" celled collapsing compact>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell></Table.HeaderCell>\n          <Table.HeaderCell>Corrected Results</Table.HeaderCell>\n          <Table.HeaderCell>Chronological Results</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {apiResult[reference].height.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Heights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].height.length > 0 &&\n          apiResult[reference].height.map((measurement, index) => {\n            return <TableBody measurement={measurement} key={index} />;\n          })}\n        {apiResult[reference].weight.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Weights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].weight.length > 0 &&\n          apiResult[reference].weight.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].bmi.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>BMIs</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].bmi.length > 0 &&\n          apiResult.bmi.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].ofc.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Head Circumferences</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].ofc.length > 0 &&\n          apiResult[reference].ofc.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n\nexport const ErrorModal = ({\n  title,\n  body,\n  handleClose,\n  visible,\n  handleCancel,\n}) => {\n  const showCancel = handleCancel ? true : false;\n  return (\n    <Modal title={title} open={visible} size=\"small\" closeOnEscape={true}>\n      <Modal.Header>{title}</Modal.Header>\n      <Modal.Content>{body}</Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={handleClose}>\n          OK\n        </Button>\n        {showCancel && <Button onClick={handleCancel}>Cancel</Button>}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction IntervalTypeSelect(props){\n\n    return <Select\n        name=\"interval\"\n        placeholder=\"days\"\n        value={props.intervalType}\n        onChange={(e, val)=>props.handleChangeIntervalType(val)}\n        options={props.intervalTypeOptions}\n    />\n}\n\nexport default IntervalTypeSelect","import React from 'react';\n\nconst Slider = (props) => {\n    return <div style={{textAlign: 'left'}}>\n        <label style={{padding: \"10px\"}}>{props.min}</label>\n        \n        <input \n            type=\"range\" \n            min={props.min} \n            max={props.max} \n            value={props.value}\n            step={props.step}\n            className=\"slider\" \n            id=\"myRange\"\n            onChange={(e)=> props.onChange(e.target.value)}\n        />\n        \n        <label style={{padding: \"10px\"}}>{props.max}</label>\n\n        <h5 style={{display:'inline'}}>{props.label}: {props.value} SDS</h5>\n    </div>\n}\n\nexport default Slider","const intervalTypeOptions = [\n    { key: 'd', value: 'days', text: 'Days', disabled: false },\n    { key: 'w', value: 'weeks', text: 'Weeks', disabled: false },\n    { key: 'm', value: 'months', text: 'Months', disabled: false },\n    { key: 'y', value: 'years', text: 'Years', disabled: false },\n];\nexport default intervalTypeOptions","import React, { useState } from 'react';\n\nimport { Form, Input, Header, Checkbox, Button } from 'semantic-ui-react';\n\nimport GestationSelect from './subcomponents/GestationSelect';\nimport IntervalTypeSelect from './subcomponents/IntervalSelect';\nimport MeasurementMethodSelect from './subcomponents/MeasurementMethodSelect';\nimport ReferenceSelect from './subcomponents/ReferenceSelect';\nimport SexSelect from './subcomponents/SexChoice';\nimport Slider from './subcomponents/Slider';\n\nimport referenceOptions from '../selectData/referenceOptions';\nimport sexOptions from '../selectData/sexOptions';\nimport measurementOptions from '../selectData/measurementOptions';\nimport intervalOptions from '../selectData/intervalOptions';\n\nconst FictionalChildForm = (props) => {\n  const [measurementMethod, setMeasurementMethod] = useState('height');\n  const [sex, setSex] = useState('male');\n  const [weeks, setWeeks] = useState(40);\n  const [days, setDays] = useState(0);\n  const [startingAge, setStartingAge] = useState(1.0);\n  const [endingAge, setEndingAge] = useState(20.0);\n  const [intervalType, setIntervalType] = useState('days');\n  const [interval, setInterval] = useState(30);\n  const [driftFlag, setDriftFlag] = useState(false);\n  const [drift, setDrift] = useState(0.01);\n  const [noiseFlag, setNoiseFlag] = useState(false);\n  const [noise, setNoise] = useState(0.1);\n  const [startSDS, setStartSDS] = useState(0);\n  const [reference, setReference] = useState('uk-who');\n  // const [formValid, setFormValid] = useState(false)\n\n  const handleSubmit = ({ target }) => {\n    const formData = Object.fromEntries(new FormData(target));\n    const values = {\n      measurement_method: measurementMethod,\n      sex: sex,\n      start_chronological_age: formData.start_age,\n      end_age: formData.end_age,\n      gestation_weeks: weeks,\n      gestation_days: days,\n      measurement_interval_type: intervalType,\n      measurement_interval_number: formData.interval_value,\n      start_sds: 0.2,\n      noise: noiseFlag,\n      drift_range: drift,\n      drift: driftFlag,\n      noise_range: noise,\n      reference: reference,\n    };\n    props.fictionalFormDataSubmit(values);\n  };\n\n  const handleChangeReference = (val) => {\n    setReference(val.value);\n    if (val.value === 'turner') {\n      measurementOptions[1].disabled = true;\n      measurementOptions[2].disabled = true;\n      measurementOptions[3].disabled = true;\n      sexOptions[0].disabled = true;\n      setMeasurementMethod('height');\n      setSex('female');\n    } else {\n      measurementOptions[1].disabled = false;\n      measurementOptions[2].disabled = false;\n      measurementOptions[3].disabled = false;\n      sexOptions[0].disabled = false;\n    }\n  };\n\n  const handleChangeMeasurementMethod = (val) => {\n    setMeasurementMethod(val);\n  };\n\n  const handleSexChange = (val) => {\n    setSex(val.value);\n  };\n\n  const handleGestationChange = ({ name, value }) => {\n    if (name === 'gestation_weeks') {\n      setWeeks(value);\n      if (value === 42) {\n        setDays(0);\n      }\n    } else if (name === 'gestation_days') {\n      if (weeks === 42) {\n        setDays(0);\n      } else {\n        setDays(value);\n      }\n    }\n  };\n\n  const handleObservationChange = ({ name, val }) => {\n    if (name === 'start_age') {\n      setStartingAge(val);\n    }\n    if (name === 'end_age') {\n      setEndingAge(val);\n    }\n    if (name === 'interval_value') {\n      setInterval(val);\n    }\n    if (name === 'startSDS') {\n      setStartSDS(val);\n    }\n  };\n\n  const handleChangeIntervalType = ({ value }) => {\n    setIntervalType(value);\n  };\n\n  const handleSDSDriftChange = (e, { checked }) => {\n    setDriftFlag(checked);\n  };\n\n  const handleDriftChange = (val) => {\n    setDrift(val);\n  };\n\n  const handleNoiseChange = (val) => {\n    setNoise(val);\n  };\n\n  const handleNoiseFlag = (e, { checked }) => {\n    setNoiseFlag(checked);\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Form.Field>\n        <ReferenceSelect\n          handleChangeReference={handleChangeReference}\n          reference={reference}\n          referenceOptions={referenceOptions}\n        />\n      </Form.Field>\n      <Form.Field>\n        <MeasurementMethodSelect\n          handleChangeMeasurementMethod={handleChangeMeasurementMethod}\n          measurementMethod={measurementMethod}\n          measurementOptions={measurementOptions}\n        />\n      </Form.Field>\n      <Form.Field>\n        <SexSelect\n          handleSexChange={handleSexChange}\n          sex={sex}\n          sexOptions={sexOptions}\n        />\n      </Form.Field>\n      <Form.Field>\n        <GestationSelect\n          handleGestationChange={handleGestationChange}\n          weeks={weeks}\n          days={days}\n        />\n      </Form.Field>\n      <Header as=\"h5\" textAlign={'left'}>\n        Ages\n      </Header>\n      <Form.Field>\n        <Input\n          type=\"decimal\"\n          name=\"start_age\"\n          placeholder=\"Starting Decimal Age\"\n          value={startingAge}\n          label={{\n            content: 'ys',\n            basic: true,\n            color: 'blue',\n          }}\n          labelPosition=\"right\"\n          onChange={handleObservationChange}\n        ></Input>\n      </Form.Field>\n      <Form.Field>\n        <Input\n          type=\"decimal\"\n          name=\"end_age\"\n          placeholder=\"Ending Decimal Age\"\n          value={endingAge}\n          label={{\n            content: 'ys',\n            basic: true,\n            color: 'blue',\n          }}\n          labelPosition=\"right\"\n          onChange={handleObservationChange}\n        ></Input>\n      </Form.Field>\n      <Header as=\"h5\" textAlign={'left'}>\n        Intervals\n      </Header>\n      <Form.Field>\n        <IntervalTypeSelect\n          handleChangeIntervalType={handleChangeIntervalType}\n          intervalType={intervalType}\n          intervalTypeOptions={intervalOptions}\n        />\n      </Form.Field>\n      <Form.Field>\n        <Input\n          type=\"decimal\"\n          name=\"interval_value\"\n          placeholder=\"Interval amount\"\n          value={interval}\n          labelPosition=\"right\"\n          onChange={handleObservationChange}\n        ></Input>\n      </Form.Field>\n      <Header as=\"h5\" textAlign={'left'}>\n        SDS\n      </Header>\n      <Form.Field>\n        <Form.Input\n          label=\"Starting SDS\"\n          type=\"decimal\"\n          name=\"startSDS\"\n          placeholder=\"SDS\"\n          value={startSDS}\n          labelPosition=\"left\"\n          onChange={handleObservationChange}\n        ></Form.Input>\n      </Form.Field>\n\n      <Form.Field width={14} style={{ textAlign: 'left' }}>\n        <Checkbox\n          toggle\n          label=\"Add SDS drift?\"\n          onChange={handleSDSDriftChange}\n        />\n      </Form.Field>\n      {driftFlag && (\n        <Form.Field width={14}>\n          <Slider\n            min={-2}\n            max={2}\n            value={drift}\n            step={0.01}\n            onChange={handleDriftChange}\n            label=\"Drift\"\n          />\n        </Form.Field>\n      )}\n      {/* </Form.Group> */}\n\n      <Form.Field width={14} style={{ textAlign: 'left' }}>\n        <Checkbox\n          toggle\n          label=\"Simulate Measurement Error?\"\n          onChange={handleNoiseFlag}\n        />\n      </Form.Field>\n      {noiseFlag && (\n        <Form.Field width={14}>\n          <Slider\n            min={0}\n            max={0.05}\n            value={noise}\n            step={0.01}\n            onChange={handleNoiseChange}\n            label=\"SDS Error\"\n          />\n        </Form.Field>\n      )}\n      <Form.Field>\n        <Button\n          content=\"Generate Growth Data\"\n          type=\"submit\"\n          fluid\n          // disabled={!formValid}\n          color=\"pink\"\n          icon=\"line graph\"\n          labelPosition=\"right\"\n        />\n      </Form.Field>\n    </Form>\n  );\n};\n\nexport default FictionalChildForm;\n","import { useEffect, useState, useCallback } from 'react';\nimport axios from 'axios';\n\nimport deepCopy from '../functions/deepCopy';\n\nconst fetchFromApi = async (inputParameters, reference, mode) => {\n  const url = `${process.env.REACT_APP_GROWTH_API_BASEURL}/${reference}/${mode}/`;\n  const response = await axios({\n    url: url,\n    data: inputParameters,\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  return response.data;\n};\n\nconst makeInitialState = () => {\n  const measurements = {\n    turner: {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'trisomy-21': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'uk-who': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n  };\n  return {\n    calculation: {\n      input: measurements,\n      output: measurements,\n    },\n    fictional_child_data: {\n      input: measurements,\n      output: measurements,\n    },\n    errors: { errors: false, message: '' },\n    isLoading: false,\n  };\n};\n\nconst useRcpchApi = (measurementMethod, reference, mode = 'calculation') => {\n  const [apiState, setApiState] = useState(makeInitialState);\n\n  const fetchResult = useCallback(\n    (newInput) => {\n      setApiState((old) => {\n        const mutable = deepCopy(old);\n        mutable[mode].input[reference][measurementMethod].push(newInput);\n        mutable.isLoading = true;\n        return mutable;\n      });\n    },\n    [measurementMethod, mode, reference]\n  );\n\n  /* \n  Remove last item from arrays. Defaults to removing last item from measurements array only. \n  If 'both' parameter is set to true, removes last item from measurements array and \n  results array.\n  */\n  const removeLastFromArrays = useCallback(\n    (oldState, both = false) => {\n      const newInput = deepCopy(\n        oldState[mode].input[reference][measurementMethod]\n      );\n      newInput.pop();\n      let newOutput = null;\n      if (both) {\n        newOutput = oldState[mode].output[reference][measurementMethod];\n        newOutput.pop();\n      }\n      return { newInput, newOutput };\n    },\n    [measurementMethod, mode, reference]\n  );\n\n  // as above but updates state as well (used as a callback)\n  const removeLastActiveItem = useCallback(\n    (both) => {\n      setApiState((old) => {\n        const mutable = deepCopy(old);\n        const { newInput, newOutput } = removeLastFromArrays(old, both);\n        mutable[mode].input[reference][measurementMethod] = newInput;\n        if (newOutput) {\n          mutable[mode].output[reference][measurementMethod] = newOutput;\n        }\n        return mutable;\n      });\n    },\n    [setApiState, removeLastFromArrays, mode, reference, measurementMethod]\n  );\n\n  const clearBothActiveArrays = useCallback(() => {\n    setApiState((old) => {\n      const mutable = deepCopy(old);\n      mutable[mode].input[reference][measurementMethod] = [];\n      mutable[mode].output[reference][measurementMethod] = [];\n      return mutable;\n    });\n  }, [measurementMethod, mode, reference]);\n\n  const clearApiErrors = useCallback(() => {\n    setApiState((old) => {\n      const mutable = deepCopy(old);\n      mutable.errors = { errors: false, message: '' };\n      return mutable;\n    });\n  }, []);\n\n  useEffect(() => {\n    let ignore = false;\n    if (apiState.isLoading) {\n      const relevantArray = apiState[mode].input[reference][measurementMethod];\n      const latestInput = deepCopy(relevantArray[relevantArray.length - 1]);\n      fetchFromApi(latestInput, reference, mode)\n        .then((result) => {\n          if (!ignore) {\n            const measurementError =\n              result.measurement_calculated_values\n                .corrected_measurement_error ||\n              result.measurement_calculated_values\n                .chronological_measurement_error;\n            if (!measurementError) {\n              setApiState((old) => {\n                const mutable = deepCopy(old);\n                if (mode === 'fictional_child_data') {\n                  console.log(JSON.stringify(result));\n                  // mutable[mode].output[reference][measurementMethod] = result;\n                } else {\n                  mutable[mode].output[reference][measurementMethod].push(\n                    result\n                  );\n                }\n                mutable.isLoading = false;\n                mutable.errors = { errors: false, message: 'success' };\n                return mutable;\n              });\n            } else {\n              setApiState((old) => {\n                const mutable = deepCopy(old);\n                const { newInput } = removeLastFromArrays(old);\n                mutable[mode].input[reference][measurementMethod] = newInput;\n                mutable.isLoading = false;\n                mutable.errors = {\n                  errors: true,\n                  message: `The server could not process the measurements. Details: ${measurementError}`,\n                };\n                return mutable;\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          setApiState((old) => {\n            const mutable = deepCopy(old);\n            const { newInput } = removeLastFromArrays(old);\n            mutable[mode].input[reference][measurementMethod] = newInput;\n            const errorForUser = `There has been a problem fetching the result from the server. Error details: ${error.message}`;\n            mutable.errors = { errors: true, message: errorForUser };\n            mutable.isLoading = false;\n            return mutable;\n          });\n        });\n    }\n    return () => {\n      ignore = true;\n    };\n  }, [apiState, measurementMethod, mode, reference, removeLastFromArrays]);\n\n  return {\n    fetchResult,\n    removeLastActiveItem,\n    clearBothActiveArrays,\n    clearApiErrors,\n    measurements: apiState[mode].input,\n    results: apiState[mode].output,\n    apiErrors: apiState.errors,\n    isLoading: apiState.isLoading,\n  };\n};\n\nexport default useRcpchApi;\n","// React\nimport React, { useState, useEffect } from 'react';\n\n//themes\nimport RCPCHTheme1 from '../components/chartThemes/rcpchTheme1';\nimport RCPCHTheme2 from '../components/chartThemes/rcpchTheme2';\nimport RCPCHTheme3 from '../components/chartThemes/rcpchTheme3';\nimport RCPCHThemeMonochrome from '../components/chartThemes/rcpchThemeMonochrome';\nimport RCPCHThemeTraditionalBoy from '../components/chartThemes/RCPCHThemeTraditionalBoy';\nimport RCPCHThemeTraditionalGirl from '../components/chartThemes/RCPCHThemeTraditionalGirl';\n\n// Semantic UI React\nimport { Grid, Segment, Tab, Dropdown, Button } from 'semantic-ui-react';\n\nimport ChartData from '../api/Chart';\nimport MeasurementForm from '../components/MeasurementForm';\nimport deepCopy from '../functions/deepCopy';\nimport { ResultsSegment, ErrorModal } from './SubComponents';\nimport '../index.css';\nimport FictionalChildForm from './FictionalChildForm';\nimport useRcpchApi from '../hooks/useRcpchApi';\n\nfunction MeasurementSegment() {\n  const defaultTheme = RCPCHThemeMonochrome;\n\n  const [chartStyle, setChartSyle] = useState(defaultTheme.chart);\n  const [axisStyle, setAxisStyle] = useState(defaultTheme.axes);\n  const [centileStyle, setCentileStyle] = useState(defaultTheme.centiles);\n  const [measurementStyle, setMeasurementStyle] = useState(\n    defaultTheme.measurements\n  );\n\n  const [theme, setTheme] = useState({\n    value: 'tanner4',\n    text: 'Monochrome',\n  });\n\n  const [flip, setFlip] = useState(false); // flag to determine if results or chart showing\n  const [disabled, setDisabled] = useState({\n    height: false,\n    weight: false,\n    bmi: false,\n    ofc: false,\n  });\n\n  const [measurementMethod, setMeasurementMethod] = useState('height');\n  const [reference, setReference] = useState('uk-who');\n  const [sex, setSex] = useState('male');\n\n  const [mode, setMode] = useState('calculation');\n\n  const [errorModal, setErrorModal] = useState(InitalErrorModalState());\n  const [commands, setCommands] = useState({\n    clearMeasurement: false,\n    resetCurrent: false,\n    undoLast: false,\n    changeSex: false,\n  });\n\n  const {\n    fetchResult,\n    removeLastActiveItem,\n    clearBothActiveArrays,\n    clearApiErrors,\n    measurements,\n    results,\n    apiErrors,\n    isLoading,\n  } = useRcpchApi(measurementMethod, reference, mode);\n\n  useEffect(() => {\n    if (apiErrors.errors) {\n      setErrorModal({\n        visible: true,\n        title: 'Unable to plot',\n        body: apiErrors.message,\n        handleClose: () => {\n          clearApiErrors();\n          setErrorModal(InitalErrorModalState());\n        },\n      });\n    } else if (apiErrors.message === 'success') {\n      setCommands((old) => {\n        const mutable = deepCopy(old);\n        mutable.clearMeasurement = true;\n        return mutable;\n      });\n      clearApiErrors();\n    }\n  }, [apiErrors, clearApiErrors]);\n\n  let activeIndex;\n\n  switch (measurementMethod) {\n    case 'weight':\n      activeIndex = 1;\n      break;\n    case 'bmi':\n      activeIndex = 2;\n      break;\n    case 'ofc':\n      activeIndex = 3;\n      break;\n    default:\n      //height\n      activeIndex = 0;\n  }\n\n  if (commands.resetCurrent) {\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to reset?',\n      body: 'This will remove all measurements from the current chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        clearBothActiveArrays();\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, resetCurrent: false };\n    });\n  }\n\n  if (commands.undoLast) {\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to remove the last measurement?',\n      body: 'This will remove the last measurement entered on the chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        removeLastActiveItem(true);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, undoLast: false };\n    });\n  }\n\n  const customSetMeasurementMethod = (newMeasurementMethod) => {\n    if (measurements[reference][newMeasurementMethod].length > 0) {\n      const existingSex = measurements[reference][newMeasurementMethod][0].sex;\n      if (existingSex !== sex) {\n        changeSex(existingSex, true);\n        setCommands((old) => {\n          return { ...old, changeSex: true };\n        });\n      }\n    }\n    setMeasurementMethod(newMeasurementMethod);\n  };\n\n  const handleTabChange = (e, { activeIndex }) => {\n    if (reference === 'turner' && activeIndex !== 0) {\n      setErrorModal({\n        visible: true,\n        title: 'Measurement unavailable',\n        body: \"Only height data is available for Turner's Syndrome.\",\n        handleClose: () => setErrorModal(InitalErrorModalState()),\n      });\n      return null;\n    }\n    let newMeasurementMethod = '';\n    switch (activeIndex) {\n      case 0:\n        newMeasurementMethod = 'height';\n        break;\n      case 1:\n        newMeasurementMethod = 'weight';\n        break;\n      case 2:\n        newMeasurementMethod = 'bmi';\n        break;\n      case 3:\n        newMeasurementMethod = 'ofc';\n        break;\n      default:\n        console.warn('Handle tab change did not pick up valid active index');\n    }\n    customSetMeasurementMethod(newMeasurementMethod);\n  };\n\n  const handleModeChange = (e, { activeIndex }) => {\n    setMode(activeIndex === 0 ? 'calculation' : 'fictional_child_data');\n  };\n\n  const changeReference = (newReference) => {\n    // call back from MeasurementForm\n    setReference(newReference);\n    if (newReference === 'turner') {\n      setMeasurementMethod('height');\n      setSex('female');\n      setDisabled({\n        height: false,\n        weight: true,\n        bmi: true,\n        ofc: true,\n      });\n      return { newSex: 'female' };\n    } else {\n      setDisabled({\n        height: false,\n        weight: false,\n        bmi: false,\n        ofc: false,\n      });\n      if (\n        results[newReference][measurementMethod].length > 0 &&\n        results[newReference][measurementMethod][0]?.birth_data.sex !== sex\n      ) {\n        setSex(results[newReference][measurementMethod][0].birth_data.sex);\n        return {\n          newSex: results[newReference][measurementMethod][0].birth_data.sex,\n        };\n      } else {\n        return { newSex: sex };\n      }\n    }\n  };\n\n  const changeSex = (newSex, ignoreError = false) => {\n    // call back for MeasurementForm\n    const existingResults = [...measurements[reference][measurementMethod]];\n    if (existingResults.length > 0 && !ignoreError) {\n      for (const oldResult of existingResults) {\n        if (newSex !== oldResult.sex) {\n          setErrorModal({\n            visible: true,\n            title: 'Unable to change sex',\n            body: `Each chart can only display measurements from one patient at a time. Please reset the chart before entering measurements from a new patient.`,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n          return false;\n        }\n      }\n    }\n    if (theme.value === 'trad') {\n      const selectedTheme =\n        newSex === 'male'\n          ? RCPCHThemeTraditionalBoy\n          : RCPCHThemeTraditionalGirl;\n      setCentileStyle(selectedTheme.centiles);\n      setChartSyle(selectedTheme.chart);\n      setMeasurementStyle(selectedTheme.measurements);\n      setAxisStyle(selectedTheme.axes);\n    }\n    setSex(newSex);\n    return true;\n  };\n\n  const handleResults = (newResultInArray) => {\n    // delegate function from MeasurementForm\n    // receives form data and stores in the correct measurement array\n    // checks for duplicates, mismatching dobs, sexes and gestations\n    const existingResults = deepCopy(\n      measurements[reference][measurementMethod]\n    );\n    let errorString = '';\n    const latestResult = newResultInArray[0];\n    if (existingResults.length > 0) {\n      const newGestation =\n        latestResult.gestation_weeks * 7 + latestResult.gestation_days;\n      const errors = [];\n      for (const oldResult of existingResults) {\n        if (JSON.stringify(oldResult) === JSON.stringify(latestResult)) {\n          errorString = 'duplicate';\n          break;\n        }\n        const oldGestation =\n          oldResult.gestation_weeks * 7 + oldResult.gestation_days;\n        if (oldResult.sex !== latestResult.sex) {\n          errors.push('differing sexes');\n        }\n        if (oldResult.birth_date !== latestResult.birth_date) {\n          errors.push('differing date of births');\n        }\n        if (oldGestation !== newGestation) {\n          errors.push('differing gestations');\n        }\n        if (errors.length > 0) {\n          errorString = errors[0];\n          if (errors.length === 2) {\n            errorString = errors.join(' and ');\n          } else if (errors.length === 3) {\n            errorString = `${errors[0]}, ${errors[1]} and ${errors[2]}`;\n          }\n          break;\n        }\n      }\n    }\n    if (errorString) {\n      if (errorString === 'duplicate') {\n        setErrorModal({\n          visible: true,\n          title: 'Duplicate entries',\n          body: `Please check the last measurement entry as it appears to be identical to a measurement already entered.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      } else {\n        setErrorModal({\n          visible: true,\n          title: 'Please check entries',\n          body: `Each chart can only display measurements from one patient at a time: ${errorString} were detected.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      }\n      return false;\n    } else {\n      fetchResult(latestResult);\n      return true;\n    }\n  };\n\n  const fictionalFormDataSubmit = (formData) => {\n    fetchResult(formData);\n  };\n\n  const handleChangeTheme = (event, { value }) => {\n    let selectedTheme;\n    let text;\n\n    if (value === 'trad') {\n      if (sex === 'male') {\n        selectedTheme = RCPCHThemeTraditionalBoy;\n      } else {\n        selectedTheme = RCPCHThemeTraditionalGirl;\n      }\n      text = 'Traditional';\n    }\n    if (value === 'tanner1') {\n      selectedTheme = RCPCHTheme1;\n      text = 'Tanner 1';\n    }\n    if (value === 'tanner2') {\n      selectedTheme = RCPCHTheme2;\n      text = 'Tanner 2';\n    }\n    if (value === 'tanner3') {\n      selectedTheme = RCPCHTheme3;\n      text = 'Tanner 3';\n    }\n    if (value === 'monochrome') {\n      selectedTheme = RCPCHThemeMonochrome;\n      text = 'Monochrome';\n    }\n\n    setCentileStyle(selectedTheme.centiles);\n    setChartSyle(selectedTheme.chart);\n    setMeasurementStyle(selectedTheme.measurements);\n    setAxisStyle(selectedTheme.axes);\n    setTheme({ value: value, text: text });\n  };\n\n  const handleFlipResults = () => {\n    setFlip(!flip);\n  };\n\n  const panes = panesBlueprint.map((details) => {\n    return {\n      menuItem: details.menuItem,\n      render: () => (\n        <Tab.Pane attached=\"top\" disabled={disabled[details.measurementName]}>\n          <ChartData\n            key={details.measurementName}\n            reference={reference}\n            sex={sex}\n            measurementMethod={details.measurementName}\n            measurementsArray={results[reference][details.measurementName]}\n            chartStyle={chartStyle}\n            axisStyle={axisStyle}\n            gridlineStyle={defaultTheme.gridlines}\n            centileStyle={centileStyle}\n            measurementStyle={measurementStyle}\n            isLoading={isLoading}\n          />\n          {/* <Acknowledgements /> */}\n        </Tab.Pane>\n      ),\n    };\n  });\n\n  const TabPanes = () => (\n    <Tab\n      menu={{ attached: 'top' }}\n      panes={panes}\n      activeIndex={activeIndex}\n      onTabChange={handleTabChange}\n    />\n  );\n\n  const FormPanes = [\n    {\n      menuItem: ' Measurements',\n      render: () => (\n        <Tab.Pane attached={false}>\n          <MeasurementForm\n            measurementResult={handleResults}\n            handleChangeReference={changeReference}\n            handleChangeSex={changeSex}\n            measurementMethod={measurementMethod}\n            setMeasurementMethod={customSetMeasurementMethod}\n            commands={commands}\n            setCommands={setCommands}\n            className=\"measurement-form\"\n          />\n        </Tab.Pane>\n      ),\n    },\n    {\n      menuItem: 'Demo Children',\n      render: () => (\n        <Tab.Pane>\n          <FictionalChildForm\n            fictionalFormDataSubmit={fictionalFormDataSubmit}\n          />\n        </Tab.Pane>\n      ),\n    },\n  ];\n\n  const ThemeSelection = () => (\n    // <Menu compact className=\"selectUpperMargin\">\n    <span>\n      Theme{' '}\n      <Dropdown\n        options={themeOptions}\n        floating\n        inline\n        onChange={handleChangeTheme}\n        text={theme.text}\n      />\n    </span>\n    // </Menu>\n  );\n\n  return (\n    <React.Fragment>\n      {/* <Container> */}\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column width={6}>\n            <Segment textAlign={'center'}>\n              <Tab\n                panes={FormPanes}\n                menu={{ attached: false }}\n                onTabChange={handleModeChange}\n              />\n            </Segment>\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Segment>\n              {flip ? (\n                <ResultsSegment apiResult={results} reference={reference} />\n              ) : (\n                <TabPanes />\n              )}\n              <Grid verticalAlign=\"middle\">\n                <Grid.Row columns={2}>\n                  <Grid.Column textAlign=\"left\">\n                    <ThemeSelection />\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"right\">\n                    <Button\n                      className=\"selectUpperMargin\"\n                      onClick={handleFlipResults}\n                    >\n                      Results\n                    </Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n            </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      {/* </Container> */}\n      <ErrorModal\n        title={errorModal.title}\n        body={errorModal.body}\n        visible={errorModal.visible}\n        handleClose={errorModal.handleClose}\n        handleCancel={errorModal.handleCancel}\n      />\n    </React.Fragment>\n  );\n}\n\nconst panesBlueprint = [\n  { menuItem: 'Height', measurementName: 'height' },\n  { menuItem: 'Weight', measurementName: 'weight' },\n  { menuItem: 'BMI', measurementName: 'bmi' },\n  {\n    menuItem: 'Head Circumference',\n    measurementName: 'ofc',\n  },\n];\n\nconst themeOptions = [\n  { key: 'monochrome', value: 'monochrome', text: 'Monochrome' },\n  { key: 'trad', value: 'trad', text: 'Traditional' },\n  { key: 'tanner1', value: 'tanner1', text: 'Tanner 1' },\n  { key: 'tanner2', value: 'tanner2', text: 'Tanner 2' },\n  { key: 'tanner3', value: 'tanner3', text: 'Tanner 3' },\n];\n\nfunction InitalErrorModalState() {\n  return {\n    visible: false,\n    title: '',\n    body: '',\n    handleClose: null,\n    handleCancel: null,\n  };\n}\n\nexport default MeasurementSegment;\n","import React from \"react\";\n\nimport MeasurementSegment from \"../components/MeasurementSegment\";\n\nfunction Home() {\n  return (\n    <div>\n      <MeasurementSegment />\n    </div>\n  );\n}\n\nexport default Home;\n","// React\nimport React from \"react\";\nimport \"./App.css\";\n\n// RCPCH Components\nimport \"./components/MeasurementForm\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Semantic UI React\nimport \"semantic-ui-less/semantic.less\";\n\n// CSS\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}