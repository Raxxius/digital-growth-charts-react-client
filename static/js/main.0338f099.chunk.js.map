{"version":3,"sources":["components/subcomponents/GestationSelect.js","components/subcomponents/MeasurementMethodSelect.js","components/subcomponents/ReferenceSelect.js","components/subcomponents/SexChoice.js","selectData/measurementOptions.js","selectData/sexOptions.js","selectData/referenceOptions.js","components/MeasurementForm.js","components/chartThemes/themes.js","components/chartThemes/rcpchTheme1.js","components/chartThemes/rcpchTheme2.js","components/chartThemes/rcpchTheme3.js","components/chartThemes/rcpchThemeMonochrome.js","components/chartThemes/RCPCHThemeTraditionalBoy.js","components/chartThemes/RCPCHThemeTraditionalGirl.js","api/Chart.js","functions/deepCopy.js","components/SubComponents.js","components/subcomponents/IntervalSelect.js","components/subcomponents/Slider.js","selectData/intervalOptions.js","components/FictionalChildForm.js","components/MeasurementSegment.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["GestationSelect","props","gestationWeeksOptions","gestWeeks","push","key","toString","value","text","Select","compact","name","weeks","options","onChange","e","val","handleGestationChange","days","MeasurementMethodSelect","placeholder","measurementMethod","handleChangeMeasurementMethod","measurementOptions","ReferenceSelect","reference","handleChangeReference","referenceOptions","SexSelect","sex","handleSexChange","sexOptions","disabled","formatDate","inputDate","date","month","day","year","getTime","Date","getMonth","getDate","getFullYear","length","join","error","Error","parseDate","finalArray","split","map","element","index","madeNumber","Number","isNaN","workingDate","MeasurementForm","callbackReturn","disableMeasurement","newSexOptions","state","setState","observation_value_error","validateObservationValue","measurement","observation_value","handleChangeSex","setMeasurementMethod","newSex","measurement_method","disable","handleObservationChange","observation","data","birth_date","observation_date","units","gestation_weeks","gestation_days","birth_date_error","observation_date_error","form_valid","measurementResult","handleChangeDate","bind","handleSubmit","handleChangeGestation","handleResetCurrentGraph","handleUndoLast","event","this","target","newDate","observation_date_object","birth_date_object","timeInterval","measurementArray","formData","changeUnits","setCommands","old","resetCurrent","undoLast","formIsValid","commands","clearMeasurement","newMeasurement","changeSex","Container","Segment","textAlign","Form","onSubmit","Field","Header","as","required","Input","label","type","Group","width","content","basic","color","labelPosition","Message","Button","fluid","icon","onClick","React","Component","ChartTheme","chart","gridlines","axes","centiles","measurements","_chart","_gridlines","_axes","_centiles","_measurements","ChartObject","backgroundColour","height","padding","titleStyle","subTitleStyle","tooltipBackgroundColour","tooltipStroke","tooltipTextStyle","termFill","termStroke","infoBoxFill","infoBoxStroke","infoBoxTextStyle","toggleButtonInactiveColour","toggleButtonActiveColour","toggleButtonTextColour","_backgroundColour","_width","_height","_padding","_titleStyle","_subTitleStyle","_tooltipBackgroundColour","_tooltipStroke","_tooltipTextStyle","_termFill","_termStroke","_infoBoxFill","_infoBoxStroke","_infoBoxTextStyle","_toggleButtonActiveColour","_toggleButtonInactiveColour","_toggleButtonTextColour","PaddingObject","left","right","top","bottom","_left","_right","_top","_bottom","TextStyleObject","colour","size","weight","_name","_colour","_size","_style","_weight","GridlineObject","stroke","strokeWidth","dashed","_stroke","_strokeWidth","_dashed","AxesObject","axisStroke","axisLabelTextStyle","tickLabelStyle","tickLabelTextStyle","_axisStroke","_axisLabelTextStyle","_tickLabelTexSize","CentilesObject","centileStroke","centileStrokeWidth","delayedPubertyAreaFill","_centileStroke","_centileStrokeWidth","_delayedPubertyAreaFill","MeasurementsObject","measurementFill","measurementStroke","measurementSize","_measurementFill","_measurementStroke","_measurementSize","tooltipBackGroundColour","RCPCHChart","RCPCHGridlines","RCPCHCentiles","RCPCHTheme1","RCPCHTheme2","axisLabelColour","RCPCHTheme3","RCPCHThemeMonochrome","RCPCHThemeTraditionalBoy","RCPCHThemeTraditionalGirl","ChartData","isLoading","titles","title","sexText","measurementText","subtitle","setTitle","Dimmer","active","Loader","measurementsArray","chartStyle","measurementStyle","centileStyle","gridlineStyle","axisStyle","enableZoom","deepCopyArray","arr","copy","forEach","elem","Array","isArray","deepCopyObject","obj","tempObj","Object","entries","deepCopy","input","TableBody","Fragment","Table","Row","Cell","measurement_dates","chronological_calendar_age","corrected_calendar_age","child_observation_value","Math","round","measurement_calculated_values","corrected_sds","chronological_sds","corrected_centile","chronological_centile","ResultsSegment","apiResult","celled","collapsing","HeaderCell","Body","bmi","ofc","ErrorModal","body","handleClose","visible","handleCancel","showCancel","Modal","open","closeOnEscape","Content","Actions","negative","IntervalTypeSelect","intervalType","handleChangeIntervalType","intervalTypeOptions","Slider","style","min","max","step","className","id","display","FictionalChildForm","useState","setSex","setWeeks","setDays","startingAge","setStartingAge","endingAge","setEndingAge","setIntervalType","interval","setInterval","driftFlag","setDriftFlag","drift","setDrift","noiseFlag","setNoiseFlag","noise","setNoise","startSDS","setStartSDS","setReference","fromEntries","FormData","values","start_age","end_age","interval_value","fictionalFormDataSubmit","intervalOptions","Checkbox","toggle","checked","panesBlueprint","menuItem","measurementName","themeOptions","MeasurementSegment","activeIndex","defaultTheme","setChartSyle","setAxisStyle","setCentileStyle","setMeasurementStyle","theme","setTheme","flip","setFlip","setDisabled","turner","setMeasurements","setAPIResult","errorModal","setErrorModal","setIsLoading","removeLast","useCallback","both","newMeasurements","pop","mutable","newApi","customSetMeasurementMethod","newMeasurementMethod","existingSex","handleTabChange","console","warn","changeReference","newReference","birth_data","ignoreError","existingResults","oldResult","selectedTheme","handleResults","results","errorString","latestResult","newGestation","errors","JSON","stringify","oldGestation","newArray","concat","log","handleChangeTheme","panes","details","render","Tab","Pane","attached","Chart","TabPanes","menu","onTabChange","FormPanes","ThemeSelection","Dropdown","floating","inline","useEffect","fetchCentilesForMeasurement","singleMeasurement","a","url","process","axios","method","headers","response","ignore","relevantArray","then","result","corrected_measurement_error","chronological_measurement_error","measurementError","workingArray","catch","errorForUser","message","Grid","padded","Column","verticalAlign","columns","Home","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"yXAkDeA,MA3Cf,SAAyBC,GAGrB,IAFA,IAAIC,EAAwB,GACxBC,EAAY,GACTA,GAAa,IAClBD,EAAsBE,KAAK,CACvBC,IAAKF,EAAUG,SAAS,IACxBC,MAAOJ,EACPK,KAAML,EAAUG,SAAS,MAE7BH,IAaJ,OACE,iCACI,cAACM,EAAA,EAAD,CACEC,SAAO,EACPC,KAAK,kBACLJ,MAAON,EAAMW,MACbC,QAASX,EACTY,SAAU,SAACC,EAAGC,GAAJ,OAAYf,EAAMgB,sBAAsBD,MANxD,QASI,cAACP,EAAA,EAAD,CACEC,SAAO,EACPC,KAAK,iBACLJ,MAAON,EAAMiB,KACbL,QAxBuB,CAC7B,CAAER,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,KAC5B,CAAEH,IAAK,IAAKE,MAAO,EAAGC,KAAM,MAkBtBM,SAAU,SAACC,EAAGC,GAAJ,OAAYf,EAAMgB,sBAAsBD,MAdxD,iBCbWG,MAXf,SAAiClB,GAE7B,OAAO,cAACQ,EAAA,EAAD,CACHE,KAAK,qBACLS,YAAY,cACZb,MAAON,EAAMoB,kBACbP,SAAU,SAACC,EAAGC,GAAJ,OAAYf,EAAMqB,8BAA8BN,EAAIT,QAC9DM,QAASZ,EAAMsB,sBCIRC,MAXf,SAAyBvB,GAErB,OAAO,cAACQ,EAAA,EAAD,CACHE,KAAK,YACLS,YAAY,SACZb,MAAON,EAAMwB,UACbX,SAAU,SAACC,EAAGC,GAAJ,OAAUf,EAAMyB,sBAAsBV,IAChDH,QAASZ,EAAM0B,oBCIRC,MAXf,SAAmB3B,GAEf,OAAO,cAACQ,EAAA,EAAD,CACHE,KAAK,MACLS,YAAY,MACZb,MAAON,EAAM4B,IACbf,SAAUb,EAAM6B,gBAChBjB,QAASZ,EAAM8B,cCDNR,EAZU,CACvB,CAAElB,IAAK,SAAUE,MAAO,SAAUC,KAAM,cAAewB,UAAU,GACjE,CAAE3B,IAAK,SAAUE,MAAO,SAAUC,KAAM,cAAewB,UAAU,GACjE,CAAE3B,IAAK,MAAOE,MAAO,MAAOC,KAAM,iBAAewB,UAAU,GAC3D,CACE3B,IAAK,MACLE,MAAO,MACPC,KAAM,0BACNwB,UAAU,ICHDD,EALI,CACf,CAAE1B,IAAK,OAAQE,MAAO,OAAQC,KAAM,MAAOwB,UAAU,GACrD,CAAE3B,IAAK,SAAUE,MAAO,SAAUC,KAAM,OAAQwB,UAAU,ICI/CL,EANU,CACrB,CAAEtB,IAAK,SAAUE,MAAO,SAAUC,KAAM,UACxC,CAAEH,IAAK,aAAcE,MAAO,aAAcC,KAAM,mBAChD,CAAEH,IAAK,SAAUE,MAAO,SAAUC,KAAM,sBCoBtCyB,EAAa,SAACC,GAClB,IAAIC,EACAC,EACAC,EACAC,EACJ,IAaE,OAZAJ,EAAUK,UAEVH,EAAQ,KADRD,EAAO,IAAIK,KAAKN,IACGO,WAAa,GAChCJ,EAAM,GAAKF,EAAKO,UAChBJ,EAAOH,EAAKQ,cACRP,EAAMQ,OAAS,IACjBR,EAAQ,IAAMA,GAEZC,EAAIO,OAAS,IACfP,EAAM,IAAMA,GAGP,CAACC,EAAMF,EAAOC,GAAKQ,KAAK,KAC/B,MAAOC,GACP,MAAM,IAAIC,MAAM,8CAIdC,EAAY,SAACd,GACjB,IACE,IACMe,EADYf,EAAUgB,MAAM,KACLC,KAAI,SAACC,EAASC,GACzC,GAAgB,KAAZD,EAAgB,CAClB,IAAME,EAAaC,OAAOH,GAC1B,GAAIG,OAAOC,MAAMF,GACf,MAAM,IAAIP,MAEV,OAAiB,IAAVM,EAAcC,EAAa,EAAIA,EAGxC,MAAM,IAAIP,SAGd,GACwB,IAAtBE,EAAWL,QACXK,EAAW,GAAK,GAChBA,EAAW,GAAK,IAChBA,EAAW,GAAK,GAChBA,EAAW,GAAK,GAEhB,MAAM,IAAIF,MAEZ,IAAMU,EAAW,YAAOjB,KAAP,YAAeS,IAChC,MAAqC,kBAA1BQ,EAAYlB,UACdkB,EAEA,KAET,MAAOX,GACP,OAAO,OAsgBIY,E,kDAjgBb,WAAYzD,GAAQ,IAAD,8BACjB,cAAMA,IAkCRyB,sBAAwB,YAAc,IAAZnB,EAAW,EAAXA,MAGlBoD,EAAiB,EAAK1D,MAAMyB,sBAAsBnB,GACxD,GAAc,WAAVA,EAAoB,CACtB,EAAKqD,mBAAmB,UAAU,GAClC,EAAKA,mBAAmB,OAAO,GAC/B,EAAKA,mBAAmB,OAAO,GAC/B,IAAMC,EAAgB,CAAC,eAChB,EAAKC,MAAM/B,WAAW,IADP,eAEf,EAAK+B,MAAM/B,WAAW,KAE7B8B,EAAc,GAAG7B,UAAW,EAC5B,EAAK+B,SAAS,CACZlC,IAAK,SACLmC,wBAAyB,EAAKC,yBAC5B,SACA,EAAKH,MAAMI,YAAYC,mBAEzB1C,UAAWlB,EACXwB,WAAY8B,IAEd,EAAK5D,MAAMmE,gBAAgB,UAAU,GACrC,EAAKnE,MAAMoE,qBAAqB,cAC3B,CACL,EAAKT,mBAAmB,UAAU,GAClC,EAAKA,mBAAmB,OAAO,GAC/B,EAAKA,mBAAmB,OAAO,GAC/B,IAAMC,EAAgB,CAAC,eAChB,EAAKC,MAAM/B,WAAW,IADP,eAEf,EAAK+B,MAAM/B,WAAW,KAE7B8B,EAAc,GAAG7B,UAAW,EAC5B,EAAK+B,SAAS,CACZC,wBAAyB,EAAKC,yBAC5B,EAAKhE,MAAMoB,kBACX,EAAKyC,MAAMI,YAAYC,mBAEzBtC,IAAK8B,EAAeW,OACpB7C,UAAWlB,EACXwB,WAAY8B,MA3EC,EAgFnBD,mBAAqB,SAACW,EAAoBC,GACxC,GAA2B,WAAvBD,EAAiC,CACnC,IAAI1D,EAAU,EAAKiD,MAAMvC,mBACzBV,EAAQ,GAAGmB,SAAWwC,EACtB,EAAKT,SAAS,CAAExC,mBAAoBV,IAEtC,GAA2B,WAAvB0D,EAAiC,CACnC,IAAI1D,EAAU,EAAKiD,MAAMvC,mBACzBV,EAAQ,GAAGmB,SAAWwC,EACtB,EAAKT,SAAS,CAAExC,mBAAoBV,IAEtC,GAA2B,QAAvB0D,EAA8B,CAChC,IAAI1D,EAAU,EAAKiD,MAAMvC,mBACzBV,EAAQ,GAAGmB,SAAWwC,EACtB,EAAKT,SAAS,CAAExC,mBAAoBV,IAEtC,GAA2B,QAAvB0D,EAA8B,CAChC,IAAI1D,EAAU,EAAKiD,MAAMvC,mBACzBV,EAAQ,GAAGmB,SAAWwC,EACtB,EAAKT,SAAS,CAAExC,mBAAoBV,MAnGrB,EAgJnB4D,wBAA0B,SAACC,EAAaC,GAGtC,IAAMR,EAAoBQ,EAAKpE,MAHgB,EAIA,EAAKuD,MAA9CI,EAJyC,EAIzCA,YAAaF,EAJ4B,EAI5BA,wBACnBE,EAAYC,kBAAoBA,EAChCH,EAA0B,EAAKC,yBAC7B,EAAKhE,MAAMoB,kBACX8C,GAEF,EAAKJ,SAAS,CACZG,YAAaA,EACbF,wBAAyBA,KA1J3B,EAAKF,MAAQ,CACXc,WAAY3C,EAAW,IAAIO,MAC3BqC,iBAAkB5C,EAAW,IAAIO,MACjC0B,YAAa,CACXC,kBAAmB,GACnBW,MAAO,MAETjD,IAAK,OACLkD,gBAAiB,GACjBC,eAAgB,EAChBC,iBAAkB,GAClBC,uBAAwB,GACxBlB,wBAAyB,QACzBmB,YAAY,EACZC,kBAAmB,GACnB3D,UAAW,SACXM,WAAYA,EACZR,mBAAoBA,EACpBI,iBAAkBA,GAGpB,EAAK0D,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBACxB,EAAKhE,8BACH,EAAKA,8BAA8BgE,KAAnC,gBACF,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,sBAAwB,EAAKA,sBAAsBF,KAA3B,gBAC7B,EAAKlB,gBAAkB,EAAKA,gBAAgBkB,KAArB,gBACvB,EAAKb,wBAA0B,EAAKA,wBAAwBa,KAA7B,gBAC/B,EAAK5D,sBAAwB,EAAKA,sBAAsB4D,KAA3B,gBAC7B,EAAKG,wBAA0B,EAAKA,wBAAwBH,KAA7B,gBAC/B,EAAKI,eAAiB,EAAKA,eAAeJ,KAApB,gBAhCL,E,oDAuGnB,SAAiBK,GACfC,KAAK7B,SAAL,eAAiB4B,EAAME,OAAOlF,KAAOgF,EAAME,OAAOtF,QAClD,IAAMuF,EAAU9C,EAAU2C,EAAME,OAAOtF,OACvC,GAAIuF,EAAS,CACX,IAAMC,EACkB,eAAtBJ,EAAME,OAAOlF,KACTqC,EAAU4C,KAAK9B,MAAMe,kBACrBiB,EACAE,EACkB,eAAtBL,EAAME,OAAOlF,KACTmF,EACA9C,EAAU4C,KAAK9B,MAAMc,YACrBqB,EACJF,EAAwBxD,UAAYyD,EAAkBzD,UACpD0D,EAAe,EACS,eAAtBN,EAAME,OAAOlF,KACfiF,KAAK7B,SAAS,CACZkB,iBACE,4DAE2B,qBAAtBU,EAAME,OAAOlF,MACtBiF,KAAK7B,SAAS,CACZmB,uBACE,8DAGGe,EAAe,WACxBL,KAAK7B,SAAL,yBACM4B,EAAME,OAAOlF,KADnB,UAEI,iDAGJiF,KAAK7B,SAAS,CAAEkB,iBAAkB,GAAIC,uBAAwB,UAGhEU,KAAK7B,SAAL,yBACM4B,EAAME,OAAOlF,KADnB,UACkC,iC,sCAqBtC,SAAyB4D,EAAoBJ,GAC3C,MAA0B,KAAtBA,EACK,QAELZ,OAAOC,MAAMD,OAAOY,IACf,+BAEkB,WAAvBI,EACEJ,EAAoB,GACf,OAASI,EAAqB,2BAC5BJ,EA1OK,IA2OP,OAASI,EAAqB,4BAE9B,GAGgB,WAAvBA,EACEJ,EAAoB,IACf,OAASI,EAAqB,2BAC5BJ,EAlPU,IAmPZ,OAASI,EAAqB,6BAE9B,GAGgB,QAAvBA,EACEJ,EAAoB,EACf,OAASI,EAAqB,2BAC5BJ,EA1PgB,IA2PlB,OAASI,EAAqB,4BAE9B,GAGgB,QAAvBA,EACEJ,EAAoB,GACf,OAASI,EAAqB,2BAC5BJ,EAAoB,GACtB,OAASI,EAAqB,4BAE9B,QANX,I,yBAWF,WACE,OAC2B,WAAzBqB,KAAK9B,MAAMrC,WACsB,WAAjCmE,KAAK3F,MAAMoB,qBAKqB,KAAhCuE,KAAK9B,MAAMmB,kBAC2B,KAAtCW,KAAK9B,MAAMoB,wBAC4B,KAAvCU,KAAK9B,MAAME,8BAHb,K,0BASF,SAAa2B,GAEX,IAAMO,EAAmB,GACnBC,EAAW,CACfvB,WAAYgB,KAAK9B,MAAMc,WACvBC,iBAAkBe,KAAK9B,MAAMe,iBAC7BN,mBAAoBqB,KAAK3F,MAAMoB,kBAC/B8C,kBAAmByB,KAAK9B,MAAMI,YAAYC,kBAC1CY,gBAAiBa,KAAK9B,MAAMiB,gBAC5BC,eAAgBY,KAAK9B,MAAMkB,eAC3BnD,IAAK+D,KAAK9B,MAAMjC,KAElBqE,EAAiB9F,KAAK+F,GACtBP,KAAK3F,MAAMmF,kBAAkBc,K,2CAG/B,SAA8BP,EAAOhB,GACnC,IAAIT,EAAW,eAAQ0B,KAAK9B,MAAMI,aAC9BS,EAAKpE,QAAUqF,KAAK3F,MAAMoB,oBAC5B6C,EAAYY,MAAQc,KAAKQ,YAAYzB,EAAKpE,OAC1CqF,KAAK3F,MAAMoE,qBAAqBM,EAAKpE,OACrCqF,KAAK7B,SAAS,CACZG,YAAaA,EACbF,wBAAyB4B,KAAK3B,yBAC5BU,EAAKpE,MACL2D,EAAYC,qBAIW,WAAzByB,KAAK9B,MAAMrC,WACsB,WAAjCmE,KAAK3F,MAAMoB,mBAEXuE,KAAKhC,mBAAmB,UAAU,GAClCgC,KAAKhC,mBAAmB,OAAO,GAC/BgC,KAAKhC,mBAAmB,OAAO,KAE/BgC,KAAKhC,mBAAmB,UAAU,GAClCgC,KAAKhC,mBAAmB,OAAO,GAC/BgC,KAAKhC,mBAAmB,OAAO,O,mCAKrC,SAAsB+B,EAAOhB,GAAO,IAC1BhE,EAAgBgE,EAAhBhE,KAAMJ,EAAUoE,EAAVpE,MACD,oBAATI,GACFiF,KAAK7B,SAAS,CAAEgB,gBAAiBxE,IACnB,KAAVA,GACFqF,KAAK7B,SAAS,CAAEiB,eAAgB,KAEhB,mBAATrE,IAC0B,KAA/BiF,KAAK9B,MAAMiB,gBACba,KAAK7B,SAAS,CAAEiB,eAAgB,IAEhCY,KAAK7B,SAAS,CAAEiB,eAAgBzE,O,6BAKtC,SAAgBoF,EAAOhB,GACLiB,KAAK3F,MAAMmE,gBAAgBO,EAAKpE,QAE9CqF,KAAK7B,SAAS,CAAElC,IAAK8C,EAAKpE,U,yBAI9B,SAAYgE,GACV,MAA2B,WAAvBA,EACK,KAEkB,WAAvBA,EACK,KAEkB,QAAvBA,EACK,WAEkB,QAAvBA,EACK,UADT,I,qCAKF,WACEqB,KAAK3F,MAAMoG,aAAY,SAACC,GACtB,OAAO,2BAAKA,GAAZ,IAAiBC,cAAc,S,4BAInC,WACEX,KAAK3F,MAAMoG,aAAY,SAACC,GACtB,OAAO,2BAAKA,GAAZ,IAAiBE,UAAU,S,gCAI/B,WAIE,GAHIZ,KAAK9B,MAAMqB,aAAeS,KAAKa,eACjCb,KAAK7B,SAAS,CAAEoB,WAAYS,KAAKa,gBAE/Bb,KAAK3F,MAAMyG,SAASC,iBAAkB,CACxC,IAAMC,EAAc,eAAQhB,KAAK9B,MAAMI,aACvC0C,EAAezC,kBAAoB,GACnCyB,KAAK7B,SAAS,CACZG,YAAa0C,EACb5C,wBAAyB,QACzBmB,YAAY,IAEdS,KAAK3F,MAAMoG,aAAY,SAACC,GACtB,OAAO,2BAAKA,GAAZ,IAAiBK,kBAAkB,OAGnCf,KAAK3F,MAAMyG,SAASG,YACtBjB,KAAK7B,SAAS,CAAElC,IAAwB,SAAnB+D,KAAK9B,MAAMjC,IAAiB,SAAW,SAC5D+D,KAAK3F,MAAMoG,aAAY,SAACC,GACtB,OAAO,2BAAKA,GAAZ,IAAiBO,WAAW,U,oBAKlC,WACE,OACE,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAASC,UAAW,SAApB,UACE,eAACC,EAAA,EAAD,CAAMC,SAAUtB,KAAKL,aAArB,UACE,eAAC0B,EAAA,EAAKE,MAAN,WACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAU,OAA1B,uBAUA,cAAC,EAAD,CACEvF,UAAWmE,KAAK9B,MAAMrC,UACtBC,sBAAuBkE,KAAKlE,sBAC5BC,iBAAkBiE,KAAK9B,MAAMnC,sBAGjC,eAACsF,EAAA,EAAKE,MAAN,CAAYG,UAAQ,EAApB,UACE,cAACF,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAU,OAA1B,mBAGA,cAACO,EAAA,EAAD,CACEC,MAAM,aACNC,KAAK,OACL9G,KAAK,aACLJ,MAAOqF,KAAK9B,MAAMc,WAClBxD,YAAY,gBACZN,SAAU8E,KAAKP,sBAGnB,cAAC4B,EAAA,EAAKE,MAAN,CAAYG,UAAQ,EAApB,SACE,cAACC,EAAA,EAAD,CACEC,MAAM,mBACNC,KAAK,OACL9G,KAAK,mBACLJ,MAAOqF,KAAK9B,MAAMe,iBAClBzD,YAAY,sBACZN,SAAU8E,KAAKP,qBAInB,cAAC+B,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAU,OAA1B,0BAIA,eAACC,EAAA,EAAKS,MAAN,WACE,cAACT,EAAA,EAAKE,MAAN,CAAYG,UAAQ,EAApB,SAQE,cAAC,EAAD,CACEjG,kBAAmBuE,KAAK3F,MAAMoB,kBAC9BC,8BAA+BsE,KAAKtE,8BACpCC,mBAAoBqE,KAAK9B,MAAMvC,uBAGnC,cAAC0F,EAAA,EAAKE,MAAN,CAAYG,UAAQ,EAACK,MAAO,EAA5B,SACE,cAACJ,EAAA,EAAD,CACEE,KAAK,UACL9G,KAAK,oBACLS,YAAY,cACZb,MAAOqF,KAAK9B,MAAMI,YAAYC,kBAC9BqD,MAAO,CACLI,QAAShC,KAAK9B,MAAMI,YAAYY,MAAMxE,WACtCuH,OAAO,EACPC,MAAO,QAETC,cAAc,QACdjH,SAAU8E,KAAKnB,+BAIpBmB,KAAK9B,MAAME,yBAC6B,UAAvC4B,KAAK9B,MAAME,yBACT,cAACgE,EAAA,EAAD,CAASF,MAAM,MAAf,SACGlC,KAAK9B,MAAME,0BAGjB4B,KAAK9B,MAAMoB,uBACV,cAAC8C,EAAA,EAAD,CAASF,MAAM,MAAf,SAAsBlC,KAAK9B,MAAMoB,yBAC/B,KACHU,KAAK9B,MAAMmB,iBACV,cAAC+C,EAAA,EAAD,CAASF,MAAM,MAAf,SAAsBlC,KAAK9B,MAAMmB,mBAC/B,KAEJ,cAACmC,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAU,OAA1B,iBAGA,cAACC,EAAA,EAAKE,MAAN,CAAYG,UAAQ,EAApB,SAQE,cAAC,EAAD,CACEzF,IAAK+D,KAAK9B,MAAMjC,IAChBuC,gBAAiBwB,KAAKxB,gBACtBrC,WAAY6D,KAAK9B,MAAM/B,eAI3B,cAACkF,EAAA,EAAKS,MAAN,UACE,eAACT,EAAA,EAAKE,MAAN,WACE,cAACC,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAU,OAA1B,uBAGA,cAAC,EAAD,CACErG,KAAK,mBACLC,MAAOgF,KAAK9B,MAAMiB,gBAClB7D,KAAM0E,KAAK9B,MAAMkB,eACjBQ,sBAAuBI,KAAKJ,6BAwBlC,cAACyB,EAAA,EAAKE,MAAN,UACE,cAACc,EAAA,EAAD,CACEL,QAAQ,sCACRH,KAAK,SACLS,OAAK,EACLlG,UAAW4D,KAAK9B,MAAMqB,WACtB2C,MAAM,OACNK,KAAK,aACLJ,cAAc,eAIpB,eAAChB,EAAA,EAAD,WACE,cAACkB,EAAA,EAAD,CACEL,QAAQ,cACRO,KAAK,YACLC,QAASxC,KAAKH,0BAEhB,cAACwC,EAAA,EAAD,CACEL,QAAQ,cACRO,KAAK,OACLC,QAASxC,KAAKF,6B,GAzfE2C,IAAMC,W,4CClFvBC,EAAb,WACI,WAAYC,EAAOC,EAAWC,EAAMC,EAAUC,GAAc,oBACxDhD,KAAK4C,MAAQA,EACb5C,KAAK6C,UAAYA,EACjB7C,KAAK8C,KAAOA,EACZ9C,KAAK+C,SAAWA,EAChB/C,KAAKgD,aAAeA,EAN5B,uCAQI,WACI,OAAOhD,KAAKiD,QATpB,IAwBI,SAAU7H,GACN4E,KAAKiD,OAAO7H,IAzBpB,qBAWI,WACI,OAAO4E,KAAKkD,YAZpB,IA2BI,SAAc9H,GACV4E,KAAKkD,WAAW9H,IA5BxB,gBAcI,WACI,OAAO4E,KAAKmD,OAfpB,IA8BI,SAAS/H,GACL4E,KAAKmD,MAAM/H,IA/BnB,oBAiBI,WACI,OAAO4E,KAAKoD,WAlBpB,IAiCI,SAAahI,GACT4E,KAAKoD,UAAUhI,IAlCvB,wBAoBI,WACI,OAAO4E,KAAKqD,eArBpB,IAoCI,SAAiBjI,GACb4E,KAAKqD,cAAcjI,MArC3B,KAyCakI,EAAb,WACI,WAAYC,EAAkBxB,EAAOyB,EAAQC,EAASC,EAAYC,EAAeC,EAAyBC,EAAeC,EAAkBC,EAAUC,EAAYC,EAAaC,EAAeC,EAAkBC,EAA4BC,EAA0BC,GAAwB,oBACzRtE,KAAKuD,iBAAmBA,EACxBvD,KAAK+B,MAAQA,EACb/B,KAAKwD,OAASA,EACdxD,KAAKyD,QAAUA,EACfzD,KAAK0D,WAAWA,EAChB1D,KAAK2D,cAAcA,EACnB3D,KAAK4D,wBAA0BA,EAC/B5D,KAAK6D,cAAgBA,EACrB7D,KAAK8D,iBAAmBA,EACxB9D,KAAK+D,SAASA,EACd/D,KAAKgE,WAAWA,EAChBhE,KAAKiE,YAAYA,EACjBjE,KAAKkE,cAAcA,EACnBlE,KAAKmE,iBAAiBA,EACtBnE,KAAKoE,2BAA2BA,EAChCpE,KAAKqE,yBAAyBA,EAC9BrE,KAAKsE,uBAAuBA,EAlBpC,kDAoBI,WACI,OAAOtE,KAAKuE,mBArBpB,IAsFI,SAAqBnJ,GACjB4E,KAAKuE,kBAAkBnJ,IAvF/B,iBAuBI,WACI,OAAO4E,KAAKwE,QAxBpB,IAyFI,SAAUpJ,GACN4E,KAAKwE,OAAOpJ,IA1FpB,kBA0BI,WACI,OAAO4E,KAAKyE,SA3BpB,IA4FI,SAAWrJ,GACP4E,KAAKyE,QAAQrJ,IA7FrB,mBA6BI,WACI,OAAO4E,KAAK0E,UA9BpB,IA+FI,SAAYtJ,GACR4E,KAAK0E,SAAStJ,IAhGtB,sBAgCI,WACI,OAAO4E,KAAK2E,aAjCpB,IA0GI,SAAevJ,GACX4E,KAAK2E,YAAYvJ,IA3GzB,yBAmCI,WACI,OAAO4E,KAAK4E,gBApCpB,IA6GI,SAAkBxJ,GACd4E,KAAK4E,eAAexJ,IA9G5B,mCAsCI,WACI,OAAO4E,KAAK6E,0BAvCpB,IAkGI,SAA4BzJ,GACxB4E,KAAK6E,yBAAyBzJ,IAnGtC,yBAyCI,WACI,OAAO4E,KAAK8E,gBA1CpB,IAoGK,SAAkB1J,GACf4E,KAAK8E,eAAe1J,IArG5B,4BA4CI,WACI,OAAO4E,KAAK+E,mBA7CpB,IAuGI,SAAqB3J,GACjB4E,KAAK+E,kBAAkB3J,IAxG/B,oBA+CI,WACI,OAAO4E,KAAKgF,WAhDpB,IAuEI,SAAa5J,GACT4E,KAAKgF,UAAU5J,IAxEvB,sBAkDI,WACI,OAAO4E,KAAKiF,aAnDpB,IA0EI,SAAe7J,GACX4E,KAAKiF,YAAY7J,IA3EzB,uBAqDI,WACI,OAAO4E,KAAKkF,cAtDpB,IA6EI,SAAgB9J,GACZ4E,KAAKkF,aAAa9J,IA9E1B,yBAwDI,WACI,OAAO4E,KAAKmF,gBAzDpB,IAgFI,SAAkB/J,GACd4E,KAAKmF,eAAe/J,IAjF5B,4BA2DI,WACI,OAAO4E,KAAKoF,mBA5DpB,IAmFI,SAAqBhK,GACjB4E,KAAKoF,kBAAkBhK,IApF/B,oCA8DI,WACI,OAAO4E,KAAKqF,2BA/DpB,IAsHI,SAA6BjK,GACzB4E,KAAKqF,0BAA0BjK,IAvHvC,sCAiEI,WACI,OAAO4E,KAAKsF,6BAlEpB,IAmHI,SAA+BlK,GAC3B4E,KAAKsF,4BAA4BlK,IApHzC,kCAoEI,WACI,OAAO4E,KAAKuF,yBArEpB,IAgHI,SAA2BnK,GACvB4E,KAAKuF,wBAAwBnK,MAjHrC,KA2HaoK,EAAb,WACI,WAAYC,EAAMC,EAAOC,EAAKC,GAAQ,oBAClC5F,KAAKyF,KAAOA,EACZzF,KAAK0F,MAAMA,EACX1F,KAAK2F,IAAIA,EACT3F,KAAK4F,OAAOA,EALpB,sCAOI,WACI,OAAO5F,KAAK6F,OARpB,IAoBI,SAASzK,GACL4E,KAAK6F,MAAMzK,IArBnB,iBAUI,WACI,OAAO4E,KAAK8F,QAXpB,IAuBI,SAAU1K,GACN4E,KAAK8F,OAAO1K,IAxBpB,eAaI,WACI,OAAO4E,KAAK+F,MAdpB,IA0BI,SAAQ3K,GACJ4E,KAAK+F,KAAK3K,IA3BlB,kBAgBI,WACI,OAAO4E,KAAKgG,SAjBpB,IA6BI,SAAW5K,GACP4E,KAAKgG,QAAQ5K,MA9BrB,KAkCa6K,EAAb,WACI,WAAYlL,EAAMmL,EAAQC,EAAMC,GAAQ,oBACpCpG,KAAKjF,KAAKA,EACViF,KAAKkG,OAAOA,EACZlG,KAAKmG,KAAKA,EACVnG,KAAKoG,OAAOA,EALpB,sCAOI,WACI,OAAOpG,KAAKqG,OARpB,IAmBI,SAASjL,GACL4E,KAAKqG,MAAMjL,IApBnB,kBAUI,WACI,OAAO4E,KAAKsG,SAXpB,IAsBI,SAAWlL,GACP4E,KAAKsG,QAAQlL,IAvBrB,gBAaI,WACI,OAAO4E,KAAKuG,OAdpB,IAyBI,SAASnL,GACL4E,KAAKuG,MAAMnL,IA1BnB,iBAgBI,WACI,OAAO4E,KAAKwG,SAjBpB,kBA4BI,SAAWpL,GACP4E,KAAKyG,QAAQrL,MA7BrB,KAiCasL,EAAb,WACI,WAAY7D,EAAW8D,EAAQC,EAAaC,GAAQ,oBAChD7G,KAAK6C,UAAUA,EACf7C,KAAK2G,OAAOA,EACZ3G,KAAK4G,YAAcA,EACnB5G,KAAK6G,OAAOA,EALpB,2CAOI,WACI,OAAO7G,KAAKkD,YARpB,IAmBI,SAAc9H,GACV4E,KAAKkD,WAAW9H,IApBxB,kBAUI,WACI,OAAO4E,KAAK8G,SAXpB,IAsBI,SAAW1L,GACP4E,KAAK8G,QAAQ1L,IAvBrB,uBAaI,WACI,OAAO4E,KAAK+G,cAdpB,IAyBI,SAAgB3L,GACZ4E,KAAK+G,aAAa3L,IA1B1B,kBAgBI,WACI,OAAO4E,KAAKgH,SAjBpB,IA4BI,SAAW5L,GACP4E,KAAKgH,QAAQ5L,MA7BrB,KAiCa6L,EAAb,WACI,WAAYC,EAAYC,EAAoBC,GAAgB,oBACxDpH,KAAKkH,WAAWA,EAChBlH,KAAKmH,mBAAmBA,EACxBnH,KAAKqH,mBAAmBD,EAJhC,4CAMI,WACI,OAAOpH,KAAKsH,aAPpB,IAeI,SAAelM,GACX4E,KAAKsH,YAAYlM,IAhBzB,8BASI,WACI,OAAO4E,KAAKuH,qBAVpB,IAkBI,SAAuBnM,GACnB4E,KAAKuH,oBAAoBnM,IAnBjC,8BAYI,WACI,OAAO4E,KAAKwH,mBAbpB,IAqBI,SAAuBpM,GACnB4E,KAAKwH,kBAAkBpM,MAtB/B,KAyBaqM,EAAb,WACI,WAAYC,EAAeC,EAAoBC,GAAwB,oBACnE5H,KAAK0H,cAAcA,EACnB1H,KAAK2H,mBAAmBA,EACxB3H,KAAK4H,uBAAuBA,EAJpC,+CAMI,WACI,OAAO5H,KAAK6H,gBAPpB,IAeI,SAAkBzM,GACd4E,KAAK6H,eAAezM,IAhB5B,8BASI,WACI,OAAO4E,KAAK8H,qBAVpB,IAkBI,SAAuB1M,GACnB4E,KAAK8H,oBAAoB1M,IAnBjC,kCAYI,WACI,OAAO4E,KAAK+H,yBAbpB,IAqBI,SAA2B3M,GACvB4E,KAAK+H,wBAAwB3M,MAtBrC,KA0Ba4M,EAAb,WACI,WAAYC,EAAiBC,EAAmBC,GAAiB,oBAC7DnI,KAAKiI,gBAAgBA,EACrBjI,KAAKmI,gBAAgBA,EAH7B,iDAKI,WACI,OAAOnI,KAAKoI,kBANpB,IAcI,SAAoBhN,GAChB4E,KAAKoI,iBAAiBhN,IAf9B,6BAQI,WACI,OAAO4E,KAAKqI,oBATpB,IAiBI,SAAsBjN,GAClB4E,KAAKqI,mBAAmBjN,IAlBhC,2BAWI,WACI,OAAO4E,KAAKsI,kBAZpB,IAoBI,SAAoBlN,GAChB4E,KAAKsI,iBAAiBlN,MArB9B,KC9RMmN,EAA0B,UAe1B7E,EAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,EAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,EAAmB,IAAImC,EAC3B,aACA,UACA,IACA,UAEI9B,EAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,EAAqB,IAAIlB,EAAgB,QAAS,SAAU,GAAI,UAChEoB,GAAqB,IAAIpB,EAAgB,QAAS,SAAU,EAAG,UAI/DuC,GAAa,IAAIlF,EAhCE,UAkCvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,EACAC,EACA4E,EACAA,EACAzE,EACA,UACA,UACA,UACA,UACAK,EACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EAvDqB,UACD,KAyDpB,GAGIgC,GAAgB,IAAIjB,EAjEJ,UAOD,IAND,WA0FLkB,GARK,IAAIhG,EACtB6F,GACAC,GAdgB,IAAIxB,EA9DH,UAgEjBE,EACAE,IAaAqB,GAVwB,IAAIV,EAnEL,UACE,UACF,ICVnBO,GAA0B,UAe1B7E,GAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,GAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,GAAmB,IAAImC,EAC3B,aACA,UACA,IACA,UAEI9B,GAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,GAAqB,IAAIlB,EAAgB,QAAS,SAAU,GAAI,UAChEoB,GAAqB,IAAIpB,EAAgB,QAAS,SAAU,EAAG,UAG/DuC,GAAa,IAAIlF,EA/BE,UAiCvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,GACAC,GACA4E,GACAA,GACAzE,GACA,UACA,UACAyE,GACAA,GACApE,GACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EAtDqB,UACD,KAwDpB,GAGIgC,GAAgB,IAAIjB,EAhEJ,UAOD,IAND,WAyFLmB,GARK,IAAIjG,EACtB6F,GACAC,GAdgB,IAAIxB,EA7DH,UA+DjBE,GACAE,IAaAqB,GAVwB,IAAIV,EAlEL,UACE,UACF,ICVnBO,GAA0B,UAM1BM,GAAkB,UASlBnF,GAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,GAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,GAAmB,IAAImC,EAC3B,aAlBwB,UAoBxB,IACA,UAEI9B,GAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,GAAqB,IAAIlB,EAC7B,QACA4C,GAtBoB,GAwBpB,UAEIxB,GAAqB,IAAIpB,EAC7B,QACA4C,GA3BoB,EA6BpB,UAKIL,GAAa,IAAIlF,EA1CE,UA4CvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,GACAC,GACA4E,GACAA,GACAzE,GACA,UACA,UACAyE,GACAA,GACApE,GACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EAjEqB,UACD,KAmEpB,GAGIgC,GAAgB,IAAIjB,EA3EJ,UAOD,IAND,WAoGLqB,GARK,IAAInG,EACtB6F,GACAC,GAdgB,IAAIxB,EAxEH,UA0EjBE,GACAE,IAaAqB,GAVwB,IAAIV,EA7EL,UACE,UACF,ICVnBpE,GAA0B,UAY1BF,GAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,GAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,GAAmB,IAAImC,EAC3B,aAfwB,UAiBxB,IACA,UAEI9B,GAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,GAAqB,IAAIlB,EAAgB,QAAS,SAAU,GAAI,UAChEoB,GAAqB,IAAIpB,EAAgB,QAAS,SAAU,EAAG,UAI/DuC,GAAa,IAAIlF,EA7BE,UA+BvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,GACAC,GACAC,GACAA,GACAE,GACA,UACA,UACA,UACA,UACAK,GACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EApDqB,UACD,KAsDpB,GAGIgC,GAAgB,IAAIjB,EA9DJ,UAOD,IAND,WAsFLsB,GAPc,IAAIpG,EAC/B6F,GACAC,GAdgB,IAAIxB,EA3DH,UA6DjBE,GACAE,IAaAqB,GAVwB,IAAIV,EAhEL,UACE,UACF,ICRnBpE,GAA0B,UAe1BF,GAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,GAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,GAAmB,IAAImC,EAC3B,aAlBwB,UAoBxB,IACA,UAEI9B,GAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,GAAqB,IAAIlB,EAAgB,QAAS,SAAU,GAAI,UAChEoB,GAAqB,IAAIpB,EAAgB,QAAS,SAAU,EAAG,UAI/DuC,GAAa,IAAIlF,EAhCE,UAkCvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,GACAC,GACAC,GACAA,GACAE,GACA,UACA,UACAF,GACAA,GACAO,GACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EAvDqB,UACD,KAyDpB,GAGIgC,GAAgB,IAAIjB,EAjEJ,UAOD,IAND,WA0FLuB,GARkB,IAAIrG,EACnC6F,GACAC,GAdgB,IAAIxB,EA9DH,UAgEjBE,GACAE,IAaAqB,GAVwB,IAAIV,EAnEL,UACE,UACF,ICVnBpE,GAA0B,UAe1BF,GAAa,IAAIuC,EAAgB,QAAS,UAAW,GAAI,QACzDtC,GAAgB,IAAIsC,EAAgB,QAAS,UAAW,GAAI,UAE5DnC,GAAmB,IAAImC,EAC3B,aAlBwB,UAoBxB,IACA,UAEI9B,GAAmB,IAAI8B,EAC3B,aACA,UACA,EACA,UAGIkB,GAAqB,IAAIlB,EAAgB,QAAS,SAAU,GAAI,UAChEoB,GAAqB,IAAIpB,EAAgB,QAAS,SAAU,EAAG,UAI/DuC,GAAa,IAAIlF,EAhCE,UAkCvB,IACA,IALmB,IAAIkC,EAAc,GAAI,GAAI,GAAI,IAOjD9B,GACAC,GACAC,GACAA,GACAE,GACA,UACA,UACAF,GACAA,GACAO,GACA,UACA,UACA,WAGIsE,GAAiB,IAAI/B,GACzB,EAvDqB,UACD,KAyDpB,GAGIgC,GAAgB,IAAIjB,EAjEJ,UAOD,IAND,WA0FLwB,GARmB,IAAItG,EACpC6F,GACAC,GAdgB,IAAIxB,EA9DH,UAgEjBE,GACAE,IAaAqB,GAVwB,IAAIV,EAnEL,UACE,UACF,I,gFCkCVkB,OAtEf,SAAmB7O,GACjB,IAAM8O,EAAY9O,EAAM8O,UAClBC,EAyBR,SAAkB/O,GAEhB,IAAIgP,EAAQ,GAEY,WAApBhP,EAAMwB,UACRwN,EAAQ,SACqB,WAApBhP,EAAMwB,UACfwN,EAAQ,oBACqB,eAApBhP,EAAMwB,YACfwN,EAAQ,gCAGV,IAAIC,EAAU,GACVC,EAAkB,GAEpBD,EADgB,SAAdjP,EAAM4B,IACE,OAEA,QAGZ,OAAQ5B,EAAMoB,mBACZ,IAAK,SACH8N,EAAkB,kBAClB,MACF,IAAK,SACHA,EAAkB,SAClB,MACF,IAAK,MACHA,EAAkB,kBAClB,MACF,IAAK,MACHA,EAAkB,qBAClB,MACF,QACEA,EAAkB,GAMtB,MAAO,CAAEC,SAFED,EAAkB,MAAQD,EAERD,MAAOA,GAjErBI,CAASpP,GAExB,OACE,gCACE,cAACqP,GAAA,EAAD,CAAQC,OAAQR,EAAhB,SACE,cAACS,GAAA,EAAD,8BAEF,cAAC,KAAD,CACE/N,UAAWxB,EAAMwB,UACjBJ,kBAAmBpB,EAAMoB,kBACzBQ,IAAK5B,EAAM4B,IACXoN,MAAOD,EAAOC,MACdG,SAAUJ,EAAOI,SACjBK,kBAAmBxP,EAAMwP,kBACzBC,WAAYzP,EAAMyP,WAClBC,iBAAkB1P,EAAM0P,iBACxBC,aAAc3P,EAAM2P,aACpBC,cAAe5P,EAAM4P,cACrBC,UAAW7P,EAAM6P,UACjBC,YAAU,QC1BZC,GAAgB,SAAhBA,EAAiBC,GACrB,IAAIC,EAAO,GAYX,OAXAD,EAAIE,SAAQ,SAACC,GACPC,MAAMC,QAAQF,GAChBF,EAAK9P,KAAK4P,EAAcI,IAEJ,kBAATA,GAA8B,OAATA,EAC9BF,EAAK9P,KAAKmQ,GAAeH,IAEzBF,EAAK9P,KAAKgQ,MAITF,GAGHK,GAAiB,SAAjBA,EAAkBC,GAEtB,IADA,IAAIC,EAAU,GACd,MAAyBC,OAAOC,QAAQH,GAAxC,eAA8C,CAAC,IAAD,sBAApCnQ,EAAoC,KAA/BE,EAA+B,KACxC8P,MAAMC,QAAQ/P,GAChBkQ,EAAQpQ,GAAO2P,GAAczP,GAG3BkQ,EAAQpQ,GADW,kBAAVE,GAAgC,OAAVA,EAChBgQ,EAAehQ,GAEfA,EAIrB,OAAOkQ,GAaMG,GAVE,SAACC,GAChB,OAAIR,MAAMC,QAAQO,GACTb,GAAca,GACK,kBAAVA,GAAgC,OAAVA,EAC/BN,GAAeM,GAEfA,G,6BCYEC,GAAY,SAAC7Q,GACxB,IAzCaoB,EAyCP6C,EAAcjE,EAAMiE,YAC1B,OACE,eAAC,IAAM6M,SAAP,WACE,eAACC,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAME,KAAP,mBACA,cAACF,GAAA,EAAME,KAAP,UACGhN,EAAYiN,kBAAkBC,6BAEjC,cAACJ,GAAA,EAAME,KAAP,UACGhN,EAAYiN,kBAAkBE,4BAGnC,eAACL,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAME,KAAP,0BACA,eAACF,GAAA,EAAME,KAAP,WACGhN,EAAYoN,wBAAwBnN,kBAAmB,KAxDnD9C,EAyDE6C,EAAYoN,wBAAwB/M,mBAxDzB,WAAtBlD,EACK,KAEiB,WAAtBA,EACK,KAEiB,QAAtBA,EACK,WAEiB,QAAtBA,EACK,UADT,MAiDM,cAAC2P,GAAA,EAAME,KAAP,OAEF,eAACF,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAME,KAAP,kBACA,cAACF,GAAA,EAAME,KAAP,UACGK,KAAKC,MACsD,IAA1DtN,EAAYuN,8BAA8BC,eACxC,MAEN,cAACV,GAAA,EAAME,KAAP,UACGK,KAAKC,MAC0D,IAA9DtN,EAAYuN,8BAA8BE,mBACxC,SAGR,eAACX,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAME,KAAP,uBACA,cAACF,GAAA,EAAME,KAAP,UACGhN,EAAYuN,8BAA8BG,oBAE7C,cAACZ,GAAA,EAAME,KAAP,UACGhN,EAAYuN,8BAA8BI,+BAOxCC,GAAiB,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWtQ,EAAd,EAAcA,UAAd,OAC5B,cAACsF,EAAA,EAAD,UACE,eAACiK,GAAA,EAAD,CAAOnJ,MAAM,OAAOmK,QAAM,EAACC,YAAU,EAACvR,SAAO,EAA7C,UACE,cAACsQ,GAAA,EAAM5J,OAAP,UACE,eAAC4J,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAMkB,WAAP,IACA,cAAClB,GAAA,EAAMkB,WAAP,gCACA,cAAClB,GAAA,EAAMkB,WAAP,yCAGJ,eAAClB,GAAA,EAAMmB,KAAP,WACGJ,EAAUtQ,GAAW2H,OAAOxG,OAAS,GACpC,eAACoO,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAMkB,WAAP,IACA,cAAClB,GAAA,EAAMkB,WAAP,sBACA,cAAClB,GAAA,EAAMkB,WAAP,OAGHH,EAAUtQ,GAAW2H,OAAOxG,OAAS,GACpCmP,EAAUtQ,GAAW2H,OAAOjG,KAAI,SAACe,EAAab,GAC5C,OAAO,cAAC,GAAD,CAAWa,YAAaA,GAAkBb,MAEpD0O,EAAUtQ,GAAWuK,OAAOpJ,OAAS,GACpC,eAACoO,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAMkB,WAAP,IACA,cAAClB,GAAA,EAAMkB,WAAP,sBACA,cAAClB,GAAA,EAAMkB,WAAP,OAGHH,EAAUtQ,GAAWuK,OAAOpJ,OAAS,GACpCmP,EAAUtQ,GAAWuK,OAAO7I,KAAI,SAACe,EAAab,GAC5C,OAAO,cAAC,GAAD,CAAuBa,YAAaA,GAApBb,MAE1B0O,EAAUtQ,GAAW2Q,IAAIxP,OAAS,GACjC,eAACoO,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAMkB,WAAP,IACA,cAAClB,GAAA,EAAMkB,WAAP,mBACA,cAAClB,GAAA,EAAMkB,WAAP,OAGHH,EAAUtQ,GAAW2Q,IAAIxP,OAAS,GACjCmP,EAAUK,IAAIjP,KAAI,SAACe,EAAab,GAC9B,OAAO,cAAC,GAAD,CAAuBa,YAAaA,GAApBb,MAE1B0O,EAAUtQ,GAAW4Q,IAAIzP,OAAS,GACjC,eAACoO,GAAA,EAAMC,IAAP,WACE,cAACD,GAAA,EAAMkB,WAAP,IACA,cAAClB,GAAA,EAAMkB,WAAP,kCACA,cAAClB,GAAA,EAAMkB,WAAP,OAGHH,EAAUtQ,GAAW4Q,IAAIzP,OAAS,GACjCmP,EAAUtQ,GAAW4Q,IAAIlP,KAAI,SAACe,EAAab,GACzC,OAAO,cAAC,GAAD,CAAuBa,YAAaA,GAApBb,eAOtBiP,GAAa,SAAC,GAMpB,IALLrD,EAKI,EALJA,MACAsD,EAII,EAJJA,KACAC,EAGI,EAHJA,YACAC,EAEI,EAFJA,QACAC,EACI,EADJA,aAEMC,IAAaD,EACnB,OACE,eAACE,GAAA,EAAD,CAAO3D,MAAOA,EAAO4D,KAAMJ,EAAS1G,KAAK,QAAQ+G,eAAe,EAAhE,UACE,cAACF,GAAA,EAAMxL,OAAP,UAAe6H,IACf,cAAC2D,GAAA,EAAMG,QAAP,UAAgBR,IAChB,eAACK,GAAA,EAAMI,QAAP,WACE,cAAC/K,EAAA,EAAD,CAAQgL,UAAQ,EAAC7K,QAASoK,EAA1B,gBAGCG,GAAc,cAAC1K,EAAA,EAAD,CAAQG,QAASsK,EAAjB,2B,mBC5JRQ,OAXf,SAA4BjT,GAExB,OAAO,cAACQ,EAAA,EAAD,CACHE,KAAK,WACLS,YAAY,OACZb,MAAON,EAAMkT,aACbrS,SAAU,SAACC,EAAGC,GAAJ,OAAUf,EAAMmT,yBAAyBpS,IACnDH,QAASZ,EAAMoT,uBCURC,GArBA,SAACrT,GACZ,OAAO,sBAAKsT,MAAO,CAACvM,UAAW,QAAxB,UACH,uBAAOuM,MAAO,CAAClK,QAAS,QAAxB,SAAkCpJ,EAAMuT,MAExC,uBACI/L,KAAK,QACL+L,IAAKvT,EAAMuT,IACXC,IAAKxT,EAAMwT,IACXlT,MAAON,EAAMM,MACbmT,KAAMzT,EAAMyT,KACZC,UAAU,SACVC,GAAG,UACH9S,SAAU,SAACC,GAAD,OAAMd,EAAMa,SAASC,EAAE8E,OAAOtF,UAG5C,uBAAOgT,MAAO,CAAClK,QAAS,QAAxB,SAAkCpJ,EAAMwT,MAExC,qBAAIF,MAAO,CAACM,QAAQ,UAApB,UAAgC5T,EAAMuH,MAAtC,KAA+CvH,EAAMM,MAArD,cCbO8S,GANa,CACxB,CAAEhT,IAAK,IAAKE,MAAO,OAAQC,KAAM,OAAQwB,UAAU,GACnD,CAAE3B,IAAK,IAAKE,MAAO,QAASC,KAAM,QAASwB,UAAU,GACrD,CAAE3B,IAAK,IAAKE,MAAO,SAAUC,KAAM,SAAUwB,UAAU,GACvD,CAAE3B,IAAK,IAAKE,MAAO,QAASC,KAAM,QAASwB,UAAU,ICmS1C8R,GAjRY,SAAC7T,GAAW,IAAD,EAEgB8T,mBAAS,UAFzB,mBAE3B1S,EAF2B,KAERgD,EAFQ,OAGZ0P,mBAAS,QAHG,mBAG3BlS,EAH2B,KAGtBmS,EAHsB,OAIRD,mBAAS,IAJD,mBAI3BnT,EAJ2B,KAIpBqT,EAJoB,OAKVF,mBAAS,GALC,mBAK3B7S,EAL2B,KAKrBgT,EALqB,OAMIH,mBAAS,GANb,mBAM3BI,EAN2B,KAMdC,EANc,OAOAL,mBAAS,IAPT,mBAO3BM,EAP2B,KAOhBC,EAPgB,OAQMP,mBAAS,QARf,mBAQ3BZ,EAR2B,KAQboB,EARa,OASFR,mBAAS,IATP,mBAS3BS,EAT2B,KASjBC,EATiB,OAUAV,oBAAS,GAVT,mBAU3BW,EAV2B,KAUhBC,EAVgB,OAWRZ,mBAAS,KAXD,mBAW3Ba,EAX2B,KAWpBC,GAXoB,QAYDd,oBAAS,GAZR,qBAY3Be,GAZ2B,MAYhBC,GAZgB,SAaRhB,mBAAS,IAbD,qBAa3BiB,GAb2B,MAapBC,GAboB,SAcFlB,mBAAS,GAdP,qBAc3BmB,GAd2B,MAcjBC,GAdiB,SAeApB,mBAAS,UAfT,qBAe3BtS,GAf2B,MAehB2T,GAfgB,MA+E5B3Q,GAA0B,SAAC,GAAiB,IAAhB9D,EAAe,EAAfA,KAAMK,EAAS,EAATA,IACvB,cAATL,GACAyT,EAAepT,GAEN,YAATL,GACA2T,EAAatT,GAEJ,mBAATL,GACA8T,EAAYzT,GAEH,aAATL,GACAwU,GAAYnU,IAyBpB,OACE,eAACiG,EAAA,EAAD,CAAMC,SAlGa,SAAC,GAAc,IAAbrB,EAAY,EAAZA,OACbM,EAAWuK,OAAO2E,YAAY,IAAIC,SAASzP,IAC3C0P,EAAS,CACX,IAAO1T,EACP,wBAA2BsE,EAASqP,UACpC,QAAWrP,EAASsP,QACpB,gBAAkB7U,EAClB,eAAiBM,EACjB,0BAA8BiS,EAC9B,4BAA8BhN,EAASuP,eACvC,UAAc,GACd,MAAUZ,GACV,YAAgBF,EAChB,MAAUF,EACV,YAAgBM,GAChB,UAAcvT,IAElBxB,EAAM0V,wBAAwBJ,IAiFhC,UACE,cAACtO,EAAA,EAAKE,MAAN,UACI,cAAC,EAAD,CACIzF,sBAjFkB,SAACV,GAC3BoU,GAAapU,EAAIT,OACD,WAAZS,EAAIT,OACJgB,EAAmB,GAAGS,UAAW,EACjCT,EAAmB,GAAGS,UAAW,EACjCT,EAAmB,GAAGS,UAAW,EACjCD,EAAW,GAAGC,UAAS,EACvBqC,EAAqB,UACrB2P,EAAO,YAGPzS,EAAmB,GAAGS,UAAW,EACjCT,EAAmB,GAAGS,UAAW,EACjCT,EAAmB,GAAGS,UAAW,EACjCD,EAAW,GAAGC,UAAS,IAoEnBP,UAAWA,GACXE,iBAAkBA,MAG1B,cAACsF,EAAA,EAAKE,MAAN,UACI,cAAC,EAAD,CACI7F,8BAtE0B,SAACN,GACnCqD,EAAqBrD,IAsEbK,kBAAmBA,EACnBE,mBAAoBA,MAG5B,cAAC0F,EAAA,EAAKE,MAAN,UACI,cAAC,EAAD,CACIrF,gBAzEY,SAACd,GACrBgT,EAAOhT,EAAIT,QAyEHsB,IAAKA,EACLE,WAAYA,MAGpB,cAACkF,EAAA,EAAKE,MAAN,UACI,cAAC,EAAD,CACIlG,sBA5EkB,SAAC,GAAmB,IAAlBN,EAAiB,EAAjBA,KAAMJ,EAAW,EAAXA,MACrB,oBAATI,GACAsT,EAAS1T,GACK,KAAVA,GACA2T,EAAQ,IAEI,mBAATvT,GAEHuT,EADU,KAAVtT,EACQ,EAEAL,IAmERK,MAAOA,EACPM,KAAMA,MAGd,cAACkG,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAW,OAA3B,kBAGA,cAACC,EAAA,EAAKE,MAAN,UACI,cAACI,EAAA,EAAD,CACIE,KAAK,UACL9G,KAAK,YACLS,YAAY,uBACZb,MAAO4T,EACP3M,MAAO,CACHI,QAAS,KACTC,OAAO,EACPC,MAAO,QAEXC,cAAc,QACdjH,SAAU2D,OAGlB,cAACwC,EAAA,EAAKE,MAAN,UACI,cAACI,EAAA,EAAD,CACIE,KAAK,UACL9G,KAAK,UACLS,YAAY,qBACZb,MAAO8T,EACP7M,MAAO,CACHI,QAAS,KACTC,OAAO,EACPC,MAAO,QAEXC,cAAc,QACdjH,SAAU2D,OAGlB,cAAC2C,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAW,OAA3B,uBAGA,cAACC,EAAA,EAAKE,MAAN,UACQ,cAAC,GAAD,CACIiM,yBAzFiB,SAAC,GAAa,IAAZ7S,EAAW,EAAXA,MAC/BgU,EAAgBhU,IAyFJ4S,aAAcA,EACdE,oBAAqBuC,OAGjC,cAAC3O,EAAA,EAAKE,MAAN,UACI,cAACI,EAAA,EAAD,CACIE,KAAK,UACL9G,KAAK,iBACLS,YAAY,kBACZb,MAAOiU,EACPzM,cAAc,QACdjH,SAAU2D,OAIlB,cAAC2C,EAAA,EAAD,CAAQC,GAAG,KAAKL,UAAW,OAA3B,iBAGA,cAACC,EAAA,EAAKE,MAAN,UACI,cAACF,EAAA,EAAKM,MAAN,CACIC,MAAM,eACNC,KAAK,UACL9G,KAAK,WACLS,YAAY,MACZb,MAAO2U,GACPnN,cAAc,OACdjH,SAAU2D,OAKlB,cAACwC,EAAA,EAAKE,MAAN,CAAYQ,MAAO,GAAI4L,MAAO,CAACvM,UAAU,QAAzC,SACI,cAAC6O,GAAA,EAAD,CACIC,QAAM,EACNtO,MAAM,iBACN1G,SAzHiB,SAACC,EAAD,GAAmB,IAAdgV,EAAa,EAAbA,QAC9BpB,EAAaoB,QA4HTrB,GAEA,cAACzN,EAAA,EAAKE,MAAN,CAAYQ,MAAO,GAAnB,SACI,cAAC,GAAD,CACI6L,KAAM,EACNC,IAAK,EACLlT,MAAQqU,EACRlB,KAAM,IACN5S,SAjIU,SAACE,GACvB6T,GAAS7T,IAiIGwG,MAAM,YAMlB,cAACP,EAAA,EAAKE,MAAN,CAAYQ,MAAO,GAAI4L,MAAO,CAACvM,UAAU,QAAzC,SACI,cAAC6O,GAAA,EAAD,CACIC,QAAM,EACNtO,MAAM,8BACN1G,SApIa,SAACC,EAAD,GAAmB,IAAdgV,EAAa,EAAbA,QAC1BhB,GAAagB,QAuITjB,IACA,cAAC7N,EAAA,EAAKE,MAAN,CAAYQ,MAAO,GAAnB,SACI,cAAC,GAAD,CACI6L,IAAK,EACLC,IAAK,IACLlT,MAAQyU,GACRtB,KAAM,IACN5S,SAnJU,SAACE,GACvBiU,GAASjU,IAmJGwG,MAAM,gBAIlB,cAACP,EAAA,EAAKE,MAAN,UACI,cAACc,EAAA,EAAD,CACIL,QAAQ,uBACRH,KAAK,SACLS,OAAK,EAELJ,MAAM,OACNK,KAAK,aACLJ,cAAc,gBC2R9B,IAAMiO,GAAiB,CACrB,CAAEC,SAAU,SAAUC,gBAAiB,UACvC,CAAED,SAAU,SAAUC,gBAAiB,UACvC,CAAED,SAAU,MAAOC,gBAAiB,OACpC,CACED,SAAU,qBACVC,gBAAiB,QAIfC,GAAe,CACnB,CAAE9V,IAAK,aAAcE,MAAO,aAAcC,KAAM,cAChD,CAAEH,IAAK,OAAQE,MAAO,OAAQC,KAAM,eACpC,CAAEH,IAAK,UAAWE,MAAO,UAAWC,KAAM,YAC1C,CAAEH,IAAK,UAAWE,MAAO,UAAWC,KAAM,YAC1C,CAAEH,IAAK,UAAWE,MAAO,UAAWC,KAAM,aAoC7B4V,OAllBf,WACE,IAoCIC,EApCEC,EAAe3H,GADO,EAGOoF,mBAASuC,EAAa9N,OAH7B,mBAGrBkH,EAHqB,KAGT6G,EAHS,OAIMxC,mBAASuC,EAAa5N,MAJ5B,mBAIrBoH,EAJqB,KAIV0G,EAJU,OAKYzC,mBAASuC,EAAa3N,UALlC,mBAKrBiH,EALqB,KAKP6G,EALO,OAMoB1C,mBAC9CuC,EAAa1N,cAPa,mBAMrB+G,EANqB,KAMH+G,EANG,OAUF3C,mBAAS,CACjCxT,MAAO,UACPC,KAAM,eAZoB,mBAUrBmW,EAVqB,KAUdC,EAVc,OAeJ7C,oBAAS,GAfL,mBAerB8C,EAfqB,KAefC,EAfe,OAgBI/C,mBAAS,CACvC3K,QAAQ,EACR4C,QAAQ,EACRoG,KAAK,EACLC,KAAK,IApBqB,mBAgBrBrQ,EAhBqB,KAgBX+U,EAhBW,OAuBsBhD,mBAAS,UAvB/B,mBAuBrB1S,EAvBqB,KAuBFgD,EAvBE,OAwBM0P,mBAAS,UAxBf,mBAwBrBtS,EAxBqB,KAwBV2T,EAxBU,OAyBNrB,mBAAS,QAzBH,mBAyBrBlS,EAzBqB,KAyBhBmS,EAzBgB,QA0BYD,mBAwhBjC,CACLiD,OAAQ,CACN5N,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,IAEP,aAAc,CACZjJ,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,IAEP,SAAU,CACRjJ,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,MAnkBmB,qBA0BrBzJ,GA1BqB,MA0BPqO,GA1BO,SA2BMlD,mBAuhB3B,CACLiD,OAAQ,CACN5N,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,IAEP,aAAc,CACZjJ,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,IAEP,SAAU,CACRjJ,OAAQ,GACR4C,OAAQ,GACRoG,IAAK,GACLC,IAAK,MAnkBmB,qBA2BrBN,GA3BqB,MA2BVmF,GA3BU,SA4BQnD,mBA6iB7B,CACLtB,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,OA9kBY,qBA4BrByE,GA5BqB,MA4BTC,GA5BS,SA6BMrD,oBAAS,GA7Bf,qBA6BrBhF,GA7BqB,MA6BVsI,GA7BU,SA8BItD,mBAAS,CACvCpN,kBAAkB,EAClBJ,cAAc,EACdC,UAAU,EACVK,WAAW,IAlCe,qBA8BrBH,GA9BqB,MA8BXL,GA9BW,MAuC5B,OAAQhF,GACN,IAAK,SACHgV,EAAc,EACd,MACF,IAAK,MACHA,EAAc,EACd,MACF,IAAK,MACHA,EAAc,EACd,MACF,QAEEA,EAAc,EAGlB,IAAMiB,GAAaC,uBACjB,WAAmB,IAAlBC,EAAiB,wDACVC,EAAkB7G,GACtBhI,GAAanH,GAAWJ,IAQ1B,GANAoW,EAAgBC,MAChBT,IAAgB,SAAC3Q,GACf,IAAMqR,EAAU/G,GAAStK,GAEzB,OADAqR,EAAQlW,GAAWJ,GAAqBoW,EACjCE,KAELH,EAAM,CACR,IAAMI,EAAShH,GAASmB,GAAUtQ,GAAWJ,IAC7CuW,EAAOF,MACPR,IAAa,SAAC5Q,GACZ,IAAMqR,EAAU/G,GAAStK,GAEzB,OADAqR,EAAQlW,GAAWJ,GAAqBuW,EACjCD,QAIb,CAAC/O,GAAcnH,EAAWJ,EAAmB0Q,KAG/C,GAAIrL,GAASH,aAAc,CACzB,IAAMA,GAAe,SAACD,GACpB,IAAMqR,EAAU/G,GAAStK,GAEzB,OADAqR,EAAQlW,GAAWJ,GAAqB,GACjCsW,GAETP,GAAc,CACZ3E,SAAS,EACTxD,MAAO,kCACPsD,KAAM,4DACNG,aAAc,kBAAM0E,GAifjB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,QArfZF,YAAa,WACXyE,GAAgB1Q,IAChB2Q,GAAa3Q,IACb6Q,GA6eC,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,UA/edrM,IAAY,SAACC,GACX,OAAO,2BAAKA,GAAZ,IAAiBC,cAAc,OAI/BG,GAASF,WACX4Q,GAAc,CACZ3E,SAAS,EACTxD,MAAO,wDACPsD,KAAM,8DACNG,aAAc,kBAAM0E,GAgejB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,QApeZF,YAAa,WACX8E,IAAW,GACXF,GA6dC,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,UA/ddrM,IAAY,SAACC,GACX,OAAO,2BAAKA,GAAZ,IAAiBE,UAAU,QAI/B,IAAMqR,GAA6B,SAACC,GAClC,GAAIlP,GAAanH,GAAWqW,GAAsBlV,OAAS,EAAG,CAC5D,IAAMmV,EAAcnP,GAAanH,GAAWqW,GAAsB,GAAGjW,IACjEkW,IAAgBlW,IAClBgF,GAAUkR,GAAa,GACvB1R,IAAY,SAACC,GACX,OAAO,2BAAKA,GAAZ,IAAiBO,WAAW,QAIlCxC,EAAqByT,IAGjBE,GAAkB,SAACjX,EAAD,GAAyB,IAAnBsV,EAAkB,EAAlBA,YAC5B,GAAkB,WAAd5U,GAA0C,IAAhB4U,EAO5B,OANAe,GAAc,CACZ3E,SAAS,EACTxD,MAAO,0BACPsD,KAAM,uDACNC,YAAa,kBAAM4E,GAkclB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,UArcL,KAET,IAAIoF,EAAuB,GAC3B,OAAQzB,GACN,KAAK,EACHyB,EAAuB,SACvB,MACF,KAAK,EACHA,EAAuB,SACvB,MACF,KAAK,EACHA,EAAuB,MACvB,MACF,KAAK,EACHA,EAAuB,MACvB,MACF,QACEG,QAAQC,KAAK,wDAEjBL,GAA2BC,IAGvBK,GAAkB,SAACC,GAGvB,OADAhD,EAAagD,GACQ,WAAjBA,GACF/T,EAAqB,UACrB2P,EAAO,UACP+C,EAAY,CACV3N,QAAQ,EACR4C,QAAQ,EACRoG,KAAK,EACLC,KAAK,IAEA,CAAE/N,OAAQ,YAEjByS,EAAY,CACV3N,QAAQ,EACR4C,QAAQ,EACRoG,KAAK,EACLC,KAAK,IAGLN,GAAUqG,GAAc/W,GAAmBuB,OAAS,IACpD,UAAAmP,GAAUqG,GAAc/W,GAAmB,UAA3C,eAA+CgX,WAAWxW,OAAQA,GAElEmS,EAAOjC,GAAUqG,GAAc/W,GAAmB,GAAGgX,WAAWxW,KACzD,CACLyC,OAAQyN,GAAUqG,GAAc/W,GAAmB,GAAGgX,WAAWxW,MAG5D,CAAEyC,OAAQzC,IAhBb,IAAD,GAqBHgF,GAAY,SAACvC,GAAiC,IAAzBgU,EAAwB,wDAE3CC,EAAe,YAAO3P,GAAanH,GAAWJ,IACpD,GAAIkX,EAAgB3V,OAAS,IAAM0V,EAAa,CAAC,IAAD,gBACtBC,GADsB,IAC9C,2BAAyC,CAAC,IAA/BC,EAA8B,QACvC,GAAIlU,IAAWkU,EAAU3W,IAOvB,OANAuV,GAAc,CACZ3E,SAAS,EACTxD,MAAO,uBACPsD,KAAK,+IACLC,YAAa,kBAAM4E,GA8XtB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,WAjYD,GATmC,+BAahD,GAAoB,SAAhBiE,EAAMpW,MAAkB,CAC1B,IAAMkY,EACO,SAAXnU,EACIsK,GACAC,GACN4H,EAAgBgC,EAAc9P,UAC9B4N,EAAakC,EAAcjQ,OAC3BkO,EAAoB+B,EAAc7P,cAClC4N,EAAaiC,EAAc/P,MAG7B,OADAsL,EAAO1P,IACA,GAGHoU,GAAgB,SAACC,GAIrB,IAAMJ,EAAkB3H,GACtBhI,GAAanH,GAAWJ,IAEtBuX,EAAc,GAClB,GAAIL,EAAgB3V,OAAS,EAAG,CAC9B,IAD8B,EACxBiW,EAAeF,EAAQ,GACvBG,EAC2B,EAA/BD,EAAa9T,gBAAsB8T,EAAa7T,eAC5C+T,EAAS,GAJe,cAKNR,GALM,IAK9B,2BAAyC,CAAC,IAA/BC,EAA8B,QACvC,GAAIQ,KAAKC,UAAUT,KAAeQ,KAAKC,UAAUJ,GAAe,CAC9DD,EAAc,YACd,MAEF,IAAMM,EACwB,EAA5BV,EAAUzT,gBAAsByT,EAAUxT,eAU5C,GATIwT,EAAU3W,MAAQgX,EAAahX,KACjCkX,EAAO3Y,KAAK,mBAEVoY,EAAU5T,aAAeiU,EAAajU,YACxCmU,EAAO3Y,KAAK,4BAEV8Y,IAAiBJ,GACnBC,EAAO3Y,KAAK,wBAEV2Y,EAAOnW,OAAS,EAAG,CACrBgW,EAAcG,EAAO,GACC,IAAlBA,EAAOnW,OACTgW,EAAcG,EAAOlW,KAAK,SACC,IAAlBkW,EAAOnW,SAChBgW,EAAW,UAAMG,EAAO,GAAb,aAAoBA,EAAO,GAA3B,gBAAqCA,EAAO,KAEzD,QA5B0B,+BAgChC,OAAIH,GAEAxB,GADkB,cAAhBwB,EACY,CACZnG,SAAS,EACTxD,MAAO,oBACPsD,KAAK,0GACLC,YAAa,kBAAM4E,GA4TpB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,SA9TI,CACZD,SAAS,EACTxD,MAAO,uBACPsD,KAAK,wEAAD,OAA0EqG,EAA1E,mBACJpG,YAAa,kBAAM4E,GAqTpB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,WAvTL,IAEPuE,IAAgB,SAAC3Q,GACf,IAAMqR,EAAU/G,GAAStK,GACnB6S,EAAWxB,EAAQlW,GAAWJ,GAAmB+X,OAAOT,GAE9D,OADAhB,EAAQlW,GAAWJ,GAAqB8X,EACjCxB,KAETN,IAAa,IACN,IAIL1B,GAA0B,SAACxP,GAE/B8R,QAAQoB,IAAIlT,IAGRmT,GAAoB,SAAC3T,EAAD,GAAuB,IAC3C8S,EACAjY,EAF8BD,EAAY,EAAZA,MAIpB,SAAVA,IAEAkY,EADU,SAAR5W,EACc+M,GAEAC,GAElBrO,EAAO,eAEK,YAAVD,IACFkY,EAAgBlK,GAChB/N,EAAO,YAEK,YAAVD,IACFkY,EAAgBjK,GAChBhO,EAAO,YAEK,YAAVD,IACFkY,EAAgB/J,GAChBlO,EAAO,YAEK,eAAVD,IACFkY,EAAgB9J,GAChBnO,EAAO,cAGTiW,EAAgBgC,EAAc9P,UAC9B4N,EAAakC,EAAcjQ,OAC3BkO,EAAoB+B,EAAc7P,cAClC4N,EAAaiC,EAAc/P,MAC3BkO,EAAS,CAAErW,MAAOA,EAAOC,KAAMA,KAO3B+Y,GAAQvD,GAAe7S,KAAI,SAACqW,GAChC,MAAO,CACLvD,SAAUuD,EAAQvD,SAClBwD,OAAQ,kBACN,cAACC,GAAA,EAAIC,KAAL,CAAUC,SAAS,MAAM5X,SAAUA,EAASwX,EAAQtD,iBAApD,SACE,cAAC2D,GAAD,CAEEpY,UAAWA,EACXI,IAAKA,EACLR,kBAAmBmY,EAAQtD,gBAC3BzG,kBAAmBsC,GAAUtQ,GAAW+X,EAAQtD,iBAChDxG,WAAYA,EACZI,UAAWA,EACXD,cAAeyG,EAAa7N,UAC5BmH,aAAcA,EACdD,iBAAkBA,EAClBZ,UAAWA,IAVNyK,EAAQtD,wBAkBjB4D,GAAW,kBACf,cAACJ,GAAA,EAAD,CACEK,KAAM,CAAEH,SAAU,OAClBL,MAAOA,GACPlD,YAAaA,EACb2D,YAAahC,MAKXiC,GAAY,CAChB,CAAEhE,SAAU,gBAAiBwD,OAAQ,kBACnC,cAACC,GAAA,EAAIC,KAAL,CAAUC,UAAU,EAApB,SACE,cAAC,EAAD,CACExU,kBAAmBsT,GACnBhX,sBAAuByW,GACvB/T,gBAAiByC,GACjBxF,kBAAmBA,EACnBgD,qBAAsBwT,GACtBnR,SAAUA,GACVL,YAAaA,GACbsN,UAAU,yBAGhB,CAAEsC,SAAU,gBAAiBwD,OAAQ,kBACnC,cAACC,GAAA,EAAIC,KAAL,UACE,cAAC,GAAD,CACEhE,wBAAyBA,UAM3BuE,GAAiB,kBAErB,cADA,CACA,0BACQ,IACN,cAACC,GAAA,EAAD,CACEtZ,QAASsV,GACTiE,UAAQ,EACRC,QAAM,EACNvZ,SAAUwY,GACV9Y,KAAMmW,EAAMnW,WA4FlB,OAtFA8Z,qBAAU,WACR,IAAMC,EAA2B,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DAC5BC,EAD4B,UACnBC,kDADmB,YACyBlZ,EADzB,yBAEXmZ,KAAM,CAC3BF,IAAKA,EACL/V,KAAM6V,EACNK,OAAQ,OACRC,QAAS,CACP,eAAgB,sBAPc,cAE5BC,EAF4B,yBAU3BA,EAASpW,MAVkB,2CAAH,sDAa7BqW,GAAS,EAEb,GAAIjM,GAAW,CACb,IAAMkM,EAAgBrS,GAAanH,GAAWJ,GAI9CkZ,EAH0B3J,GACxBqK,EAAcA,EAAcrY,OAAS,KAGpCsY,MAAK,SAACC,GACL,IAAKH,EACH,GACEG,EAAO1J,8BACJ2J,6BACHD,EAAO1J,8BACJ4J,gCACH,CACA,IAAMC,EACJH,EAAO1J,8BACJ2J,6BACHD,EAAO1J,8BACJ4J,gCACLhE,IAAa,GACbC,KACAF,GAAc,CACZ3E,SAAS,EACTxD,MAAO,iBACPsD,KAAK,wEAAD,OAA0E+I,GAC9E9I,YAAa,kBAAM4E,GAuI1B,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,eAzIJ2E,IAAa,GACbH,IAAa,SAAC5Q,GACZ,IAAMqR,EAAU/G,GAAStK,GACnBiV,EAAe3K,GACnB+G,EAAQlW,GAAWJ,IAIrB,OAFAka,EAAanb,KAAK+a,GAClBxD,EAAQlW,GAAWJ,GAAqBka,EACjC5D,KAETtR,IAAY,SAACC,GACX,OAAO,2BAAKA,GAAZ,IAAiBK,kBAAkB,UAK1C6U,OAAM,SAAC1Y,GACNuU,IAAa,GACb,IAAMoE,EAAY,uFAAmF3Y,EAAM4Y,QAAzF,KAClBpE,KACAF,GAAc,CACZ3E,SAAS,EACTxD,MAAO,eACPsD,KAAMkJ,EACNjJ,YAAa,kBAAM4E,GA4GtB,CACL3E,SAAS,EACTxD,MAAO,GACPsD,KAAM,GACNC,YAAa,KACbE,aAAc,aA5Gd,OAAO,WAELsI,GAAS,KAEV,CACDjM,GACA1N,EACAI,EACAsQ,GACAnJ,GACA0O,KAIA,eAAC,IAAMvG,SAAP,WAEI,cAAC4K,GAAA,EAAD,CAAMC,QAAM,EAAZ,SACE,eAACD,GAAA,EAAK1K,IAAN,WACE,cAAC0K,GAAA,EAAKE,OAAN,CAAalU,MAAO,EAApB,SACE,cAACZ,EAAA,EAAD,CAASC,UAAW,SAApB,SACI,cAAC0S,GAAA,EAAD,CAAKH,MAAOU,GAAWF,KAAM,CAAEH,UAAU,SAG/C,cAAC+B,GAAA,EAAKE,OAAN,CAAalU,MAAO,GAApB,SACE,eAACZ,EAAA,EAAD,WACG8P,EACC,cAAC,GAAD,CAAgB9E,UAAWA,GAAWtQ,UAAWA,IAEjD,cAACqY,GAAD,IAEF,cAAC6B,GAAA,EAAD,CAAMG,cAAc,SAApB,SACE,eAACH,GAAA,EAAK1K,IAAN,CAAU8K,QAAS,EAAnB,UACE,cAACJ,GAAA,EAAKE,OAAN,CAAa7U,UAAU,OAAvB,SACE,cAACkT,GAAD,MAEF,cAACyB,GAAA,EAAKE,OAAN,CAAa7U,UAAU,QAAvB,SACE,cAACiB,EAAA,EAAD,CACE0L,UAAU,oBACVvL,QA3LI,WACxB0O,GAASD,IAwLS,sCAchB,cAAC,GAAD,CACE5H,MAAOkI,GAAWlI,MAClBsD,KAAM4E,GAAW5E,KACjBE,QAAS0E,GAAW1E,QACpBD,YAAa2E,GAAW3E,YACxBE,aAAcyE,GAAWzE,mBCziBlBsJ,OARf,WACE,OACE,8BACE,cAAC,GAAD,OCUSC,OATf,WAEE,OACE,qBAAKtI,UAAU,MAAf,SACE,cAAC,GAAD,OCAcuI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCNNC,IAAS9C,OAEP,cAAC,GAAD,IAEA+C,SAASC,eAAe,SDmHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB1B,MAAK,SAAA2B,GACJA,EAAaC,gBAEdtB,OAAM,SAAA1Y,GACLmV,QAAQnV,MAAMA,EAAM4Y,c","file":"static/js/main.0338f099.chunk.js","sourcesContent":["import React from 'react';\n\n// Semantic UI React\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\nfunction GestationSelect(props){\n    let gestationWeeksOptions = [];\n    let gestWeeks = 23;\n    while (gestWeeks <= 42) {\n      gestationWeeksOptions.push({\n          key: gestWeeks.toString(10),\n          value: gestWeeks,\n          text: gestWeeks.toString(10),\n      });\n      gestWeeks++;\n    }\n    \n    const gestationDaysOptions = [\n    { key: '0', value: 0, text: '0' },\n    { key: '1', value: 1, text: '1' },\n    { key: '2', value: 2, text: '2' },\n    { key: '3', value: 3, text: '3' },\n    { key: '4', value: 4, text: '4' },\n    { key: '5', value: 5, text: '5' },\n    { key: '6', value: 6, text: '6' },\n    ];\n\n  return (\n    <span>\n        <Select\n          compact\n          name=\"gestation_weeks\"\n          value={props.weeks}\n          options={gestationWeeksOptions}\n          onChange={(e, val) => props.handleGestationChange(val)}\n        />\n        &nbsp;+\n        <Select\n          compact\n          name=\"gestation_days\"\n          value={props.days}\n          options={gestationDaysOptions}\n          onChange={(e, val) => props.handleGestationChange(val)}\n        />\n        &nbsp; weeks\n    </span>)\n}\n\nexport default GestationSelect","import React from 'react';\nimport {\n    Select\n  } from 'semantic-ui-react';\n\n  \nfunction MeasurementMethodSelect(props){\n\n    return <Select\n        name=\"measurement_method\"\n        placeholder=\"Measurement\"\n        value={props.measurementMethod}\n        onChange={(e, val) => props.handleChangeMeasurementMethod(val.value)}\n        options={props.measurementOptions}\n    />\n}\n\nexport default MeasurementMethodSelect","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction ReferenceSelect(props){\n\n    return <Select\n        name=\"reference\"\n        placeholder=\"UK-WHO\"\n        value={props.reference}\n        onChange={(e, val)=>props.handleChangeReference(val)}\n        options={props.referenceOptions}\n    />\n}\n\nexport default ReferenceSelect","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction SexSelect(props){\n\n    return <Select\n        name=\"sex\"\n        placeholder=\"Sex\"\n        value={props.sex}\n        onChange={props.handleSexChange}\n        options={props.sexOptions}\n    />\n}\n\nexport default SexSelect","const measurementOptions = [\n    { key: 'height', value: 'height', text: 'Height (cm)', disabled: false },\n    { key: 'weight', value: 'weight', text: 'Weight (kg)', disabled: false },\n    { key: 'bmi', value: 'bmi', text: 'BMI (kg/m²)', disabled: false },\n    {\n      key: 'ofc',\n      value: 'ofc',\n      text: 'Head Circumference (cm)',\n      disabled: false,\n    },\n  ];\n\n  export default measurementOptions","const sexOptions = [\n    { key: 'male', value: 'male', text: 'Boy', disabled: false },\n    { key: 'female', value: 'female', text: 'Girl', disabled: false },\n];\n\nexport default sexOptions","const referenceOptions = [\n    { key: 'uk-who', value: 'uk-who', text: 'UK-WHO' },\n    { key: 'trisomy-21', value: 'trisomy-21', text: \"Down's Syndrome\" },\n    { key: 'turner', value: 'turner', text: \"Turner's syndrome\" },\n  ];\n\nexport default referenceOptions","import React from 'react';\n\nimport {\n  Container,\n  Segment,\n  Form,\n  Input,\n  Button,\n  Header,\n  Message,\n} from 'semantic-ui-react';\nimport GestationSelect from './subcomponents/GestationSelect';\nimport MeasurementMethodSelect from './subcomponents/MeasurementMethodSelect';\nimport ReferenceSelect from './subcomponents/ReferenceSelect';\nimport SexSelect from './subcomponents/SexChoice';\nimport measurementOptions from '../selectData/measurementOptions';\nimport sexOptions from '../selectData/sexOptions';\nimport referenceOptions from '../selectData/referenceOptions';\n\nconst ROBERT_WADLOW = 272; // interesting fact - Robert Wadlow (22/2/1918 – 15/7/1940) was the world's tallest man\nconst JON_BROWER_MINNOCH = 635; // interesting fact -  Jon Brower Minnoch (Born USA) was the world's heaviest man\nconst KHALID_BIN_MOHSEN_SHAARI = 204; // Khalid bin Mohsen Shaari (2/8/1991) from Saudi Arabia had the highest recorded BMI\n\nconst formatDate = (inputDate) => {\n  let date;\n  let month;\n  let day;\n  let year;\n  try {\n    inputDate.getTime();\n    date = new Date(inputDate);\n    month = '' + (date.getMonth() + 1);\n    day = '' + date.getDate();\n    year = date.getFullYear();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  } catch (error) {\n    throw new Error('Input date for formatDate not recognised');\n  }\n};\n\nconst parseDate = (inputDate) => {\n  try {\n    const dateArray = inputDate.split('-');\n    const finalArray = dateArray.map((element, index) => {\n      if (element !== '') {\n        const madeNumber = Number(element);\n        if (Number.isNaN(madeNumber)) {\n          throw new Error();\n        } else {\n          return index === 1 ? madeNumber - 1 : madeNumber;\n        }\n      } else {\n        throw new Error();\n      }\n    });\n    if (\n      finalArray.length !== 3 ||\n      finalArray[1] < 0 ||\n      finalArray[1] > 11 ||\n      finalArray[2] < 1 ||\n      finalArray[2] > 31\n    ) {\n      throw new Error();\n    }\n    const workingDate = new Date(...finalArray);\n    if (typeof workingDate.getTime() === 'number') {\n      return workingDate;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n};\n\nclass MeasurementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birth_date: formatDate(new Date()),\n      observation_date: formatDate(new Date()),\n      measurement: {\n        observation_value: '',\n        units: 'cm',\n      },\n      sex: 'male',\n      gestation_weeks: 40,\n      gestation_days: 0,\n      birth_date_error: '',\n      observation_date_error: '',\n      observation_value_error: 'empty',\n      form_valid: false,\n      measurementResult: [],\n      reference: 'uk-who',\n      sexOptions: sexOptions,\n      measurementOptions: measurementOptions,\n      referenceOptions: referenceOptions\n    };\n\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeMeasurementMethod =\n      this.handleChangeMeasurementMethod.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeGestation = this.handleChangeGestation.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n    this.handleObservationChange = this.handleObservationChange.bind(this);\n    this.handleChangeReference = this.handleChangeReference.bind(this);\n    this.handleResetCurrentGraph = this.handleResetCurrentGraph.bind(this);\n    this.handleUndoLast = this.handleUndoLast.bind(this);\n  }\n\n  handleChangeReference = ({value}) => {\n    //call back, returns new sex if already measurements charted with different sex\n    \n    const callbackReturn = this.props.handleChangeReference(value);\n    if (value === 'turner') {\n      this.disableMeasurement('weight', true);\n      this.disableMeasurement('ofc', true);\n      this.disableMeasurement('bmi', true);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = true;\n      this.setState({\n        sex: 'female',\n        observation_value_error: this.validateObservationValue(\n          'height',\n          this.state.measurement.observation_value\n        ),\n        reference: value,\n        sexOptions: newSexOptions,\n      });\n      this.props.handleChangeSex('female', true);\n      this.props.setMeasurementMethod('height');\n    } else {\n      this.disableMeasurement('weight', false);\n      this.disableMeasurement('ofc', false);\n      this.disableMeasurement('bmi', false);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = false;\n      this.setState({\n        observation_value_error: this.validateObservationValue(\n          this.props.measurementMethod,\n          this.state.measurement.observation_value\n        ),\n        sex: callbackReturn.newSex,\n        reference: value,\n        sexOptions: newSexOptions\n      });\n    }\n  };\n\n  disableMeasurement = (measurement_method, disable) => {\n    if (measurement_method === 'height') {\n      let options = this.state.measurementOptions;\n      options[0].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'weight') {\n      let options = this.state.measurementOptions;\n      options[1].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'ofc') {\n      let options = this.state.measurementOptions;\n      options[2].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'bmi') {\n      let options = this.state.measurementOptions;\n      options[3].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n  };\n\n  handleChangeDate(event) {\n    this.setState({ [event.target.name]: event.target.value });\n    const newDate = parseDate(event.target.value);\n    if (newDate) {\n      const observation_date_object =\n        event.target.name === 'birth_date'\n          ? parseDate(this.state.observation_date)\n          : newDate;\n      const birth_date_object =\n        event.target.name === 'birth_date'\n          ? newDate\n          : parseDate(this.state.birth_date);\n      const timeInterval =\n        observation_date_object.getTime() - birth_date_object.getTime();\n      if (timeInterval < 0) {\n        if (event.target.name === 'birth_date') {\n          this.setState({\n            birth_date_error:\n              'Date of birth cannot come after the date of measurement',\n          });\n        } else if (event.target.name === 'observation_date') {\n          this.setState({\n            observation_date_error:\n              'Date of measurement cannot come before the date of birth.',\n          });\n        }\n      } else if (timeInterval > 631139040000) {\n        this.setState({\n          [`${event.target.name}_error`]:\n            'No centile data exists over 20 years of age.',\n        });\n      } else {\n        this.setState({ birth_date_error: '', observation_date_error: '' });\n      }\n    } else {\n      this.setState({\n        [`${event.target.name}_error`]: 'Please enter a valid date.',\n      });\n    }\n  }\n\n  handleObservationChange = (observation, data) => {\n    // this is updating an observation value\n\n    const observation_value = data.value;\n    let { measurement, observation_value_error } = this.state;\n    measurement.observation_value = observation_value;\n    observation_value_error = this.validateObservationValue(\n      this.props.measurementMethod,\n      observation_value\n    );\n    this.setState({\n      measurement: measurement,\n      observation_value_error: observation_value_error,\n    });\n  };\n\n  validateObservationValue(measurement_method, observation_value) {\n    if (observation_value === '') {\n      return 'empty';\n    }\n    if (Number.isNaN(Number(observation_value))) {\n      return 'Please enter a valid number.';\n    }\n    if (measurement_method === 'height') {\n      if (observation_value < 20) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > ROBERT_WADLOW) {\n        return 'The ' + measurement_method + ' you entered is too tall.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'weight') {\n      if (observation_value < 0.01) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > JON_BROWER_MINNOCH) {\n        return 'The ' + measurement_method + ' you entered is too heavy.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'bmi') {\n      if (observation_value < 5) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > KHALID_BIN_MOHSEN_SHAARI) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'ofc') {\n      if (observation_value < 25) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > 70) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n  }\n\n  formIsValid() {\n    if (\n      this.state.reference === 'turner' &&\n      this.props.measurementMethod !== 'height'\n    ) {\n      return false;\n    }\n    if (\n      this.state.birth_date_error === '' &&\n      this.state.observation_date_error === '' &&\n      this.state.observation_value_error === ''\n    ) {\n      return true;\n    }\n  }\n\n  handleSubmit(event) {\n    // passes the form data back to the parent (measurement segment)\n    const measurementArray = [];\n    const formData = {\n      birth_date: this.state.birth_date,\n      observation_date: this.state.observation_date,\n      measurement_method: this.props.measurementMethod,\n      observation_value: this.state.measurement.observation_value,\n      gestation_weeks: this.state.gestation_weeks,\n      gestation_days: this.state.gestation_days,\n      sex: this.state.sex,\n    };\n    measurementArray.push(formData);\n    this.props.measurementResult(measurementArray);\n  }\n\n  handleChangeMeasurementMethod(event, data) {\n    let measurement = { ...this.state.measurement };\n    if (data.value !== this.props.measurementMethod) {\n      measurement.units = this.changeUnits(data.value);\n      this.props.setMeasurementMethod(data.value);\n      this.setState({\n        measurement: measurement,\n        observation_value_error: this.validateObservationValue(\n          data.value,\n          measurement.observation_value\n        ),\n      });\n      if (\n        this.state.reference === 'turner' &&\n        this.props.measurementMethod !== 'height'\n      ) {\n        this.disableMeasurement('weight', true);\n        this.disableMeasurement('bmi', true);\n        this.disableMeasurement('ofc', true);\n      } else {\n        this.disableMeasurement('weight', false);\n        this.disableMeasurement('bmi', false);\n        this.disableMeasurement('ofc', false);\n      }\n    }\n  }\n\n  handleChangeGestation(event, data) {\n    const { name, value } = data;\n    if (name === 'gestation_weeks') {\n      this.setState({ gestation_weeks: value });\n      if (value === 42) {\n        this.setState({ gestation_days: 0 });\n      }\n    } else if (name === 'gestation_days') {\n      if (this.state.gestation_weeks === 42) {\n        this.setState({ gestation_days: 0 });\n      } else {\n        this.setState({ gestation_days: value });\n      }\n    }\n  }\n\n  handleChangeSex(event, data) {\n    const success = this.props.handleChangeSex(data.value);\n    if (success) {\n      this.setState({ sex: data.value });\n    }\n  }\n\n  changeUnits(measurement_method) {\n    if (measurement_method === 'height') {\n      return 'cm';\n    }\n    if (measurement_method === 'weight') {\n      return 'kg';\n    }\n    if (measurement_method === 'bmi') {\n      return 'kg/m²';\n    }\n    if (measurement_method === 'ofc') {\n      return 'cm';\n    }\n  }\n\n  handleResetCurrentGraph() {\n    this.props.setCommands((old) => {\n      return { ...old, resetCurrent: true };\n    });\n  }\n\n  handleUndoLast() {\n    this.props.setCommands((old) => {\n      return { ...old, undoLast: true };\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.form_valid !== this.formIsValid()) {\n      this.setState({ form_valid: this.formIsValid() });\n    }\n    if (this.props.commands.clearMeasurement) {\n      const newMeasurement = { ...this.state.measurement };\n      newMeasurement.observation_value = '';\n      this.setState({\n        measurement: newMeasurement,\n        observation_value_error: 'empty',\n        form_valid: false,\n      });\n      this.props.setCommands((old) => {\n        return { ...old, clearMeasurement: false };\n      });\n    }\n    if (this.props.commands.changeSex) {\n      this.setState({ sex: this.state.sex === 'male' ? 'female' : 'male' });\n      this.props.setCommands((old) => {\n        return { ...old, changeSex: false };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment textAlign={'center'}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n              <Header as=\"h5\" textAlign=\"left\">\n                Reference\n              </Header>\n              {/* <Select\n                name=\"reference\"\n                value={this.state.reference}\n                options={references}\n                onChange={this.handleChangeReference}\n                placeholder=\"Select reference\"\n              /> */}\n              <ReferenceSelect \n                reference={this.state.reference}\n                handleChangeReference={this.handleChangeReference}\n                referenceOptions={this.state.referenceOptions}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Header as=\"h5\" textAlign=\"left\">\n                Dates\n              </Header>\n              <Input\n                label=\"Birth Date\"\n                type=\"date\"\n                name=\"birth_date\"\n                value={this.state.birth_date}\n                placeholder=\"Date of Birth\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Input\n                label=\"Measurement Date\"\n                type=\"date\"\n                name=\"observation_date\"\n                value={this.state.observation_date}\n                placeholder=\"Date of Measurement\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            {/* <Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Measurements\n            </Header>\n\n            <Form.Group>\n              <Form.Field required>\n                {/* <Select\n                  value={this.props.measurementMethod}\n                  name=\"measurement_method\"\n                  placeholder=\"Measurement Type\"\n                  options={measurementOptions}\n                  onChange={this.handleChangeMeasurementMethod}\n                /> */}\n                <MeasurementMethodSelect \n                  measurementMethod={this.props.measurementMethod}\n                  handleChangeMeasurementMethod={this.handleChangeMeasurementMethod}\n                  measurementOptions={this.state.measurementOptions}\n                />\n              </Form.Field>\n              <Form.Field required width={8}>\n                <Input\n                  type=\"decimal\"\n                  name=\"observation_value\"\n                  placeholder=\"Measurement\"\n                  value={this.state.measurement.observation_value}\n                  label={{\n                    content: this.state.measurement.units.toString(),\n                    basic: true,\n                    color: 'blue',\n                  }}\n                  labelPosition=\"right\"\n                  onChange={this.handleObservationChange}\n                />\n              </Form.Field>\n            </Form.Group>\n            {this.state.observation_value_error &&\n              this.state.observation_value_error !== 'empty' && (\n                <Message color=\"red\">\n                  {this.state.observation_value_error}\n                </Message>\n              )}\n            {this.state.observation_date_error ? (\n              <Message color=\"red\">{this.state.observation_date_error}</Message>\n            ) : null}\n            {this.state.birth_date_error ? (\n              <Message color=\"red\">{this.state.birth_date_error}</Message>\n            ) : null}\n            {/* </Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Sex\n            </Header>\n            <Form.Field required>\n              {/* <Select\n                name=\"sex\"\n                placeholder=\"Sex\"\n                value={this.state.sex}\n                onChange={this.handleChangeSex}\n                options={this.state.sexOptions}\n              /> */}\n              <SexSelect \n                sex={this.state.sex}\n                handleChangeSex={this.handleChangeSex}\n                sexOptions={this.state.sexOptions}\n              />\n            </Form.Field>\n\n            <Form.Group>\n              <Form.Field>\n                <Header as=\"h5\" textAlign=\"left\">\n                  Gestation\n                </Header>\n                <GestationSelect \n                  name=\"gestation_select\"\n                  weeks={this.state.gestation_weeks}\n                  days={this.state.gestation_days}\n                  handleChangeGestation={this.handleChangeGestation}\n                />\n                {/* <span>\n                  <Select\n                    compact\n                    name=\"gestation_weeks\"\n                    value={this.state.gestation_weeks}\n                    options={gestationWeeksOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp;+\n                  <Select\n                    compact\n                    name=\"gestation_days\"\n                    value={this.state.gestation_days}\n                    options={gestationDaysOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp; weeks\n                </span> */}\n              </Form.Field>\n              {/* </Segment> */}\n            </Form.Group>\n\n            <Form.Field>\n              <Button\n                content=\"Calculate Centiles and Add To Chart\"\n                type=\"submit\"\n                fluid\n                disabled={!this.state.form_valid}\n                color=\"pink\"\n                icon=\"line graph\"\n                labelPosition=\"right\"\n              />\n            </Form.Field>\n          </Form>\n          <Segment>\n            <Button\n              content=\"Reset Chart\"\n              icon=\"power off\"\n              onClick={this.handleResetCurrentGraph}\n            />\n            <Button\n              content=\"Remove Last\"\n              icon=\"undo\"\n              onClick={this.handleUndoLast}\n            />\n          </Segment>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default MeasurementForm;\n","export class ChartTheme{\n    constructor(chart, gridlines, axes, centiles, measurements){\n        this.chart = chart\n        this.gridlines = gridlines\n        this.axes = axes\n        this.centiles = centiles\n        this.measurements = measurements\n    }\n    get chart(){\n        return this._chart\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get axes(){\n        return this._axes\n    }\n    get centiles(){\n        return this._centiles\n    }\n    get measurements(){\n        return this._measurements\n    }\n\n    set chart(val){\n        this._chart=val\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set axes(val){\n        this._axes=val\n    }\n    set centiles(val){\n        this._centiles=val\n    }\n    set measurements(val){\n        this._measurements=val\n    }\n}\n\nexport class ChartObject{\n    constructor(backgroundColour, width, height, padding, titleStyle, subTitleStyle, tooltipBackgroundColour, tooltipStroke, tooltipTextStyle, termFill, termStroke, infoBoxFill, infoBoxStroke, infoBoxTextStyle, toggleButtonInactiveColour, toggleButtonActiveColour, toggleButtonTextColour){\n        this.backgroundColour = backgroundColour\n        this.width = width\n        this.height = height\n        this.padding = padding\n        this.titleStyle=titleStyle\n        this.subTitleStyle=subTitleStyle\n        this.tooltipBackgroundColour = tooltipBackgroundColour\n        this.tooltipStroke = tooltipStroke\n        this.tooltipTextStyle = tooltipTextStyle\n        this.termFill=termFill\n        this.termStroke=termStroke\n        this.infoBoxFill=infoBoxFill\n        this.infoBoxStroke=infoBoxStroke\n        this.infoBoxTextStyle=infoBoxTextStyle\n        this.toggleButtonInactiveColour=toggleButtonInactiveColour\n        this.toggleButtonActiveColour=toggleButtonActiveColour\n        this.toggleButtonTextColour=toggleButtonTextColour\n    }\n    get backgroundColour(){\n        return this._backgroundColour\n    }\n    get width(){\n        return this._width\n    }\n    get height(){\n        return this._height\n    }\n    get padding(){\n        return this._padding\n    }\n    get titleStyle(){\n        return this._titleStyle\n    }\n    get subTitleStyle(){\n        return this._subTitleStyle\n    }\n    get tooltipBackgroundColour(){\n        return this._tooltipBackgroundColour\n    }\n    get tooltipStroke(){\n        return this._tooltipStroke\n    }\n    get tooltipTextStyle(){\n        return this._tooltipTextStyle\n    }\n    get termFill(){\n        return this._termFill\n    }\n    get termStroke(){\n        return this._termStroke\n    }\n    get infoBoxFill(){\n        return this._infoBoxFill\n    }\n    get infoBoxStroke(){\n        return this._infoBoxStroke\n    }\n    get infoBoxTextStyle(){\n        return this._infoBoxTextStyle\n    }\n    get toggleButtonActiveColour(){\n        return this._toggleButtonActiveColour\n    }\n    get toggleButtonInactiveColour(){\n        return this._toggleButtonInactiveColour\n    }\n    get toggleButtonTextColour(){\n        return this._toggleButtonTextColour\n    }\n    set termFill(val){\n        this._termFill=val\n    }\n    set termStroke(val){\n        this._termStroke=val\n    }\n    set infoBoxFill(val){\n        this._infoBoxFill=val\n    }\n    set infoBoxStroke(val){\n        this._infoBoxStroke=val\n    }\n    set infoBoxTextStyle(val){\n        this._infoBoxTextStyle=val\n    }\n    set backgroundColour(val){\n        this._backgroundColour=val\n    }\n    set width(val){\n        this._width=val\n    }\n    set height(val){\n        this._height=val\n    }\n    set padding(val){\n        this._padding=val\n    }\n    set tooltipBackgroundColour(val){\n        this._tooltipBackgroundColour=val\n    }set tooltipStroke(val){\n        this._tooltipStroke=val\n    }\n    set tooltipTextStyle(val){\n        this._tooltipTextStyle=val\n    }\n    set titleStyle(val){\n        this._titleStyle=val\n    }\n    set subTitleStyle(val){\n        this._subTitleStyle=val\n    }\n    set toggleButtonTextColour(val){\n        this._toggleButtonTextColour=val\n    }\n    set toggleButtonInactiveColour(val){\n        this._toggleButtonInactiveColour=val\n    }\n    set toggleButtonActiveColour(val){\n        this._toggleButtonActiveColour=val\n    }\n}\n\nexport class PaddingObject{\n    constructor(left, right, top, bottom){\n        this.left = left\n        this.right=right\n        this.top=top\n        this.bottom=bottom\n    }\n    get left(){\n        return this._left\n    }\n    get right(){\n        return this._right\n    }\n    get top(){\n        return this._top\n    }\n    get bottom(){\n        return this._bottom\n    }\n\n    set left(val){\n        this._left=val\n    }\n    set right(val){\n        this._right=val\n    }\n    set top(val){\n        this._top=val\n    }\n    set bottom(val){\n        this._bottom=val\n    }\n}\n\nexport class TextStyleObject{\n    constructor(name, colour, size, weight){\n        this.name=name\n        this.colour=colour\n        this.size=size\n        this.weight=weight\n    }\n    get name(){\n        return this._name\n    }\n    get colour(){\n        return this._colour\n    }\n    get size(){\n        return this._size\n    }\n    get style(){\n        return this._style\n    }\n    set name(val){\n        this._name=val\n    }\n    set colour(val){\n        this._colour=val\n    }\n    set size(val){\n        this._size=val\n    }\n    set weight(val){\n        this._weight=val\n    }\n}\n\nexport class GridlineObject{\n    constructor(gridlines, stroke, strokeWidth, dashed){\n        this.gridlines=gridlines\n        this.stroke=stroke\n        this.strokeWidth = strokeWidth\n        this.dashed=dashed\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get stroke(){\n        return this._stroke\n    }\n    get strokeWidth(){\n        return this._strokeWidth\n    }\n    get dashed(){\n        return this._dashed\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set stroke(val){\n        this._stroke=val\n    }\n    set strokeWidth(val){\n        this._strokeWidth=val\n    }\n    set dashed(val){\n        this._dashed=val\n    }\n}\n\nexport class AxesObject{\n    constructor(axisStroke, axisLabelTextStyle, tickLabelStyle){\n        this.axisStroke=axisStroke\n        this.axisLabelTextStyle=axisLabelTextStyle\n        this.tickLabelTextStyle=tickLabelStyle\n    }\n    get axisStroke(){\n        return this._axisStroke\n    }\n    get axisLabelTextStyle(){\n        return this._axisLabelTextStyle\n    }\n    get tickLabelTextStyle(){\n        return this._tickLabelTexSize\n    }\n    set axisStroke(val){\n        this._axisStroke=val\n    }\n    set axisLabelTextStyle(val){\n        this._axisLabelTextStyle=val\n    }\n    set tickLabelTextStyle(val){\n        this._tickLabelTexSize=val\n    }\n}\nexport class CentilesObject{\n    constructor(centileStroke, centileStrokeWidth, delayedPubertyAreaFill){\n        this.centileStroke=centileStroke\n        this.centileStrokeWidth=centileStrokeWidth\n        this.delayedPubertyAreaFill=delayedPubertyAreaFill\n    }\n    get centileStroke(){\n        return this._centileStroke\n    }\n    get centileStrokeWidth(){\n        return this._centileStrokeWidth\n    }\n    get delayedPubertyAreaFill(){\n        return this._delayedPubertyAreaFill\n    }\n    set centileStroke(val){\n        this._centileStroke=val\n    }\n    set centileStrokeWidth(val){\n        this._centileStrokeWidth=val\n    }\n    set delayedPubertyAreaFill(val){\n        this._delayedPubertyAreaFill=val\n    }\n}\n\nexport class MeasurementsObject{\n    constructor(measurementFill, measurementStroke, measurementSize){\n        this.measurementFill=measurementFill        \n        this.measurementSize=measurementSize\n           }\n    get measurementFill(){\n        return this._measurementFill\n    }\n    get measurementStroke(){\n        return this._measurementStroke\n    }\n    get measurementSize(){\n        return this._measurementSize\n    }\n    set measurementFill(val){\n        this._measurementFill=val\n    }\n    set measurementStroke(val){\n        this._measurementStroke=val\n    }\n    set measurementSize(val){\n        this._measurementSize=val\n    }\n}\n\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 1\n\nData:  #7159aa - purple\nArea:  #c6bddd - purple (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#7159aa';\nconst pubertyFill = '#c6bddd';\nconst tooltipBackGroundColour = '#fdc300';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme1 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme1;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 2\n\nData:  #ff8000 - orange\nArea:  #ffc080 - orange (tint 40%)\ntooltip: #3366cc - strong blue\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#ff8000';\nconst pubertyFill = '#ffc080';\nconst tooltipBackGroundColour = '#3366cc';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#FFFFFF',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme2 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme2;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 3\n\nData:   #e60700 - red\nArea:   #f59c99 - red (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#e60700';\nconst pubertyFill = '#f59c99';\nconst tooltipBackGroundColour = '#fdc300';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\nconst axisLabelColour = '#000000';\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\nconst axisLabelSize = 10;\nconst tickLabelSize = 8;\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  axisLabelSize,\n  'normal'\n);\nconst tickLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  tickLabelSize,\n  'normal'\n);\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme3 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme3;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 4 - monochrome\n\nData:   #000000 - black\nArea:   #b3b3b3 - midgrey\ntooltip: #FFFFF - white\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n \n*/\n\nconst centileColour = '#000000';\nconst pubertyFill = '#b3b3b3';\nconst tooltipBackgroundColour = '#b3b3b3';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeMonochrome = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\nexport default RCPCHThemeMonochrome;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nRCPCH traditional: boy\n\n// boy 0 163 222 - #00a3de\n\nData:   #00a3de - blue\nArea:   #66c8eb - blue tint 49%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#00a3de';\nconst pubertyFill = '#66c8eb';\nconst tooltipBackgroundColour = '#66c8eb';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalBoy = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalBoy;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTraditional: girl\n\n// girl 201 85 157 - #c9559d\n\nData:   #c9559d - pink\nArea:   df99c4 - pink tint 40%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#c9559d';\nconst pubertyFill = '#df99c4';\nconst tooltipBackgroundColour = '#df99c4';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalGirl = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalGirl;\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nimport { RCPCHChart } from '@rcpch/digital-growth-charts-react-component-library';\n\nfunction ChartData(props) {\n  const isLoading = props.isLoading;\n  const titles = setTitle(props);\n\n  return (\n    <div>\n      <Dimmer active={isLoading}>\n        <Loader>Fetching Data</Loader>\n      </Dimmer>\n      <RCPCHChart\n        reference={props.reference}\n        measurementMethod={props.measurementMethod}\n        sex={props.sex}\n        title={titles.title}\n        subtitle={titles.subtitle}\n        measurementsArray={props.measurementsArray} // this is the plottable child data\n        chartStyle={props.chartStyle}\n        measurementStyle={props.measurementStyle}\n        centileStyle={props.centileStyle}\n        gridlineStyle={props.gridlineStyle}\n        axisStyle={props.axisStyle}\n        enableZoom\n      />\n    </div>\n  );\n}\n\nfunction setTitle(props) {\n  // set the title of the chart\n  let title = '';\n  let subTitle = '';\n  if (props.reference === 'uk-who') {\n    title = 'UK-WHO';\n  } else if (props.reference === 'turner') {\n    title = \"Turner's Syndrome\";\n  } else if (props.reference === 'trisomy-21') {\n    title = \"Trisomy 21 (Down's Syndrome)\";\n  }\n\n  let sexText = '';\n  let measurementText = '';\n  if (props.sex === 'male') {\n    sexText = 'Boys';\n  } else {\n    sexText = 'Girls';\n  }\n\n  switch (props.measurementMethod) {\n    case 'height':\n      measurementText = 'Height / Length';\n      break;\n    case 'weight':\n      measurementText = 'Weight';\n      break;\n    case 'bmi':\n      measurementText = 'Body Mass Index';\n      break;\n    case 'ofc':\n      measurementText = 'Head Circumference';\n      break;\n    default:\n      measurementText = '';\n      break;\n  }\n\n  subTitle = measurementText + ' - ' + sexText;\n\n  return { subtitle: subTitle, title: title };\n}\n\nexport default ChartData;\n","const deepCopyArray = (arr) => {\n  let copy = [];\n  arr.forEach((elem) => {\n    if (Array.isArray(elem)) {\n      copy.push(deepCopyArray(elem));\n    } else {\n      if (typeof elem === 'object' && elem !== null) {\n        copy.push(deepCopyObject(elem));\n      } else {\n        copy.push(elem);\n      }\n    }\n  });\n  return copy;\n};\n\nconst deepCopyObject = (obj) => {\n  let tempObj = {};\n  for (let [key, value] of Object.entries(obj)) {\n    if (Array.isArray(value)) {\n      tempObj[key] = deepCopyArray(value);\n    } else {\n      if (typeof value === 'object' && value !== null) {\n        tempObj[key] = deepCopyObject(value);\n      } else {\n        tempObj[key] = value;\n      }\n    }\n  }\n  return tempObj;\n};\n\nconst deepCopy = (input) => {\n  if (Array.isArray(input)) {\n    return deepCopyArray(input);\n  } else if (typeof input === 'object' && input !== null) {\n    return deepCopyObject(input);\n  } else {\n    return input;\n  }\n};\n\nexport default deepCopy;\n","import React from 'react';\nimport {\n  Segment,\n  Message,\n  Button,\n  Table,\n  List,\n  Modal,\n} from 'semantic-ui-react';\n\nconst units = (measurementMethod) => {\n  if (measurementMethod === 'height') {\n    return 'cm';\n  }\n  if (measurementMethod === 'weight') {\n    return 'kg';\n  }\n  if (measurementMethod === 'bmi') {\n    return 'kg/m²';\n  }\n  if (measurementMethod === 'ofc') {\n    return 'cm';\n  }\n};\n\nexport const Acknowledgements = () => {\n  // list={[\"Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross sectional stature and weight reference curves for the UK, 1990. Arch Dis Child 1995; 73:17-24.\", \"<a href='www.who.int/childgrowth/en'>www.who.int/childgrowth/en</a>\", \"For further relevant references see fact sheet downloadable from www.growthcharts.RCPCH.ac.uk\"]}\n  return (\n    <Message>\n      <Message.Header>References</Message.Header>\n      <List>\n        <List.Item>\n          Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross\n          sectional stature and weight reference curves for the UK, 1990. Arch\n          Dis Child 1995; 73:17-24.\n        </List.Item>\n        <List.Item>\n          <a href=\"www.who.int/childgrowth/en\">www.who.int/childgrowth/en</a>\n        </List.Item>\n        <List.Item>\n          For further relevant references see fact sheet downloadable from{' '}\n          <a href=\"www.growthcharts.RCPCH.ac.uk\">\n            www.growthcharts.RCPCH.ac.uk\n          </a>\n        </List.Item>\n      </List>\n    </Message>\n  );\n};\n\nexport const TableBody = (props) => {\n  const measurement = props.measurement;\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>Ages</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.chronological_calendar_age}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.corrected_calendar_age}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Measurement</Table.Cell>\n        <Table.Cell>\n          {measurement.child_observation_value.observation_value}{' '}\n          {units(measurement.child_observation_value.measurement_method)}\n        </Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>SDS</Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.corrected_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.chronological_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Centiles</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.corrected_centile}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.chronological_centile}\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nexport const ResultsSegment = ({ apiResult, reference }) => (\n  <Segment>\n    <Table basic=\"very\" celled collapsing compact>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell></Table.HeaderCell>\n          <Table.HeaderCell>Corrected Results</Table.HeaderCell>\n          <Table.HeaderCell>Chronological Results</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {apiResult[reference].height.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Heights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].height.length > 0 &&\n          apiResult[reference].height.map((measurement, index) => {\n            return <TableBody measurement={measurement} key={index} />;\n          })}\n        {apiResult[reference].weight.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Weights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].weight.length > 0 &&\n          apiResult[reference].weight.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].bmi.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>BMIs</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].bmi.length > 0 &&\n          apiResult.bmi.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].ofc.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Head Circumferences</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].ofc.length > 0 &&\n          apiResult[reference].ofc.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n\nexport const ErrorModal = ({\n  title,\n  body,\n  handleClose,\n  visible,\n  handleCancel,\n}) => {\n  const showCancel = handleCancel ? true : false;\n  return (\n    <Modal title={title} open={visible} size=\"small\" closeOnEscape={true}>\n      <Modal.Header>{title}</Modal.Header>\n      <Modal.Content>{body}</Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={handleClose}>\n          OK\n        </Button>\n        {showCancel && <Button onClick={handleCancel}>Cancel</Button>}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport {\n    Select,\n  } from 'semantic-ui-react';\n\n  \nfunction IntervalTypeSelect(props){\n\n    return <Select\n        name=\"interval\"\n        placeholder=\"days\"\n        value={props.intervalType}\n        onChange={(e, val)=>props.handleChangeIntervalType(val)}\n        options={props.intervalTypeOptions}\n    />\n}\n\nexport default IntervalTypeSelect","import React from 'react';\n\nconst Slider = (props) => {\n    return <div style={{textAlign: 'left'}}>\n        <label style={{padding: \"10px\"}}>{props.min}</label>\n        \n        <input \n            type=\"range\" \n            min={props.min} \n            max={props.max} \n            value={props.value}\n            step={props.step}\n            className=\"slider\" \n            id=\"myRange\"\n            onChange={(e)=> props.onChange(e.target.value)}\n        />\n        \n        <label style={{padding: \"10px\"}}>{props.max}</label>\n\n        <h5 style={{display:'inline'}}>{props.label}: {props.value} SDS</h5>\n    </div>\n}\n\nexport default Slider","const intervalTypeOptions = [\n    { key: 'd', value: 'days', text: 'Days', disabled: false },\n    { key: 'w', value: 'weeks', text: 'Weeks', disabled: false },\n    { key: 'm', value: 'months', text: 'Months', disabled: false },\n    { key: 'y', value: 'years', text: 'Years', disabled: false },\n];\nexport default intervalTypeOptions","import React, { useState } from 'react';\n\nimport {\n  Form,\n  Input,\n  Header,\n  Checkbox,\n  Button\n} from 'semantic-ui-react';\n\nimport GestationSelect from './subcomponents/GestationSelect';\nimport IntervalTypeSelect from './subcomponents/IntervalSelect';\nimport MeasurementMethodSelect from './subcomponents/MeasurementMethodSelect';\nimport ReferenceSelect from './subcomponents/ReferenceSelect';\nimport SexSelect from './subcomponents/SexChoice';\nimport Slider from './subcomponents/Slider';\n\nimport referenceOptions from '../selectData/referenceOptions'\nimport sexOptions from '../selectData/sexOptions'\nimport measurementOptions from '../selectData/measurementOptions'\nimport intervalOptions from '../selectData/intervalOptions'\n\nconst FictionalChildForm = (props) => {\n\n    const [measurementMethod, setMeasurementMethod] = useState(\"height\")\n    const [sex, setSex] = useState(\"male\")\n    const [weeks, setWeeks] = useState(40)\n    const [days, setDays] = useState(0)\n    const [startingAge, setStartingAge] = useState(1.0)\n    const [endingAge, setEndingAge] = useState(20.0)\n    const [intervalType, setIntervalType] = useState(\"days\")\n    const [interval, setInterval] = useState(30)\n    const [driftFlag, setDriftFlag] = useState(false)\n    const [drift, setDrift] = useState(0.01)\n    const [noiseFlag, setNoiseFlag] =useState(false)\n    const [noise, setNoise] = useState(0.1)\n    const [startSDS, setStartSDS] = useState(0)\n    const [reference, setReference] = useState(\"uk-who\")\n    // const [formValid, setFormValid] = useState(false)\n\n    const handleSubmit = ({target}) => {\n        const formData = Object.fromEntries(new FormData(target));\n        const values = {\n            \"sex\": sex,\n            \"start_chronological_age\": formData.start_age,\n            \"end_age\": formData.end_age,\n            \"gestation_weeks\":weeks,\n            \"gestation_days\":days,\n            \"measurement_interval_type\" : intervalType,\n            \"measurement_interval_number\":formData.interval_value,\n            \"start_sds\" : 0.2,\n            \"noise\" : noiseFlag,\n            \"drift_range\" : drift,\n            \"drift\" : driftFlag,\n            \"noise_range\" : noise,\n            \"reference\" : reference\n        }\n        props.fictionalFormDataSubmit(values);\n    }\n    \n    const handleChangeReference = (val) => {\n        setReference(val.value)\n        if (val.value===\"turner\"){\n            measurementOptions[1].disabled = true\n            measurementOptions[2].disabled = true\n            measurementOptions[3].disabled = true\n            sexOptions[0].disabled=true\n            setMeasurementMethod(\"height\")\n            setSex(\"female\")\n            \n        } else {\n            measurementOptions[1].disabled = false\n            measurementOptions[2].disabled = false\n            measurementOptions[3].disabled = false\n            sexOptions[0].disabled=false\n        }\n    }\n    \n    const handleChangeMeasurementMethod = (val) => {\n        setMeasurementMethod(val)\n    }\n\n    const handleSexChange = (val) => {\n        setSex(val.value)\n    }\n\n    const handleGestationChange = ({name, value}) => {\n        if (name === 'gestation_weeks') {\n            setWeeks(value);\n            if (value === 42) {\n                setDays(0)\n            }\n        } else if (name === 'gestation_days') {\n            if (weeks === 42) {\n                setDays(0)\n            } else {\n                setDays(value)\n            }\n        }\n    }\n\n    const handleObservationChange = ({name, val}) => {\n        if (name === \"start_age\") {\n            setStartingAge(val)\n        }\n        if (name === \"end_age\") {\n            setEndingAge(val)\n        }\n        if (name === \"interval_value\") {\n            setInterval(val)\n        }\n        if (name === \"startSDS\") {\n            setStartSDS(val)\n        }\n    }\n\n    const handleChangeIntervalType = ({value}) => {\n        setIntervalType(value)\n    }\n\n    const handleSDSDriftChange = (e, {checked}) => {\n        setDriftFlag(checked)\n    }\n\n    const handleDriftChange = (val) => {\n        setDrift(val)\n    }\n\n    const handleNoiseChange = (val) => {\n        setNoise(val)\n    }\n\n    const  handleNoiseFlag = (e, {checked}) => {\n        setNoiseFlag(checked)\n    }\n\n\n    return (\n      <Form onSubmit={handleSubmit}>\n        <Form.Field>\n            <ReferenceSelect \n                handleChangeReference={handleChangeReference}\n                reference={reference}\n                referenceOptions={referenceOptions}\n            />\n        </Form.Field>\n        <Form.Field>\n            <MeasurementMethodSelect \n                handleChangeMeasurementMethod={handleChangeMeasurementMethod}\n                measurementMethod={measurementMethod}\n                measurementOptions={measurementOptions}\n            />\n        </Form.Field>\n        <Form.Field>\n            <SexSelect \n                handleSexChange={handleSexChange}\n                sex={sex}\n                sexOptions={sexOptions}\n            />\n        </Form.Field>\n        <Form.Field>\n            <GestationSelect \n                handleGestationChange={handleGestationChange}\n                weeks={weeks}\n                days={days}\n            />\n        </Form.Field>\n        <Header as=\"h5\" textAlign={\"left\"}>\n            Ages\n        </Header>\n        <Form.Field>\n            <Input\n                type=\"decimal\"\n                name=\"start_age\"\n                placeholder=\"Starting Decimal Age\"\n                value={startingAge}\n                label={{\n                    content: 'ys',\n                    basic: true,\n                    color: 'blue',\n                }}\n                labelPosition=\"right\"\n                onChange={handleObservationChange}\n            ></Input>\n        </Form.Field>\n        <Form.Field>\n            <Input\n                type=\"decimal\"\n                name=\"end_age\"\n                placeholder=\"Ending Decimal Age\"\n                value={endingAge}\n                label={{\n                    content: \"ys\",\n                    basic: true,\n                    color: 'blue',\n                }}\n                labelPosition=\"right\"\n                onChange={handleObservationChange}\n            ></Input>\n        </Form.Field>\n        <Header as=\"h5\" textAlign={\"left\"}>\n            Intervals\n        </Header>\n        <Form.Field>\n                <IntervalTypeSelect \n                    handleChangeIntervalType={handleChangeIntervalType}\n                    intervalType={intervalType}\n                    intervalTypeOptions={intervalOptions}\n                />\n        </Form.Field>\n        <Form.Field>\n            <Input\n                type=\"decimal\"\n                name=\"interval_value\"\n                placeholder=\"Interval amount\"\n                value={interval}\n                labelPosition=\"right\"\n                onChange={handleObservationChange}\n            >\n            </Input>\n        </Form.Field>\n        <Header as=\"h5\" textAlign={\"left\"}>\n            SDS\n        </Header>\n        <Form.Field>\n            <Form.Input\n                label=\"Starting SDS\"\n                type=\"decimal\"\n                name=\"startSDS\"\n                placeholder=\"SDS\"\n                value={startSDS}\n                labelPosition=\"left\"\n                onChange={handleObservationChange}\n            >\n            </Form.Input>\n        </Form.Field>\n\n        <Form.Field width={14} style={{textAlign:'left'}}>\n            <Checkbox\n                toggle\n                label=\"Add SDS drift?\"\n                onChange={handleSDSDriftChange}\n            />\n        </Form.Field>\n        {\n            driftFlag && \n            \n            <Form.Field width={14}>\n                <Slider\n                    min={-2}\n                    max={2}\n                    value= {drift}\n                    step={0.01}\n                    onChange={handleDriftChange}\n                    label=\"Drift\"\n                />\n            </Form.Field>\n        }\n        {/* </Form.Group> */}\n\n        <Form.Field width={14} style={{textAlign:'left'}}>\n            <Checkbox \n                toggle\n                label=\"Simulate Measurement Error?\"\n                onChange={handleNoiseFlag}\n            />\n        </Form.Field>\n        {\n            noiseFlag && \n            <Form.Field width={14}>\n                <Slider\n                    min={0}\n                    max={0.05}\n                    value= {noise}\n                    step={0.01}\n                    onChange={handleNoiseChange}\n                    label=\"SDS Error\"\n                />\n            </Form.Field>\n        }\n        <Form.Field>\n            <Button\n                content=\"Generate Growth Data\"\n                type=\"submit\"\n                fluid\n                // disabled={!formValid}\n                color=\"pink\"\n                icon=\"line graph\"\n                labelPosition=\"right\"\n              />\n        </Form.Field>\n      </Form>\n    )\n  }\n\nexport default FictionalChildForm","// React\nimport React, { useState, useEffect, useCallback } from 'react';\n\n//themes\nimport RCPCHTheme1 from '../components/chartThemes/rcpchTheme1';\nimport RCPCHTheme2 from '../components/chartThemes/rcpchTheme2';\nimport RCPCHTheme3 from '../components/chartThemes/rcpchTheme3';\nimport RCPCHThemeMonochrome from '../components/chartThemes/rcpchThemeMonochrome';\nimport RCPCHThemeTraditionalBoy from '../components/chartThemes/RCPCHThemeTraditionalBoy';\nimport RCPCHThemeTraditionalGirl from '../components/chartThemes/RCPCHThemeTraditionalGirl';\n\n// Semantic UI React\nimport {\n  Grid,\n  Segment,\n  Tab,\n  Dropdown,\n  Button,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nimport ChartData from '../api/Chart';\nimport MeasurementForm from '../components/MeasurementForm';\nimport deepCopy from '../functions/deepCopy';\nimport { ResultsSegment, ErrorModal } from './SubComponents';\nimport '../index.css';\nimport FictionalChildForm from './FictionalChildForm';\n\nfunction MeasurementSegment() {\n  const defaultTheme = RCPCHThemeMonochrome;\n\n  const [chartStyle, setChartSyle] = useState(defaultTheme.chart);\n  const [axisStyle, setAxisStyle] = useState(defaultTheme.axes);\n  const [centileStyle, setCentileStyle] = useState(defaultTheme.centiles);\n  const [measurementStyle, setMeasurementStyle] = useState(\n    defaultTheme.measurements\n  );\n\n  const [theme, setTheme] = useState({\n    value: 'tanner4',\n    text: 'Monochrome',\n  });\n\n  const [flip, setFlip] = useState(false); // flag to determine if results or chart showing\n  const [disabled, setDisabled] = useState({\n    height: false,\n    weight: false,\n    bmi: false,\n    ofc: false,\n  });\n\n  const [measurementMethod, setMeasurementMethod] = useState('height');\n  const [reference, setReference] = useState('uk-who');\n  const [sex, setSex] = useState('male');\n  const [measurements, setMeasurements] = useState(InitialMeasurementState());\n  const [apiResult, setAPIResult] = useState(InitialMeasurementState());\n  const [errorModal, setErrorModal] = useState(InitalErrorModalState());\n  const [isLoading, setIsLoading] = useState(false);\n  const [commands, setCommands] = useState({\n    clearMeasurement: false,\n    resetCurrent: false,\n    undoLast: false,\n    changeSex: false,\n  });\n\n  let activeIndex;\n\n  switch (measurementMethod) {\n    case 'weight':\n      activeIndex = 1;\n      break;\n    case 'bmi':\n      activeIndex = 2;\n      break;\n    case 'ofc':\n      activeIndex = 3;\n      break;\n    default:\n      //height\n      activeIndex = 0;\n  }\n\n  const removeLast = useCallback(\n    (both = false) => {\n      const newMeasurements = deepCopy(\n        measurements[reference][measurementMethod]\n      );\n      newMeasurements.pop();\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        mutable[reference][measurementMethod] = newMeasurements;\n        return mutable;\n      });\n      if (both) {\n        const newApi = deepCopy(apiResult[reference][measurementMethod]);\n        newApi.pop();\n        setAPIResult((old) => {\n          const mutable = deepCopy(old);\n          mutable[reference][measurementMethod] = newApi;\n          return mutable;\n        });\n      }\n    },\n    [measurements, reference, measurementMethod, apiResult]\n  );\n\n  if (commands.resetCurrent) {\n    const resetCurrent = (old) => {\n      const mutable = deepCopy(old);\n      mutable[reference][measurementMethod] = [];\n      return mutable;\n    };\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to reset?',\n      body: 'This will remove all measurements from the current chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        setMeasurements(resetCurrent);\n        setAPIResult(resetCurrent);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, resetCurrent: false };\n    });\n  }\n\n  if (commands.undoLast) {\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to remove the last measurement?',\n      body: 'This will remove the last measurement entered on the chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        removeLast(true);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, undoLast: false };\n    });\n  }\n\n  const customSetMeasurementMethod = (newMeasurementMethod) => {\n    if (measurements[reference][newMeasurementMethod].length > 0) {\n      const existingSex = measurements[reference][newMeasurementMethod][0].sex;\n      if (existingSex !== sex) {\n        changeSex(existingSex, true);\n        setCommands((old) => {\n          return { ...old, changeSex: true };\n        });\n      }\n    }\n    setMeasurementMethod(newMeasurementMethod);\n  };\n\n  const handleTabChange = (e, { activeIndex }) => {\n    if (reference === 'turner' && activeIndex !== 0) {\n      setErrorModal({\n        visible: true,\n        title: 'Measurement unavailable',\n        body: \"Only height data is available for Turner's Syndrome.\",\n        handleClose: () => setErrorModal(InitalErrorModalState()),\n      });\n      return null;\n    }\n    let newMeasurementMethod = '';\n    switch (activeIndex) {\n      case 0:\n        newMeasurementMethod = 'height';\n        break;\n      case 1:\n        newMeasurementMethod = 'weight';\n        break;\n      case 2:\n        newMeasurementMethod = 'bmi';\n        break;\n      case 3:\n        newMeasurementMethod = 'ofc';\n        break;\n      default:\n        console.warn('Handle tab change did not pick up valid active index');\n    }\n    customSetMeasurementMethod(newMeasurementMethod);\n  };\n\n  const changeReference = (newReference) => {\n    // call back from MeasurementForm\n    setReference(newReference);\n    if (newReference === 'turner') {\n      setMeasurementMethod('height');\n      setSex('female');\n      setDisabled({\n        height: false,\n        weight: true,\n        bmi: true,\n        ofc: true,\n      });\n      return { newSex: 'female' };\n    } else {\n      setDisabled({\n        height: false,\n        weight: false,\n        bmi: false,\n        ofc: false,\n      });\n      if (\n        apiResult[newReference][measurementMethod].length > 0 &&\n        apiResult[newReference][measurementMethod][0]?.birth_data.sex !== sex\n      ) {\n        setSex(apiResult[newReference][measurementMethod][0].birth_data.sex);\n        return {\n          newSex: apiResult[newReference][measurementMethod][0].birth_data.sex,\n        };\n      } else {\n        return { newSex: sex };\n      }\n    }\n  };\n\n  const changeSex = (newSex, ignoreError = false) => {\n    // call back for MeasurementForm\n    const existingResults = [...measurements[reference][measurementMethod]];\n    if (existingResults.length > 0 && !ignoreError) {\n      for (const oldResult of existingResults) {\n        if (newSex !== oldResult.sex) {\n          setErrorModal({\n            visible: true,\n            title: 'Unable to change sex',\n            body: `Each chart can only display measurements from one patient at a time. Please reset the chart before entering measurements from a new patient.`,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n          return false;\n        }\n      }\n    }\n    if (theme.value === 'trad') {\n      const selectedTheme =\n        newSex === 'male'\n          ? RCPCHThemeTraditionalBoy\n          : RCPCHThemeTraditionalGirl;\n      setCentileStyle(selectedTheme.centiles);\n      setChartSyle(selectedTheme.chart);\n      setMeasurementStyle(selectedTheme.measurements);\n      setAxisStyle(selectedTheme.axes);\n    }\n    setSex(newSex);\n    return true;\n  };\n\n  const handleResults = (results) => {\n    // delegate function from MeasurementForm\n    // receives form data and stores in the correct measurement array\n    // checks for duplicates, mismatching dobs, sexes and gestations\n    const existingResults = deepCopy(\n      measurements[reference][measurementMethod]\n    );\n    let errorString = '';\n    if (existingResults.length > 0) {\n      const latestResult = results[0];\n      const newGestation =\n        latestResult.gestation_weeks * 7 + latestResult.gestation_days;\n      const errors = [];\n      for (const oldResult of existingResults) {\n        if (JSON.stringify(oldResult) === JSON.stringify(latestResult)) {\n          errorString = 'duplicate';\n          break;\n        }\n        const oldGestation =\n          oldResult.gestation_weeks * 7 + oldResult.gestation_days;\n        if (oldResult.sex !== latestResult.sex) {\n          errors.push('differing sexes');\n        }\n        if (oldResult.birth_date !== latestResult.birth_date) {\n          errors.push('differing date of births');\n        }\n        if (oldGestation !== newGestation) {\n          errors.push('differing gestations');\n        }\n        if (errors.length > 0) {\n          errorString = errors[0];\n          if (errors.length === 2) {\n            errorString = errors.join(' and ');\n          } else if (errors.length === 3) {\n            errorString = `${errors[0]}, ${errors[1]} and ${errors[2]}`;\n          }\n          break;\n        }\n      }\n    }\n    if (errorString) {\n      if (errorString === 'duplicate') {\n        setErrorModal({\n          visible: true,\n          title: 'Duplicate entries',\n          body: `Please check the last measurement entry as it appears to be identical to a measurement already entered.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      } else {\n        setErrorModal({\n          visible: true,\n          title: 'Please check entries',\n          body: `Each chart can only display measurements from one patient at a time: ${errorString} were detected.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      }\n      return false;\n    } else {\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        const newArray = mutable[reference][measurementMethod].concat(results);\n        mutable[reference][measurementMethod] = newArray;\n        return mutable;\n      });\n      setIsLoading(true);\n      return true;\n    }\n  };\n\n  const fictionalFormDataSubmit = (formData) => {\n    // call back from fictionaChildForm\n    console.log(formData);\n  }\n\n  const handleChangeTheme = (event, { value }) => {\n    let selectedTheme;\n    let text;\n\n    if (value === 'trad') {\n      if (sex === 'male') {\n        selectedTheme = RCPCHThemeTraditionalBoy;\n      } else {\n        selectedTheme = RCPCHThemeTraditionalGirl;\n      }\n      text = 'Traditional';\n    }\n    if (value === 'tanner1') {\n      selectedTheme = RCPCHTheme1;\n      text = 'Tanner 1';\n    }\n    if (value === 'tanner2') {\n      selectedTheme = RCPCHTheme2;\n      text = 'Tanner 2';\n    }\n    if (value === 'tanner3') {\n      selectedTheme = RCPCHTheme3;\n      text = 'Tanner 3';\n    }\n    if (value === 'monochrome') {\n      selectedTheme = RCPCHThemeMonochrome;\n      text = 'Monochrome';\n    }\n\n    setCentileStyle(selectedTheme.centiles);\n    setChartSyle(selectedTheme.chart);\n    setMeasurementStyle(selectedTheme.measurements);\n    setAxisStyle(selectedTheme.axes);\n    setTheme({ value: value, text: text });\n  };\n\n  const handleFlipResults = () => {\n    setFlip(!flip);\n  };\n\n  const panes = panesBlueprint.map((details) => {\n    return {\n      menuItem: details.menuItem,\n      render: () => (\n        <Tab.Pane attached=\"top\" disabled={disabled[details.measurementName]}>\n          <ChartData\n            key={details.measurementName}\n            reference={reference}\n            sex={sex}\n            measurementMethod={details.measurementName}\n            measurementsArray={apiResult[reference][details.measurementName]}\n            chartStyle={chartStyle}\n            axisStyle={axisStyle}\n            gridlineStyle={defaultTheme.gridlines}\n            centileStyle={centileStyle}\n            measurementStyle={measurementStyle}\n            isLoading={isLoading}\n          />\n          {/* <Acknowledgements /> */}\n        </Tab.Pane>\n      ),\n    };\n  });\n\n  const TabPanes = () => (\n    <Tab\n      menu={{ attached: 'top' }}\n      panes={panes}\n      activeIndex={activeIndex}\n      onTabChange={handleTabChange}\n    />\n  );\n  \n\n  const FormPanes = [\n    { menuItem: ' Measurements', render: () => \n      <Tab.Pane attached={false}>\n        <MeasurementForm\n          measurementResult={handleResults}\n          handleChangeReference={changeReference}\n          handleChangeSex={changeSex}\n          measurementMethod={measurementMethod}\n          setMeasurementMethod={customSetMeasurementMethod}\n          commands={commands}\n          setCommands={setCommands}\n          className=\"measurement-form\"\n        />\n      </Tab.Pane> },\n    { menuItem: 'Demo Children', render: () => \n      <Tab.Pane>\n        <FictionalChildForm\n          fictionalFormDataSubmit={fictionalFormDataSubmit}\n        />\n      </Tab.Pane> \n    },\n  ]\n\n  const ThemeSelection = () => (\n    // <Menu compact className=\"selectUpperMargin\">\n    <span>\n      Theme{' '}\n      <Dropdown\n        options={themeOptions}\n        floating\n        inline\n        onChange={handleChangeTheme}\n        text={theme.text}\n      />\n    </span>\n    // </Menu>\n  );\n\n  useEffect(() => {\n    const fetchCentilesForMeasurement = async (singleMeasurement) => {\n      const url = `${process.env.REACT_APP_GROWTH_API_BASEURL}/${reference}/calculation`;\n      const response = await axios({\n        url: url,\n        data: singleMeasurement,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.data;\n    };\n\n    let ignore = false;\n\n    if (isLoading) {\n      const relevantArray = measurements[reference][measurementMethod];\n      const latestMeasurement = deepCopy(\n        relevantArray[relevantArray.length - 1]\n      );\n      fetchCentilesForMeasurement(latestMeasurement)\n        .then((result) => {\n          if (!ignore) {\n            if (\n              result.measurement_calculated_values\n                .corrected_measurement_error ||\n              result.measurement_calculated_values\n                .chronological_measurement_error\n            ) {\n              const measurementError =\n                result.measurement_calculated_values\n                  .corrected_measurement_error ||\n                result.measurement_calculated_values\n                  .chronological_measurement_error;\n              setIsLoading(false);\n              removeLast();\n              setErrorModal({\n                visible: true,\n                title: 'Unable to plot',\n                body: `Measurement entered cannot be processed by the server. Reason given: ${measurementError}`,\n                handleClose: () => setErrorModal(InitalErrorModalState()),\n              });\n            } else {\n              setIsLoading(false);\n              setAPIResult((old) => {\n                const mutable = deepCopy(old);\n                const workingArray = deepCopy(\n                  mutable[reference][measurementMethod]\n                );\n                workingArray.push(result);\n                mutable[reference][measurementMethod] = workingArray;\n                return mutable;\n              });\n              setCommands((old) => {\n                return { ...old, clearMeasurement: true };\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          const errorForUser = `There has been a problem fetching the result from the server. Error details: ${error.message} `;\n          removeLast();\n          setErrorModal({\n            visible: true,\n            title: 'Server error',\n            body: errorForUser,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n        });\n    }\n\n    return () => {\n      // this prevents data being added to state if unmounted\n      ignore = true;\n    };\n  }, [\n    isLoading,\n    measurementMethod,\n    reference,\n    apiResult,\n    measurements,\n    removeLast,\n  ]);\n\n  return (\n    <React.Fragment>\n      {/* <Container> */}\n        <Grid padded>\n          <Grid.Row>\n            <Grid.Column width={6}>\n              <Segment textAlign={'center'}>\n                  <Tab panes={FormPanes} menu={{ attached: false }}></Tab>\n                </Segment>\n            </Grid.Column>\n            <Grid.Column width={10}>\n              <Segment>\n                {flip ? (\n                  <ResultsSegment apiResult={apiResult} reference={reference} />\n                ) : (\n                  <TabPanes />\n                )}\n                <Grid verticalAlign=\"middle\">\n                  <Grid.Row columns={2}>\n                    <Grid.Column textAlign=\"left\">\n                      <ThemeSelection />\n                    </Grid.Column>\n                    <Grid.Column textAlign=\"right\">\n                      <Button\n                        className=\"selectUpperMargin\"\n                        onClick={handleFlipResults}\n                      >\n                        Results\n                      </Button>\n                    </Grid.Column>\n                  </Grid.Row>\n                </Grid>\n                </Segment>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      {/* </Container> */}\n      <ErrorModal\n        title={errorModal.title}\n        body={errorModal.body}\n        visible={errorModal.visible}\n        handleClose={errorModal.handleClose}\n        handleCancel={errorModal.handleCancel}\n      />\n    </React.Fragment>\n  );\n}\n\nconst panesBlueprint = [\n  { menuItem: 'Height', measurementName: 'height' },\n  { menuItem: 'Weight', measurementName: 'weight' },\n  { menuItem: 'BMI', measurementName: 'bmi' },\n  {\n    menuItem: 'Head Circumference',\n    measurementName: 'ofc',\n  },\n];\n\nconst themeOptions = [\n  { key: 'monochrome', value: 'monochrome', text: 'Monochrome' },\n  { key: 'trad', value: 'trad', text: 'Traditional' },\n  { key: 'tanner1', value: 'tanner1', text: 'Tanner 1' },\n  { key: 'tanner2', value: 'tanner2', text: 'Tanner 2' },\n  { key: 'tanner3', value: 'tanner3', text: 'Tanner 3' },\n];\n\nfunction InitialMeasurementState() {\n  return {\n    turner: {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'trisomy-21': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'uk-who': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n  };\n}\n\nfunction InitalErrorModalState() {\n  return {\n    visible: false,\n    title: '',\n    body: '',\n    handleClose: null,\n    handleCancel: null,\n  };\n}\n\nexport default MeasurementSegment;\n","import React from \"react\";\n\nimport MeasurementSegment from \"../components/MeasurementSegment\";\n\nfunction Home() {\n  return (\n    <div>\n      <MeasurementSegment />\n    </div>\n  );\n}\n\nexport default Home;\n","// React\nimport React from \"react\";\nimport \"./App.css\";\n\n// RCPCH Components\nimport \"./components/MeasurementForm\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Semantic UI React\nimport \"semantic-ui-less/semantic.less\";\n\n// CSS\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}