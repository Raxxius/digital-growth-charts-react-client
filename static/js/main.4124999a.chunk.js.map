{"version":3,"sources":["components/MeasurementForm.js","components/chartThemes/themes.js","components/chartThemes/rcpchTheme1.js","components/chartThemes/rcpchTheme2.js","components/chartThemes/rcpchTheme3.js","components/chartThemes/rcpchThemeMonochrome.js","components/chartThemes/RCPCHThemeTraditionalBoy.js","components/chartThemes/RCPCHThemeTraditionalGirl.js","api/Chart.js","functions/deepCopy.js","components/SubComponents.js","components/MeasurementSegment.js","pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["sexOptions","key","value","text","disabled","gestationWeeksOptions","gestWeeks","push","toString","gestationDaysOptions","references","measurementOptions","formatDate","inputDate","date","month","day","year","getTime","Date","getMonth","getDate","getFullYear","length","join","error","Error","parseDate","finalArray","split","map","element","index","madeNumber","Number","isNaN","workingDate","MeasurementForm","props","handleChangeReference","ref","data","callbackReturn","disableMeasurement","newSexOptions","state","setState","sex","observation_value_error","validateObservationValue","measurement","observation_value","reference","handleChangeSex","setMeasurementMethod","measurementMethod","newSex","measurement_method","disable","options","handleObservationChange","observation","birth_date","observation_date","units","gestation_weeks","gestation_days","birth_date_error","observation_date_error","form_valid","measurementResult","handleChangeDate","bind","handleChangeMeasurementMethod","handleSubmit","handleChangeGestation","handleResetCurrentGraph","handleUndoLast","event","this","target","name","newDate","observation_date_object","birth_date_object","timeInterval","measurementArray","formData","changeUnits","isTurner","success","setCommands","old","resetCurrent","undoLast","formIsValid","commands","clearMeasurement","newMeasurement","changeSex","Container","Segment","textAlign","Form","onSubmit","Field","Header","as","Select","onChange","placeholder","required","Input","label","type","Group","width","content","basic","color","labelPosition","Message","compact","Button","fluid","icon","onClick","React","Component","ChartTheme","chart","gridlines","axes","centiles","measurements","_chart","val","_gridlines","_axes","_centiles","_measurements","ChartObject","backgroundColour","height","padding","titleStyle","subTitleStyle","tooltipBackgroundColour","tooltipStroke","tooltipTextStyle","termFill","termStroke","infoBoxFill","infoBoxStroke","infoBoxTextStyle","toggleButtonInactiveColour","toggleButtonActiveColour","toggleButtonTextColour","_backgroundColour","_width","_height","_padding","_titleStyle","_subTitleStyle","_tooltipBackgroundColour","_tooltipStroke","_tooltipTextStyle","_termFill","_termStroke","_infoBoxFill","_infoBoxStroke","_infoBoxTextStyle","_toggleButtonActiveColour","_toggleButtonInactiveColour","_toggleButtonTextColour","PaddingObject","left","right","top","bottom","_left","_right","_top","_bottom","TextStyleObject","colour","size","weight","_name","_colour","_size","_style","_weight","GridlineObject","stroke","strokeWidth","dashed","_stroke","_strokeWidth","_dashed","AxesObject","axisStroke","axisLabelTextStyle","tickLabelStyle","tickLabelTextStyle","_axisStroke","_axisLabelTextStyle","_tickLabelTexSize","CentilesObject","centileStroke","centileStrokeWidth","delayedPubertyAreaFill","_centileStroke","_centileStrokeWidth","_delayedPubertyAreaFill","MeasurementsObject","measurementFill","measurementStroke","measurementSize","_measurementFill","_measurementStroke","_measurementSize","tooltipBackGroundColour","RCPCHChart","RCPCHGridlines","RCPCHCentiles","RCPCHTheme1","RCPCHTheme2","axisLabelColour","RCPCHTheme3","RCPCHThemeMonochrome","RCPCHThemeTraditionalBoy","RCPCHThemeTraditionalGirl","ChartData","isLoading","titles","title","sexText","measurementText","subtitle","setTitle","Dimmer","active","Loader","measurementsArray","chartStyle","measurementStyle","centileStyle","gridlineStyle","axisStyle","enableZoom","deepCopyArray","arr","copy","forEach","elem","Array","isArray","deepCopyObject","obj","tempObj","Object","entries","deepCopy","input","TableBody","Fragment","Table","Row","Cell","measurement_dates","chronological_calendar_age","corrected_calendar_age","child_observation_value","Math","round","measurement_calculated_values","corrected_sds","chronological_sds","corrected_centile","chronological_centile","ResultsSegment","apiResult","celled","collapsing","HeaderCell","Body","bmi","ofc","ErrorModal","body","handleClose","visible","handleCancel","showCancel","Modal","open","closeOnEscape","Content","Actions","negative","panesBlueprint","menuItem","measurementName","themeOptions","MeasurementSegment","activeIndex","defaultTheme","useState","setChartSyle","setAxisStyle","setCentileStyle","setMeasurementStyle","theme","setTheme","flip","setFlip","setDisabled","setReference","setSex","turner","setMeasurements","setAPIResult","errorModal","setErrorModal","setIsLoading","removeLast","useCallback","both","newMeasurements","pop","mutable","newApi","customSetMeasurementMethod","newMeasurementMethod","existingSex","handleTabChange","e","console","warn","ignoreError","existingResults","oldResult","selectedTheme","handleChangeTheme","panes","details","render","Tab","Pane","attached","Chart","TabPanes","menu","onTabChange","ThemeSelection","Dropdown","floating","inline","useEffect","fetchCentilesForMeasurement","singleMeasurement","a","url","process","axios","method","headers","response","ignore","relevantArray","then","result","corrected_measurement_error","chronological_measurement_error","measurementError","workingArray","catch","errorForUser","message","Grid","padded","Column","results","errorString","latestResult","newGestation","errors","JSON","stringify","oldGestation","newArray","concat","newReference","birth_data","className","verticalAlign","columns","Home","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4124999a.chunk.js","sourcesContent":["import React from 'react';\n\nimport {\n  Container,\n  Segment,\n  Form,\n  Input,\n  Select,\n  Button,\n  Header,\n  Message,\n} from 'semantic-ui-react';\n\nconst sexOptions = [\n  { key: 'male', value: 'male', text: 'Boy', disabled: false },\n  { key: 'female', value: 'female', text: 'Girl', disabled: false },\n];\n\nlet gestationWeeksOptions = [];\nlet gestWeeks = 23;\nwhile (gestWeeks <= 42) {\n  gestationWeeksOptions.push({\n    key: gestWeeks.toString(10),\n    value: gestWeeks,\n    text: gestWeeks.toString(10),\n  });\n  gestWeeks++;\n}\n\nconst gestationDaysOptions = [\n  { key: '0', value: 0, text: '0' },\n  { key: '1', value: 1, text: '1' },\n  { key: '2', value: 2, text: '2' },\n  { key: '3', value: 3, text: '3' },\n  { key: '4', value: 4, text: '4' },\n  { key: '5', value: 5, text: '5' },\n  { key: '6', value: 6, text: '6' },\n];\n\nconst references = [\n  { key: 'uk-who', value: 'uk-who', text: 'UK-WHO' },\n  { key: 'trisomy-21', value: 'trisomy-21', text: \"Down's Syndrome\" },\n  { key: 'turner', value: 'turner', text: \"Turner's syndrome\" },\n];\n\nconst ROBERT_WADLOW = 272; // interesting fact - Robert Wadlow (22/2/1918 – 15/7/1940) was the world's tallest man\nconst JON_BROWER_MINNOCH = 635; // interesting fact -  Jon Brower Minnoch (Born USA) was the world's heaviest man\nconst KHALID_BIN_MOHSEN_SHAARI = 204; // Khalid bin Mohsen Shaari (2/8/1991) from Saudi Arabia had the highest recorded BMI\n\nconst measurementOptions = [\n  { key: 'height', value: 'height', text: 'Height (cm)', disabled: false },\n  { key: 'weight', value: 'weight', text: 'Weight (kg)', disabled: false },\n  { key: 'bmi', value: 'bmi', text: 'BMI (kg/m²)', disabled: false },\n  {\n    key: 'ofc',\n    value: 'ofc',\n    text: 'Head Circumference (cm)',\n    disabled: false,\n  },\n];\n\nconst formatDate = (inputDate) => {\n  let date;\n  let month;\n  let day;\n  let year;\n  try {\n    inputDate.getTime();\n    date = new Date(inputDate);\n    month = '' + (date.getMonth() + 1);\n    day = '' + date.getDate();\n    year = date.getFullYear();\n    if (month.length < 2) {\n      month = '0' + month;\n    }\n    if (day.length < 2) {\n      day = '0' + day;\n    }\n\n    return [year, month, day].join('-');\n  } catch (error) {\n    throw new Error('Input date for formatDate not recognised');\n  }\n};\n\nconst parseDate = (inputDate) => {\n  try {\n    const dateArray = inputDate.split('-');\n    const finalArray = dateArray.map((element, index) => {\n      if (element !== '') {\n        const madeNumber = Number(element);\n        if (Number.isNaN(madeNumber)) {\n          throw new Error();\n        } else {\n          return index === 1 ? madeNumber - 1 : madeNumber;\n        }\n      } else {\n        throw new Error();\n      }\n    });\n    if (\n      finalArray.length !== 3 ||\n      finalArray[1] < 0 ||\n      finalArray[1] > 11 ||\n      finalArray[2] < 1 ||\n      finalArray[2] > 31\n    ) {\n      throw new Error();\n    }\n    const workingDate = new Date(...finalArray);\n    if (typeof workingDate.getTime() === 'number') {\n      return workingDate;\n    } else {\n      return null;\n    }\n  } catch (error) {\n    return null;\n  }\n};\n\nclass MeasurementForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      birth_date: formatDate(new Date()),\n      observation_date: formatDate(new Date()),\n      measurement: {\n        observation_value: '',\n        units: 'cm',\n      },\n      sex: 'male',\n      gestation_weeks: 40,\n      gestation_days: 0,\n      birth_date_error: '',\n      observation_date_error: '',\n      observation_value_error: 'empty',\n      form_valid: false,\n      measurementResult: [],\n      reference: 'uk-who',\n      measurementOptions: measurementOptions,\n      sexOptions: sexOptions,\n    };\n\n    this.handleChangeDate = this.handleChangeDate.bind(this);\n    this.handleChangeMeasurementMethod =\n      this.handleChangeMeasurementMethod.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChangeGestation = this.handleChangeGestation.bind(this);\n    this.handleChangeSex = this.handleChangeSex.bind(this);\n    this.handleObservationChange = this.handleObservationChange.bind(this);\n    this.handleChangeReference = this.handleChangeReference.bind(this);\n    this.handleResetCurrentGraph = this.handleResetCurrentGraph.bind(this);\n    this.handleUndoLast = this.handleUndoLast.bind(this);\n  }\n\n  handleChangeReference = (ref, data) => {\n    //call back, returns new sex if already measurements charted with different sex\n    const callbackReturn = this.props.handleChangeReference(data.value);\n    if (data.value === 'turner') {\n      this.disableMeasurement('weight', true);\n      this.disableMeasurement('ofc', true);\n      this.disableMeasurement('bmi', true);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = true;\n      this.setState({\n        sex: 'female',\n        observation_value_error: this.validateObservationValue(\n          'height',\n          this.state.measurement.observation_value\n        ),\n        reference: data.value,\n        sexOptions: newSexOptions,\n      });\n      this.props.handleChangeSex('female', true);\n      this.props.setMeasurementMethod('height');\n    } else {\n      this.disableMeasurement('weight', false);\n      this.disableMeasurement('ofc', false);\n      this.disableMeasurement('bmi', false);\n      const newSexOptions = [\n        { ...this.state.sexOptions[0] },\n        { ...this.state.sexOptions[1] },\n      ];\n      newSexOptions[0].disabled = false;\n      this.setState({\n        observation_value_error: this.validateObservationValue(\n          this.props.measurementMethod,\n          this.state.measurement.observation_value\n        ),\n        sex: callbackReturn.newSex,\n        reference: data.value,\n        sexOptions: newSexOptions,\n      });\n    }\n  };\n\n  disableMeasurement = (measurement_method, disable) => {\n    if (measurement_method === 'height') {\n      let options = this.state.measurementOptions;\n      options[0].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'weight') {\n      let options = this.state.measurementOptions;\n      options[1].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'ofc') {\n      let options = this.state.measurementOptions;\n      options[2].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n    if (measurement_method === 'bmi') {\n      let options = this.state.measurementOptions;\n      options[3].disabled = disable;\n      this.setState({ measurementOptions: options });\n    }\n  };\n\n  handleChangeDate(event) {\n    this.setState({ [event.target.name]: event.target.value });\n    const newDate = parseDate(event.target.value);\n    if (newDate) {\n      const observation_date_object =\n        event.target.name === 'birth_date'\n          ? parseDate(this.state.observation_date)\n          : newDate;\n      const birth_date_object =\n        event.target.name === 'birth_date'\n          ? newDate\n          : parseDate(this.state.birth_date);\n      const timeInterval =\n        observation_date_object.getTime() - birth_date_object.getTime();\n      if (timeInterval < 0) {\n        if (event.target.name === 'birth_date') {\n          this.setState({\n            birth_date_error:\n              'Date of birth cannot come after the date of measurement',\n          });\n        } else if (event.target.name === 'observation_date') {\n          this.setState({\n            observation_date_error:\n              'Date of measurement cannot come before the date of birth.',\n          });\n        }\n      } else if (timeInterval > 631139040000) {\n        this.setState({\n          [`${event.target.name}_error`]:\n            'No centile data exists over 20 years of age.',\n        });\n      } else {\n        this.setState({ birth_date_error: '', observation_date_error: '' });\n      }\n    } else {\n      this.setState({\n        [`${event.target.name}_error`]: 'Please enter a valid date.',\n      });\n    }\n  }\n\n  handleObservationChange = (observation, data) => {\n    // this is updating an observation value\n\n    const observation_value = data.value;\n    let { measurement, observation_value_error } = this.state;\n    measurement.observation_value = observation_value;\n    observation_value_error = this.validateObservationValue(\n      this.props.measurementMethod,\n      observation_value\n    );\n    this.setState({\n      measurement: measurement,\n      observation_value_error: observation_value_error,\n    });\n  };\n\n  validateObservationValue(measurement_method, observation_value) {\n    if (observation_value === '') {\n      return 'empty';\n    }\n    if (Number.isNaN(Number(observation_value))) {\n      return 'Please enter a valid number.';\n    }\n    if (measurement_method === 'height') {\n      if (observation_value < 20) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > ROBERT_WADLOW) {\n        return 'The ' + measurement_method + ' you entered is too tall.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'weight') {\n      if (observation_value < 0.01) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > JON_BROWER_MINNOCH) {\n        return 'The ' + measurement_method + ' you entered is too heavy.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'bmi') {\n      if (observation_value < 5) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > KHALID_BIN_MOHSEN_SHAARI) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n    if (measurement_method === 'ofc') {\n      if (observation_value < 25) {\n        return 'The ' + measurement_method + ' you entered is too low.';\n      } else if (observation_value > 70) {\n        return 'The ' + measurement_method + ' you entered is too high.';\n      } else {\n        return '';\n      }\n    }\n  }\n\n  formIsValid() {\n    if (\n      this.state.reference === 'turner' &&\n      this.props.measurementMethod !== 'height'\n    ) {\n      return false;\n    }\n    if (\n      this.state.birth_date_error === '' &&\n      this.state.observation_date_error === '' &&\n      this.state.observation_value_error === ''\n    ) {\n      return true;\n    }\n  }\n\n  handleSubmit(event) {\n    // passes the form data back to the parent (measurement segment)\n    const measurementArray = [];\n    const formData = {\n      birth_date: this.state.birth_date,\n      observation_date: this.state.observation_date,\n      measurement_method: this.props.measurementMethod,\n      observation_value: this.state.measurement.observation_value,\n      gestation_weeks: this.state.gestation_weeks,\n      gestation_days: this.state.gestation_days,\n      sex: this.state.sex,\n    };\n    measurementArray.push(formData);\n    this.props.measurementResult(measurementArray);\n  }\n\n  handleChangeMeasurementMethod(event, data) {\n    let measurement = { ...this.state.measurement };\n    if (data.value !== this.props.measurementMethod) {\n      measurement.units = this.changeUnits(data.value);\n      this.props.setMeasurementMethod(data.value);\n      this.setState({\n        measurement: measurement,\n        observation_value_error: this.validateObservationValue(\n          data.value,\n          measurement.observation_value\n        ),\n      });\n      if (\n        this.state.reference === 'turner' &&\n        this.props.measurementMethod !== 'height'\n      ) {\n        this.disableMeasurement('weight', true);\n        this.disableMeasurement('bmi', true);\n        this.disableMeasurement('ofc', true);\n      } else {\n        this.disableMeasurement('weight', false);\n        this.disableMeasurement('bmi', false);\n        this.disableMeasurement('ofc', false);\n      }\n    }\n  }\n\n  handleChangeGestation(event, data) {\n    const { name, value } = data;\n    if (name === 'gestation_weeks') {\n      this.setState({ gestation_weeks: value });\n      if (value === 42) {\n        this.setState({ gestation_days: 0 });\n      }\n    } else if (name === 'gestation_days') {\n      if (this.state.gestation_weeks === 42) {\n        this.setState({ gestation_days: 0 });\n      } else {\n        this.setState({ gestation_days: value });\n      }\n    }\n  }\n\n  handleChangeSex(event, data, isTurner = false) {\n    const success = this.props.handleChangeSex(data.value, isTurner);\n    if (success) {\n      this.setState({ sex: data.value });\n    }\n  }\n\n  changeUnits(measurement_method) {\n    if (measurement_method === 'height') {\n      return 'cm';\n    }\n    if (measurement_method === 'weight') {\n      return 'kg';\n    }\n    if (measurement_method === 'bmi') {\n      return 'kg/m²';\n    }\n    if (measurement_method === 'ofc') {\n      return 'cm';\n    }\n  }\n\n  handleResetCurrentGraph() {\n    this.props.setCommands((old) => {\n      return { ...old, resetCurrent: true };\n    });\n  }\n\n  handleUndoLast() {\n    this.props.setCommands((old) => {\n      return { ...old, undoLast: true };\n    });\n  }\n\n  componentDidUpdate() {\n    if (this.state.form_valid !== this.formIsValid()) {\n      this.setState({ form_valid: this.formIsValid() });\n    }\n    if (this.props.commands.clearMeasurement) {\n      const newMeasurement = { ...this.state.measurement };\n      newMeasurement.observation_value = '';\n      this.setState({\n        measurement: newMeasurement,\n        observation_value_error: 'empty',\n        form_valid: false,\n      });\n      this.props.setCommands((old) => {\n        return { ...old, clearMeasurement: false };\n      });\n    }\n    if (this.props.commands.changeSex) {\n      this.setState({ sex: this.state.sex === 'male' ? 'female' : 'male' });\n      this.props.setCommands((old) => {\n        return { ...old, changeSex: false };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment textAlign={'center'}>\n          <Form onSubmit={this.handleSubmit}>\n            <Form.Field>\n              <Header as=\"h5\" textAlign=\"left\">\n                Reference\n              </Header>\n              <Select\n                name=\"reference\"\n                value={this.state.reference}\n                options={references}\n                onChange={this.handleChangeReference}\n                placeholder=\"Select reference\"\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Header as=\"h5\" textAlign=\"left\">\n                Dates\n              </Header>\n              <Input\n                label=\"Birth Date\"\n                type=\"date\"\n                name=\"birth_date\"\n                value={this.state.birth_date}\n                placeholder=\"Date of Birth\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            <Form.Field required>\n              <Input\n                label=\"Measurement Date\"\n                type=\"date\"\n                name=\"observation_date\"\n                value={this.state.observation_date}\n                placeholder=\"Date of Measurement\"\n                onChange={this.handleChangeDate}\n              />\n            </Form.Field>\n            {/* <Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Measurements\n            </Header>\n\n            <Form.Group>\n              <Form.Field required>\n                <Select\n                  value={this.props.measurementMethod}\n                  name=\"measurement_method\"\n                  placeholder=\"Measurement Type\"\n                  options={measurementOptions}\n                  onChange={this.handleChangeMeasurementMethod}\n                />\n              </Form.Field>\n              <Form.Field required width={8}>\n                <Input\n                  type=\"decimal\"\n                  name=\"observation_value\"\n                  placeholder=\"Measurement\"\n                  value={this.state.measurement.observation_value}\n                  label={{\n                    content: this.state.measurement.units.toString(),\n                    basic: true,\n                    color: 'blue',\n                  }}\n                  labelPosition=\"right\"\n                  onChange={this.handleObservationChange}\n                />\n              </Form.Field>\n            </Form.Group>\n            {this.state.observation_value_error &&\n              this.state.observation_value_error !== 'empty' && (\n                <Message color=\"red\">\n                  {this.state.observation_value_error}\n                </Message>\n              )}\n            {this.state.observation_date_error ? (\n              <Message color=\"red\">{this.state.observation_date_error}</Message>\n            ) : null}\n            {this.state.birth_date_error ? (\n              <Message color=\"red\">{this.state.birth_date_error}</Message>\n            ) : null}\n            {/* </Segment> */}\n            <Header as=\"h5\" textAlign=\"left\">\n              Sex\n            </Header>\n            <Form.Field required>\n              <Select\n                name=\"sex\"\n                placeholder=\"Sex\"\n                value={this.state.sex}\n                onChange={this.handleChangeSex}\n                options={this.state.sexOptions}\n              />\n            </Form.Field>\n\n            <Form.Group>\n              <Form.Field>\n                <Header as=\"h5\" textAlign=\"left\">\n                  Gestation\n                </Header>\n                <span>\n                  <Select\n                    compact\n                    name=\"gestation_weeks\"\n                    value={this.state.gestation_weeks}\n                    options={gestationWeeksOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp;+\n                  <Select\n                    compact\n                    name=\"gestation_days\"\n                    value={this.state.gestation_days}\n                    options={gestationDaysOptions}\n                    onChange={this.handleChangeGestation}\n                  />\n                  &nbsp; weeks\n                </span>\n              </Form.Field>\n              {/* </Segment> */}\n            </Form.Group>\n\n            <Form.Field>\n              <Button\n                content=\"Calculate Centiles and Add To Chart\"\n                type=\"submit\"\n                fluid\n                disabled={!this.state.form_valid}\n                color=\"pink\"\n                icon=\"line graph\"\n                labelPosition=\"right\"\n              />\n            </Form.Field>\n          </Form>\n          <Segment>\n            <Button\n              content=\"Reset Chart\"\n              icon=\"power off\"\n              onClick={this.handleResetCurrentGraph}\n            />\n            <Button\n              content=\"Remove Last\"\n              icon=\"undo\"\n              onClick={this.handleUndoLast}\n            />\n          </Segment>\n        </Segment>\n      </Container>\n    );\n  }\n}\n\nexport default MeasurementForm;\n","export class ChartTheme{\n    constructor(chart, gridlines, axes, centiles, measurements){\n        this.chart = chart\n        this.gridlines = gridlines\n        this.axes = axes\n        this.centiles = centiles\n        this.measurements = measurements\n    }\n    get chart(){\n        return this._chart\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get axes(){\n        return this._axes\n    }\n    get centiles(){\n        return this._centiles\n    }\n    get measurements(){\n        return this._measurements\n    }\n\n    set chart(val){\n        this._chart=val\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set axes(val){\n        this._axes=val\n    }\n    set centiles(val){\n        this._centiles=val\n    }\n    set measurements(val){\n        this._measurements=val\n    }\n}\n\nexport class ChartObject{\n    constructor(backgroundColour, width, height, padding, titleStyle, subTitleStyle, tooltipBackgroundColour, tooltipStroke, tooltipTextStyle, termFill, termStroke, infoBoxFill, infoBoxStroke, infoBoxTextStyle, toggleButtonInactiveColour, toggleButtonActiveColour, toggleButtonTextColour){\n        this.backgroundColour = backgroundColour\n        this.width = width\n        this.height = height\n        this.padding = padding\n        this.titleStyle=titleStyle\n        this.subTitleStyle=subTitleStyle\n        this.tooltipBackgroundColour = tooltipBackgroundColour\n        this.tooltipStroke = tooltipStroke\n        this.tooltipTextStyle = tooltipTextStyle\n        this.termFill=termFill\n        this.termStroke=termStroke\n        this.infoBoxFill=infoBoxFill\n        this.infoBoxStroke=infoBoxStroke\n        this.infoBoxTextStyle=infoBoxTextStyle\n        this.toggleButtonInactiveColour=toggleButtonInactiveColour\n        this.toggleButtonActiveColour=toggleButtonActiveColour\n        this.toggleButtonTextColour=toggleButtonTextColour\n    }\n    get backgroundColour(){\n        return this._backgroundColour\n    }\n    get width(){\n        return this._width\n    }\n    get height(){\n        return this._height\n    }\n    get padding(){\n        return this._padding\n    }\n    get titleStyle(){\n        return this._titleStyle\n    }\n    get subTitleStyle(){\n        return this._subTitleStyle\n    }\n    get tooltipBackgroundColour(){\n        return this._tooltipBackgroundColour\n    }\n    get tooltipStroke(){\n        return this._tooltipStroke\n    }\n    get tooltipTextStyle(){\n        return this._tooltipTextStyle\n    }\n    get termFill(){\n        return this._termFill\n    }\n    get termStroke(){\n        return this._termStroke\n    }\n    get infoBoxFill(){\n        return this._infoBoxFill\n    }\n    get infoBoxStroke(){\n        return this._infoBoxStroke\n    }\n    get infoBoxTextStyle(){\n        return this._infoBoxTextStyle\n    }\n    get toggleButtonActiveColour(){\n        return this._toggleButtonActiveColour\n    }\n    get toggleButtonInactiveColour(){\n        return this._toggleButtonInactiveColour\n    }\n    get toggleButtonTextColour(){\n        return this._toggleButtonTextColour\n    }\n    set termFill(val){\n        this._termFill=val\n    }\n    set termStroke(val){\n        this._termStroke=val\n    }\n    set infoBoxFill(val){\n        this._infoBoxFill=val\n    }\n    set infoBoxStroke(val){\n        this._infoBoxStroke=val\n    }\n    set infoBoxTextStyle(val){\n        this._infoBoxTextStyle=val\n    }\n    set backgroundColour(val){\n        this._backgroundColour=val\n    }\n    set width(val){\n        this._width=val\n    }\n    set height(val){\n        this._height=val\n    }\n    set padding(val){\n        this._padding=val\n    }\n    set tooltipBackgroundColour(val){\n        this._tooltipBackgroundColour=val\n    }set tooltipStroke(val){\n        this._tooltipStroke=val\n    }\n    set tooltipTextStyle(val){\n        this._tooltipTextStyle=val\n    }\n    set titleStyle(val){\n        this._titleStyle=val\n    }\n    set subTitleStyle(val){\n        this._subTitleStyle=val\n    }\n    set toggleButtonTextColour(val){\n        this._toggleButtonTextColour=val\n    }\n    set toggleButtonInactiveColour(val){\n        this._toggleButtonInactiveColour=val\n    }\n    set toggleButtonActiveColour(val){\n        this._toggleButtonActiveColour=val\n    }\n}\n\nexport class PaddingObject{\n    constructor(left, right, top, bottom){\n        this.left = left\n        this.right=right\n        this.top=top\n        this.bottom=bottom\n    }\n    get left(){\n        return this._left\n    }\n    get right(){\n        return this._right\n    }\n    get top(){\n        return this._top\n    }\n    get bottom(){\n        return this._bottom\n    }\n\n    set left(val){\n        this._left=val\n    }\n    set right(val){\n        this._right=val\n    }\n    set top(val){\n        this._top=val\n    }\n    set bottom(val){\n        this._bottom=val\n    }\n}\n\nexport class TextStyleObject{\n    constructor(name, colour, size, weight){\n        this.name=name\n        this.colour=colour\n        this.size=size\n        this.weight=weight\n    }\n    get name(){\n        return this._name\n    }\n    get colour(){\n        return this._colour\n    }\n    get size(){\n        return this._size\n    }\n    get style(){\n        return this._style\n    }\n    set name(val){\n        this._name=val\n    }\n    set colour(val){\n        this._colour=val\n    }\n    set size(val){\n        this._size=val\n    }\n    set weight(val){\n        this._weight=val\n    }\n}\n\nexport class GridlineObject{\n    constructor(gridlines, stroke, strokeWidth, dashed){\n        this.gridlines=gridlines\n        this.stroke=stroke\n        this.strokeWidth = strokeWidth\n        this.dashed=dashed\n    }\n    get gridlines(){\n        return this._gridlines\n    }\n    get stroke(){\n        return this._stroke\n    }\n    get strokeWidth(){\n        return this._strokeWidth\n    }\n    get dashed(){\n        return this._dashed\n    }\n    set gridlines(val){\n        this._gridlines=val\n    }\n    set stroke(val){\n        this._stroke=val\n    }\n    set strokeWidth(val){\n        this._strokeWidth=val\n    }\n    set dashed(val){\n        this._dashed=val\n    }\n}\n\nexport class AxesObject{\n    constructor(axisStroke, axisLabelTextStyle, tickLabelStyle){\n        this.axisStroke=axisStroke\n        this.axisLabelTextStyle=axisLabelTextStyle\n        this.tickLabelTextStyle=tickLabelStyle\n    }\n    get axisStroke(){\n        return this._axisStroke\n    }\n    get axisLabelTextStyle(){\n        return this._axisLabelTextStyle\n    }\n    get tickLabelTextStyle(){\n        return this._tickLabelTexSize\n    }\n    set axisStroke(val){\n        this._axisStroke=val\n    }\n    set axisLabelTextStyle(val){\n        this._axisLabelTextStyle=val\n    }\n    set tickLabelTextStyle(val){\n        this._tickLabelTexSize=val\n    }\n}\nexport class CentilesObject{\n    constructor(centileStroke, centileStrokeWidth, delayedPubertyAreaFill){\n        this.centileStroke=centileStroke\n        this.centileStrokeWidth=centileStrokeWidth\n        this.delayedPubertyAreaFill=delayedPubertyAreaFill\n    }\n    get centileStroke(){\n        return this._centileStroke\n    }\n    get centileStrokeWidth(){\n        return this._centileStrokeWidth\n    }\n    get delayedPubertyAreaFill(){\n        return this._delayedPubertyAreaFill\n    }\n    set centileStroke(val){\n        this._centileStroke=val\n    }\n    set centileStrokeWidth(val){\n        this._centileStrokeWidth=val\n    }\n    set delayedPubertyAreaFill(val){\n        this._delayedPubertyAreaFill=val\n    }\n}\n\nexport class MeasurementsObject{\n    constructor(measurementFill, measurementStroke, measurementSize){\n        this.measurementFill=measurementFill        \n        this.measurementSize=measurementSize\n           }\n    get measurementFill(){\n        return this._measurementFill\n    }\n    get measurementStroke(){\n        return this._measurementStroke\n    }\n    get measurementSize(){\n        return this._measurementSize\n    }\n    set measurementFill(val){\n        this._measurementFill=val\n    }\n    set measurementStroke(val){\n        this._measurementStroke=val\n    }\n    set measurementSize(val){\n        this._measurementSize=val\n    }\n}\n\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 1\n\nData:  #7159aa - purple\nArea:  #c6bddd - purple (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#7159aa';\nconst pubertyFill = '#c6bddd';\nconst tooltipBackGroundColour = '#fdc300';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme1 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme1;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 2\n\nData:  #ff8000 - orange\nArea:  #ffc080 - orange (tint 40%)\ntooltip: #3366cc - strong blue\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#ff8000';\nconst pubertyFill = '#ffc080';\nconst tooltipBackGroundColour = '#3366cc';\n// const tooltipTextColour = \"#FFFFFF\"\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#FFFFFF',\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme2 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme2;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 3\n\nData:   #e60700 - red\nArea:   #f59c99 - red (tint 40%)\ntooltip: #fdc300 - yellow\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#e60700';\nconst pubertyFill = '#f59c99';\nconst tooltipBackGroundColour = '#fdc300';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\nconst axisLabelColour = '#000000';\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\nconst axisLabelSize = 10;\nconst tickLabelSize = 8;\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  axisLabelSize,\n  'normal'\n);\nconst tickLabelTextStyle = new TextStyleObject(\n  'Arial',\n  axisLabelColour,\n  tickLabelSize,\n  'normal'\n);\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackGroundColour,\n  tooltipBackGroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHTheme3 = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHTheme3;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTheme 4 - monochrome\n\nData:   #000000 - black\nArea:   #b3b3b3 - midgrey\ntooltip: #FFFFF - white\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n \n*/\n\nconst centileColour = '#000000';\nconst pubertyFill = '#b3b3b3';\nconst tooltipBackgroundColour = '#b3b3b3';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  '#CDCDCD',\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeMonochrome = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\nexport default RCPCHThemeMonochrome;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nRCPCH traditional: boy\n\n// boy 0 163 222 - #00a3de\n\nData:   #00a3de - blue\nArea:   #66c8eb - blue tint 49%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#00a3de';\nconst pubertyFill = '#66c8eb';\nconst tooltipBackgroundColour = '#66c8eb';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalBoy = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalBoy;\n","import {\n  ChartTheme,\n  ChartObject,\n  GridlineObject,\n  CentilesObject,\n  MeasurementsObject,\n  AxesObject,\n  TextStyleObject,\n  PaddingObject,\n} from './themes';\n\n/* \nTraditional: girl\n\n// girl 201 85 157 - #c9559d\n\nData:   #c9559d - pink\nArea:   df99c4 - pink tint 40%\ntooltip: #b3b3b3 - midgrey\n\ngridlines: #d9d9d9 - light grey\ntext: #000000 - black\nbackground colour: #FFFFFF - white\ncentile width: 1.5 px\n\nfont: Montserrat normal\n\n*/\n\nconst centileColour = '#c9559d';\nconst pubertyFill = '#df99c4';\nconst tooltipBackgroundColour = '#df99c4';\nconst tooltipTextColour = '#000000';\nconst gridlineColour = '#d9d9d9';\nconst gridlineWidth = 0.25;\nconst backgroundColour = '#FFFFFF';\nconst centileWidth = 1.5;\n// const axisLabelColour = \"#000000\"\nconst axisstroke = '#000000';\nconst measurementsFill = '#000000';\nconst measurementsStroke = '#000000';\nconst measurementsSize = 2;\n// const axisLabelSize = 10\n// const tickLabelSize = 8\n// const axisLabelFont = \"Montserrat\"\n\nconst titleStyle = new TextStyleObject('Arial', '#000000', 14, 'bold');\nconst subTitleStyle = new TextStyleObject('Arial', '#000000', 14, 'normal');\n\nconst tooltipTextStyle = new TextStyleObject(\n  'Montserrat',\n  tooltipTextColour,\n  0.25,\n  'normal'\n);\nconst infoBoxTextStyle = new TextStyleObject(\n  'Montserrat',\n  '#000000',\n  6,\n  'normal'\n);\n\nconst axisLabelTextStyle = new TextStyleObject('Arial', '000000', 10, 'normal');\nconst tickLabelTextStyle = new TextStyleObject('Arial', '000000', 8, 'normal');\n\nconst chartPadding = new PaddingObject(50, 50, 25, 40);\n\nconst RCPCHChart = new ChartObject(\n  backgroundColour,\n  700,\n  475,\n  chartPadding,\n  titleStyle,\n  subTitleStyle,\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  tooltipTextStyle,\n  '#CDCDCD',\n  '#CDCDCD',\n  tooltipBackgroundColour,\n  tooltipBackgroundColour,\n  infoBoxTextStyle,\n  '#E497C1',\n  '#cb3083',\n  '#FFFFFF'\n);\n\nconst RCPCHGridlines = new GridlineObject(\n  true,\n  gridlineColour,\n  gridlineWidth,\n  false\n);\n\nconst RCPCHCentiles = new CentilesObject(\n  centileColour,\n  centileWidth,\n  pubertyFill\n);\n\nconst RCPCHAxes = new AxesObject(\n  axisstroke,\n  axisLabelTextStyle,\n  tickLabelTextStyle\n);\n\nconst RCPCHMeasurements = new MeasurementsObject(\n  measurementsFill,\n  measurementsStroke,\n  measurementsSize\n);\n\nconst RCPCHThemeTraditionalGirl = new ChartTheme(\n  RCPCHChart,\n  RCPCHGridlines,\n  RCPCHAxes,\n  RCPCHCentiles,\n  RCPCHMeasurements\n);\n\nexport default RCPCHThemeTraditionalGirl;\n","import React from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\n\nimport { RCPCHChart } from '@rcpch/digital-growth-charts-react-component-library';\n\nfunction ChartData(props) {\n  const isLoading = props.isLoading;\n  const titles = setTitle(props);\n\n  return (\n    <div>\n      <Dimmer active={isLoading}>\n        <Loader>Fetching Data</Loader>\n      </Dimmer>\n      <RCPCHChart\n        reference={props.reference}\n        measurementMethod={props.measurementMethod}\n        sex={props.sex}\n        title={titles.title}\n        subtitle={titles.subtitle}\n        measurementsArray={props.measurementsArray} // this is the plottable child data\n        chartStyle={props.chartStyle}\n        measurementStyle={props.measurementStyle}\n        centileStyle={props.centileStyle}\n        gridlineStyle={props.gridlineStyle}\n        axisStyle={props.axisStyle}\n        enableZoom\n      />\n    </div>\n  );\n}\n\nfunction setTitle(props) {\n  // set the title of the chart\n  let title = '';\n  let subTitle = '';\n  if (props.reference === 'uk-who') {\n    title = 'UK-WHO';\n  } else if (props.reference === 'turner') {\n    title = \"Turner's Syndrome\";\n  } else if (props.reference === 'trisomy-21') {\n    title = \"Trisomy 21 (Down's Syndrome)\";\n  }\n\n  let sexText = '';\n  let measurementText = '';\n  if (props.sex === 'male') {\n    sexText = 'Boys';\n  } else {\n    sexText = 'Girls';\n  }\n\n  switch (props.measurementMethod) {\n    case 'height':\n      measurementText = 'Height / Length';\n      break;\n    case 'weight':\n      measurementText = 'Weight';\n      break;\n    case 'bmi':\n      measurementText = 'Body Mass Index';\n      break;\n    case 'ofc':\n      measurementText = 'Head Circumference';\n      break;\n    default:\n      measurementText = '';\n      break;\n  }\n\n  subTitle = measurementText + ' - ' + sexText;\n\n  return { subtitle: subTitle, title: title };\n}\n\nexport default ChartData;\n","const deepCopyArray = (arr) => {\n  let copy = [];\n  arr.forEach((elem) => {\n    if (Array.isArray(elem)) {\n      copy.push(deepCopyArray(elem));\n    } else {\n      if (typeof elem === 'object' && elem !== null) {\n        copy.push(deepCopyObject(elem));\n      } else {\n        copy.push(elem);\n      }\n    }\n  });\n  return copy;\n};\n\nconst deepCopyObject = (obj) => {\n  let tempObj = {};\n  for (let [key, value] of Object.entries(obj)) {\n    if (Array.isArray(value)) {\n      tempObj[key] = deepCopyArray(value);\n    } else {\n      if (typeof value === 'object' && value !== null) {\n        tempObj[key] = deepCopyObject(value);\n      } else {\n        tempObj[key] = value;\n      }\n    }\n  }\n  return tempObj;\n};\n\nconst deepCopy = (input) => {\n  if (Array.isArray(input)) {\n    return deepCopyArray(input);\n  } else if (typeof input === 'object' && input !== null) {\n    return deepCopyObject(input);\n  } else {\n    return input;\n  }\n};\n\nexport default deepCopy;\n","import React from 'react';\nimport {\n  Segment,\n  Message,\n  Button,\n  Table,\n  List,\n  Modal,\n} from 'semantic-ui-react';\n\nconst units = (measurementMethod) => {\n  if (measurementMethod === 'height') {\n    return 'cm';\n  }\n  if (measurementMethod === 'weight') {\n    return 'kg';\n  }\n  if (measurementMethod === 'bmi') {\n    return 'kg/m²';\n  }\n  if (measurementMethod === 'ofc') {\n    return 'cm';\n  }\n};\n\nexport const Acknowledgements = () => {\n  // list={[\"Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross sectional stature and weight reference curves for the UK, 1990. Arch Dis Child 1995; 73:17-24.\", \"<a href='www.who.int/childgrowth/en'>www.who.int/childgrowth/en</a>\", \"For further relevant references see fact sheet downloadable from www.growthcharts.RCPCH.ac.uk\"]}\n  return (\n    <Message>\n      <Message.Header>References</Message.Header>\n      <List>\n        <List.Item>\n          Freeman JV, Cole TJ, Chinn S, Jones PRM, White EM, Preece MA. Cross\n          sectional stature and weight reference curves for the UK, 1990. Arch\n          Dis Child 1995; 73:17-24.\n        </List.Item>\n        <List.Item>\n          <a href=\"www.who.int/childgrowth/en\">www.who.int/childgrowth/en</a>\n        </List.Item>\n        <List.Item>\n          For further relevant references see fact sheet downloadable from{' '}\n          <a href=\"www.growthcharts.RCPCH.ac.uk\">\n            www.growthcharts.RCPCH.ac.uk\n          </a>\n        </List.Item>\n      </List>\n    </Message>\n  );\n};\n\nexport const TableBody = (props) => {\n  const measurement = props.measurement;\n  return (\n    <React.Fragment>\n      <Table.Row>\n        <Table.Cell>Ages</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.chronological_calendar_age}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_dates.corrected_calendar_age}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Measurement</Table.Cell>\n        <Table.Cell>\n          {measurement.child_observation_value.observation_value}{' '}\n          {units(measurement.child_observation_value.measurement_method)}\n        </Table.Cell>\n        <Table.Cell></Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>SDS</Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.corrected_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n        <Table.Cell>\n          {Math.round(\n            measurement.measurement_calculated_values.chronological_sds * 1000\n          ) / 1000}\n        </Table.Cell>\n      </Table.Row>\n      <Table.Row>\n        <Table.Cell>Centiles</Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.corrected_centile}\n        </Table.Cell>\n        <Table.Cell>\n          {measurement.measurement_calculated_values.chronological_centile}\n        </Table.Cell>\n      </Table.Row>\n    </React.Fragment>\n  );\n};\n\nexport const ResultsSegment = ({ apiResult, reference }) => (\n  <Segment>\n    <Table basic=\"very\" celled collapsing compact>\n      <Table.Header>\n        <Table.Row>\n          <Table.HeaderCell></Table.HeaderCell>\n          <Table.HeaderCell>Corrected Results</Table.HeaderCell>\n          <Table.HeaderCell>Chronological Results</Table.HeaderCell>\n        </Table.Row>\n      </Table.Header>\n      <Table.Body>\n        {apiResult[reference].height.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Heights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].height.length > 0 &&\n          apiResult[reference].height.map((measurement, index) => {\n            return <TableBody measurement={measurement} key={index} />;\n          })}\n        {apiResult[reference].weight.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Weights</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].weight.length > 0 &&\n          apiResult[reference].weight.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].bmi.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>BMIs</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].bmi.length > 0 &&\n          apiResult.bmi.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n        {apiResult[reference].ofc.length > 0 && (\n          <Table.Row>\n            <Table.HeaderCell></Table.HeaderCell>\n            <Table.HeaderCell>Head Circumferences</Table.HeaderCell>\n            <Table.HeaderCell></Table.HeaderCell>\n          </Table.Row>\n        )}\n        {apiResult[reference].ofc.length > 0 &&\n          apiResult[reference].ofc.map((measurement, index) => {\n            return <TableBody key={index} measurement={measurement} />;\n          })}\n      </Table.Body>\n    </Table>\n  </Segment>\n);\n\nexport const ErrorModal = ({\n  title,\n  body,\n  handleClose,\n  visible,\n  handleCancel,\n}) => {\n  const showCancel = handleCancel ? true : false;\n  return (\n    <Modal title={title} open={visible} size=\"small\" closeOnEscape={true}>\n      <Modal.Header>{title}</Modal.Header>\n      <Modal.Content>{body}</Modal.Content>\n      <Modal.Actions>\n        <Button negative onClick={handleClose}>\n          OK\n        </Button>\n        {showCancel && <Button onClick={handleCancel}>Cancel</Button>}\n      </Modal.Actions>\n    </Modal>\n  );\n};\n","// React\nimport React, { useState, useEffect, useCallback } from 'react';\n\n//themes\nimport RCPCHTheme1 from '../components/chartThemes/rcpchTheme1';\nimport RCPCHTheme2 from '../components/chartThemes/rcpchTheme2';\nimport RCPCHTheme3 from '../components/chartThemes/rcpchTheme3';\nimport RCPCHThemeMonochrome from '../components/chartThemes/rcpchThemeMonochrome';\nimport RCPCHThemeTraditionalBoy from '../components/chartThemes/RCPCHThemeTraditionalBoy';\nimport RCPCHThemeTraditionalGirl from '../components/chartThemes/RCPCHThemeTraditionalGirl';\n\n// Semantic UI React\nimport {\n  Grid,\n  Segment,\n  Container,\n  Tab,\n  Dropdown,\n  Button,\n} from 'semantic-ui-react';\nimport axios from 'axios';\n\nimport ChartData from '../api/Chart';\nimport MeasurementForm from '../components/MeasurementForm';\nimport deepCopy from '../functions/deepCopy';\nimport { ResultsSegment, ErrorModal } from './SubComponents';\nimport '../index.css';\n\nfunction MeasurementSegment() {\n  const defaultTheme = RCPCHThemeMonochrome;\n\n  const [chartStyle, setChartSyle] = useState(defaultTheme.chart);\n  const [axisStyle, setAxisStyle] = useState(defaultTheme.axes);\n  const [centileStyle, setCentileStyle] = useState(defaultTheme.centiles);\n  const [measurementStyle, setMeasurementStyle] = useState(\n    defaultTheme.measurements\n  );\n\n  const [theme, setTheme] = useState({\n    value: 'tanner4',\n    text: 'Monochrome',\n  });\n\n  const [flip, setFlip] = useState(false); // flag to determine if results or chart showing\n  const [disabled, setDisabled] = useState({\n    height: false,\n    weight: false,\n    bmi: false,\n    ofc: false,\n  });\n\n  const [measurementMethod, setMeasurementMethod] = useState('height');\n  const [reference, setReference] = useState('uk-who');\n  const [sex, setSex] = useState('male');\n  const [measurements, setMeasurements] = useState(InitialMeasurementState());\n  const [apiResult, setAPIResult] = useState(InitialMeasurementState());\n\n  const [errorModal, setErrorModal] = useState(InitalErrorModalState());\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [commands, setCommands] = useState({\n    clearMeasurement: false,\n    resetCurrent: false,\n    undoLast: false,\n    changeSex: false,\n  });\n\n  let activeIndex;\n\n  switch (measurementMethod) {\n    case 'weight':\n      activeIndex = 1;\n      break;\n    case 'bmi':\n      activeIndex = 2;\n      break;\n    case 'ofc':\n      activeIndex = 3;\n      break;\n    default:\n      //height\n      activeIndex = 0;\n  }\n\n  const removeLast = useCallback(\n    (both = false) => {\n      const newMeasurements = deepCopy(\n        measurements[reference][measurementMethod]\n      );\n      newMeasurements.pop();\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        mutable[reference][measurementMethod] = newMeasurements;\n        return mutable;\n      });\n      if (both) {\n        const newApi = deepCopy(apiResult[reference][measurementMethod]);\n        newApi.pop();\n        setAPIResult((old) => {\n          const mutable = deepCopy(old);\n          mutable[reference][measurementMethod] = newApi;\n          return mutable;\n        });\n      }\n    },\n    [measurements, reference, measurementMethod, apiResult]\n  );\n\n  if (commands.resetCurrent) {\n    const resetCurrent = (old) => {\n      const mutable = deepCopy(old);\n      mutable[reference][measurementMethod] = [];\n      return mutable;\n    };\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to reset?',\n      body: 'This will remove all measurements from the current chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        setMeasurements(resetCurrent);\n        setAPIResult(resetCurrent);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, resetCurrent: false };\n    });\n  }\n\n  if (commands.undoLast) {\n    setErrorModal({\n      visible: true,\n      title: 'Are you sure you want to remove the last measurement?',\n      body: 'This will remove the last measurement entered on the chart.',\n      handleCancel: () => setErrorModal(InitalErrorModalState()),\n      handleClose: () => {\n        removeLast(true);\n        setErrorModal(InitalErrorModalState());\n      },\n    });\n    setCommands((old) => {\n      return { ...old, undoLast: false };\n    });\n  }\n\n  const customSetMeasurementMethod = (newMeasurementMethod) => {\n    if (measurements[reference][newMeasurementMethod].length > 0) {\n      const existingSex = measurements[reference][newMeasurementMethod][0].sex;\n      if (existingSex !== sex) {\n        changeSex(existingSex, true);\n        setCommands((old) => {\n          return { ...old, changeSex: true };\n        });\n      }\n    }\n    setMeasurementMethod(newMeasurementMethod);\n  };\n\n  const handleTabChange = (e, { activeIndex }) => {\n    if (reference === 'turner' && activeIndex !== 0) {\n      setErrorModal({\n        visible: true,\n        title: 'Measurement unavailable',\n        body: \"Only height data is available for Turner's Syndrome.\",\n        handleClose: () => setErrorModal(InitalErrorModalState()),\n      });\n      return null;\n    }\n    let newMeasurementMethod = '';\n    switch (activeIndex) {\n      case 0:\n        newMeasurementMethod = 'height';\n        break;\n      case 1:\n        newMeasurementMethod = 'weight';\n        break;\n      case 2:\n        newMeasurementMethod = 'bmi';\n        break;\n      case 3:\n        newMeasurementMethod = 'ofc';\n        break;\n      default:\n        console.warn('Handle tab change did not pick up valid active index');\n    }\n    customSetMeasurementMethod(newMeasurementMethod);\n  };\n\n  const changeReference = (newReference) => {\n    // call back from MeasurementForm\n    setReference(newReference);\n    if (newReference === 'turner') {\n      setMeasurementMethod('height');\n      setSex('female');\n      setDisabled({\n        height: false,\n        weight: true,\n        bmi: true,\n        ofc: true,\n      });\n      return { newSex: 'female' };\n    } else {\n      setDisabled({\n        height: false,\n        weight: false,\n        bmi: false,\n        ofc: false,\n      });\n      if (\n        apiResult[newReference][measurementMethod].length > 0 &&\n        apiResult[newReference][measurementMethod][0]?.birth_data.sex !== sex\n      ) {\n        setSex(apiResult[newReference][measurementMethod][0].birth_data.sex);\n        return {\n          newSex: apiResult[newReference][measurementMethod][0].birth_data.sex,\n        };\n      } else {\n        return { newSex: sex };\n      }\n    }\n  };\n\n  const changeSex = (newSex, ignoreError = false) => {\n    // call back for MeasurementForm\n    const existingResults = [...measurements[reference][measurementMethod]];\n    if (existingResults.length > 0 && !ignoreError) {\n      for (const oldResult of existingResults) {\n        if (newSex !== oldResult.sex) {\n          setErrorModal({\n            visible: true,\n            title: 'Unable to change sex',\n            body: `Each chart can only display measurements from one patient at a time. Please reset the chart before entering measurements from a new patient.`,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n          return false;\n        }\n      }\n    }\n    if (theme.value === 'trad') {\n      const selectedTheme =\n        newSex === 'male'\n          ? RCPCHThemeTraditionalBoy\n          : RCPCHThemeTraditionalGirl;\n      setCentileStyle(selectedTheme.centiles);\n      setChartSyle(selectedTheme.chart);\n      setMeasurementStyle(selectedTheme.measurements);\n      setAxisStyle(selectedTheme.axes);\n    }\n    setSex(newSex);\n    return true;\n  };\n\n  const handleResults = (results) => {\n    // delegate function from MeasurementForm\n    // receives form data and stores in the correct measurement array\n    // checks for duplicates, mismatching dobs, sexes and gestations\n    const existingResults = deepCopy(\n      measurements[reference][measurementMethod]\n    );\n    let errorString = '';\n    if (existingResults.length > 0) {\n      const latestResult = results[0];\n      const newGestation =\n        latestResult.gestation_weeks * 7 + latestResult.gestation_days;\n      const errors = [];\n      for (const oldResult of existingResults) {\n        if (JSON.stringify(oldResult) === JSON.stringify(latestResult)) {\n          errorString = 'duplicate';\n          break;\n        }\n        const oldGestation =\n          oldResult.gestation_weeks * 7 + oldResult.gestation_days;\n        if (oldResult.sex !== latestResult.sex) {\n          errors.push('differing sexes');\n        }\n        if (oldResult.birth_date !== latestResult.birth_date) {\n          errors.push('differing date of births');\n        }\n        if (oldGestation !== newGestation) {\n          errors.push('differing gestations');\n        }\n        if (errors.length > 0) {\n          errorString = errors[0];\n          if (errors.length === 2) {\n            errorString = errors.join(' and ');\n          } else if (errors.length === 3) {\n            errorString = `${errors[0]}, ${errors[1]} and ${errors[2]}`;\n          }\n          break;\n        }\n      }\n    }\n    if (errorString) {\n      if (errorString === 'duplicate') {\n        setErrorModal({\n          visible: true,\n          title: 'Duplicate entries',\n          body: `Please check the last measurement entry as it appears to be identical to a measurement already entered.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      } else {\n        setErrorModal({\n          visible: true,\n          title: 'Please check entries',\n          body: `Each chart can only display measurements from one patient at a time: ${errorString} were detected.`,\n          handleClose: () => setErrorModal(InitalErrorModalState()),\n        });\n      }\n      return false;\n    } else {\n      setMeasurements((old) => {\n        const mutable = deepCopy(old);\n        const newArray = mutable[reference][measurementMethod].concat(results);\n        mutable[reference][measurementMethod] = newArray;\n        return mutable;\n      });\n      setIsLoading(true);\n      return true;\n    }\n  };\n\n  const handleChangeTheme = (event, { value }) => {\n    let selectedTheme;\n    let text;\n\n    if (value === 'trad') {\n      if (sex === 'male') {\n        selectedTheme = RCPCHThemeTraditionalBoy;\n      } else {\n        selectedTheme = RCPCHThemeTraditionalGirl;\n      }\n      text = 'Traditional';\n    }\n    if (value === 'tanner1') {\n      selectedTheme = RCPCHTheme1;\n      text = 'Tanner 1';\n    }\n    if (value === 'tanner2') {\n      selectedTheme = RCPCHTheme2;\n      text = 'Tanner 2';\n    }\n    if (value === 'tanner3') {\n      selectedTheme = RCPCHTheme3;\n      text = 'Tanner 3';\n    }\n    if (value === 'monochrome') {\n      selectedTheme = RCPCHThemeMonochrome;\n      text = 'Monochrome';\n    }\n\n    setCentileStyle(selectedTheme.centiles);\n    setChartSyle(selectedTheme.chart);\n    setMeasurementStyle(selectedTheme.measurements);\n    setAxisStyle(selectedTheme.axes);\n    setTheme({ value: value, text: text });\n  };\n\n  const handleFlipResults = () => {\n    setFlip(!flip);\n  };\n\n  const panes = panesBlueprint.map((details) => {\n    return {\n      menuItem: details.menuItem,\n      render: () => (\n        <Tab.Pane attached=\"top\" disabled={disabled[details.measurementName]}>\n          <ChartData\n            key={details.measurementName}\n            reference={reference}\n            sex={sex}\n            measurementMethod={details.measurementName}\n            measurementsArray={apiResult[reference][details.measurementName]}\n            chartStyle={chartStyle}\n            axisStyle={axisStyle}\n            gridlineStyle={defaultTheme.gridlines}\n            centileStyle={centileStyle}\n            measurementStyle={measurementStyle}\n            isLoading={isLoading}\n          />\n          {/* <Acknowledgements /> */}\n        </Tab.Pane>\n      ),\n    };\n  });\n\n  const TabPanes = () => (\n    <Tab\n      menu={{ attached: 'top' }}\n      panes={panes}\n      activeIndex={activeIndex}\n      onTabChange={handleTabChange}\n    />\n  );\n\n  const ThemeSelection = () => (\n    // <Menu compact className=\"selectUpperMargin\">\n    <span>\n      Theme{' '}\n      <Dropdown\n        options={themeOptions}\n        floating\n        inline\n        onChange={handleChangeTheme}\n        text={theme.text}\n      />\n    </span>\n    // </Menu>\n  );\n\n  useEffect(() => {\n    const fetchCentilesForMeasurement = async (singleMeasurement) => {\n      const url = `${process.env.REACT_APP_GROWTH_API_BASEURL}/${reference}/calculation`;\n      const response = await axios({\n        url: url,\n        data: singleMeasurement,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      return response.data;\n    };\n\n    let ignore = false;\n\n    if (isLoading) {\n      const relevantArray = measurements[reference][measurementMethod];\n      const latestMeasurement = deepCopy(\n        relevantArray[relevantArray.length - 1]\n      );\n      fetchCentilesForMeasurement(latestMeasurement)\n        .then((result) => {\n          if (!ignore) {\n            if (\n              result.measurement_calculated_values\n                .corrected_measurement_error ||\n              result.measurement_calculated_values\n                .chronological_measurement_error\n            ) {\n              const measurementError =\n                result.measurement_calculated_values\n                  .corrected_measurement_error ||\n                result.measurement_calculated_values\n                  .chronological_measurement_error;\n              setIsLoading(false);\n              removeLast();\n              setErrorModal({\n                visible: true,\n                title: 'Unable to plot',\n                body: `Measurement entered cannot be processed by the server. Reason given: ${measurementError}`,\n                handleClose: () => setErrorModal(InitalErrorModalState()),\n              });\n            } else {\n              setIsLoading(false);\n              setAPIResult((old) => {\n                const mutable = deepCopy(old);\n                const workingArray = deepCopy(\n                  mutable[reference][measurementMethod]\n                );\n                workingArray.push(result);\n                mutable[reference][measurementMethod] = workingArray;\n                return mutable;\n              });\n              setCommands((old) => {\n                return { ...old, clearMeasurement: true };\n              });\n            }\n          }\n        })\n        .catch((error) => {\n          setIsLoading(false);\n          const errorForUser = `There has been a problem fetching the result from the server. Error details: ${error.message} `;\n          removeLast();\n          setErrorModal({\n            visible: true,\n            title: 'Server error',\n            body: errorForUser,\n            handleClose: () => setErrorModal(InitalErrorModalState()),\n          });\n        });\n    }\n\n    return () => {\n      // this prevents data being added to state if unmounted\n      ignore = true;\n    };\n  }, [\n    isLoading,\n    measurementMethod,\n    reference,\n    apiResult,\n    measurements,\n    removeLast,\n  ]);\n\n  return (\n    <React.Fragment>\n          <Container>\n      <Grid padded>\n        <Grid.Row>\n          <Grid.Column width={6}> \n                <MeasurementForm\n                  measurementResult={handleResults}\n                  handleChangeReference={changeReference}\n                  handleChangeSex={changeSex}\n                  measurementMethod={measurementMethod}\n                  setMeasurementMethod={customSetMeasurementMethod}\n                  commands={commands}\n                  setCommands={setCommands}\n                  className=\"measurement-form\"\n                />\n          </Grid.Column>\n          <Grid.Column width={10}>\n            <Segment>\n              {flip ? (\n                <ResultsSegment apiResult={apiResult} reference={reference} />\n              ) : (\n                <TabPanes />\n              )}\n              <Grid verticalAlign=\"middle\">\n                <Grid.Row columns={2}>\n                  <Grid.Column textAlign=\"left\">\n                    <ThemeSelection />\n                  </Grid.Column>\n                  <Grid.Column textAlign=\"right\">\n                    <Button\n                      className=\"selectUpperMargin\"\n                      onClick={handleFlipResults}\n                    >\n                      Results\n                    </Button>\n                  </Grid.Column>\n                </Grid.Row>\n              </Grid>\n              </Segment>\n          </Grid.Column>\n        </Grid.Row>\n      </Grid> \n      </Container>\n      <ErrorModal\n        title={errorModal.title}\n        body={errorModal.body}\n        visible={errorModal.visible}\n        handleClose={errorModal.handleClose}\n        handleCancel={errorModal.handleCancel}\n      />\n    </React.Fragment>\n  );\n}\n\nconst panesBlueprint = [\n  { menuItem: 'Height', measurementName: 'height' },\n  { menuItem: 'Weight', measurementName: 'weight' },\n  { menuItem: 'BMI', measurementName: 'bmi' },\n  {\n    menuItem: 'Head Circumference',\n    measurementName: 'ofc',\n  },\n];\n\nconst themeOptions = [\n  { key: 'monochrome', value: 'monochrome', text: 'Monochrome' },\n  { key: 'trad', value: 'trad', text: 'Traditional' },\n  { key: 'tanner1', value: 'tanner1', text: 'Tanner 1' },\n  { key: 'tanner2', value: 'tanner2', text: 'Tanner 2' },\n  { key: 'tanner3', value: 'tanner3', text: 'Tanner 3' },\n];\n\nfunction InitialMeasurementState() {\n  return {\n    turner: {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'trisomy-21': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n    'uk-who': {\n      height: [],\n      weight: [],\n      bmi: [],\n      ofc: [],\n    },\n  };\n}\n\nfunction InitalErrorModalState() {\n  return {\n    visible: false,\n    title: '',\n    body: '',\n    handleClose: null,\n    handleCancel: null,\n  };\n}\n\nexport default MeasurementSegment;\n","import React from \"react\";\n\nimport MeasurementSegment from \"../components/MeasurementSegment\";\n\nfunction Home() {\n  return (\n    <div>\n      <MeasurementSegment />\n    </div>\n  );\n}\n\nexport default Home;\n","// React\nimport React from \"react\";\nimport \"./App.css\";\n\n// RCPCH Components\nimport \"./components/MeasurementForm\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","// React\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// Semantic UI React\nimport \"semantic-ui-less/semantic.less\";\n\n// CSS\nimport \"./index.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}